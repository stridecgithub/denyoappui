{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/addorgcharttwo/addorgcharttwo.ts","../../src/pages/addorgchartone/addorgchartone.ts","../../src/pages/editprofilesteptwo/editprofilesteptwo.ts","../../src/pages/editprofilestepone/editprofilestepone.ts","../../src/pages/userorgchart/userorgchart.ts","../../src/pages/useraccount/useraccount.ts","../../src/pages/adduser/adduser.ts","../../src/pages/user/user.ts","../../src/pages/addrole/addrole.ts","../../src/pages/role/role.ts","../../src/pages/addreporttemplate/addreporttemplate.ts","../../src/pages/reporttemplate/reporttemplate.ts","../../src/pages/myaccount/myaccount.ts","../../src/pages/popover/popover.ts","../../src/pages/orgchart/orgchart.ts","../../src/pages/email/email.ts","../../src/pages/addcommentsinfo/addcommentsinfo.ts","../../src/pages/addunitgroup/addunitgroup.ts","../../src/pages/unitgrouplist/unitgrouplist.ts","../../src/pages/unitgroup/unitgroup.ts","../../src/pages/trendline/trendline.ts","../../src/pages/alarm/alarm.ts","../../src/pages/alarmlistdetail/alarmlistdetail.ts","../../src/pages/addalarmlist/addalarmlist.ts","../../src/pages/commentdetails/commentdetails.ts","../../src/pages/servicedetails/servicedetails.ts","../../src/pages/commentsinfo/commentsinfo.ts","../../src/pages/enginedetailview/enginedetailview.ts","../../src/pages/viewunits/viewunits.ts","../../src/pages/unitdetails/unitdetails.ts","../../src/pages/alarmlog/alarmlog.ts","../../src/pages/addalarm/addalarm.ts","../../src/pages/alarmdetails/alarmdetails.ts","../../src/pages/calendardetail/calendardetail.ts","../../src/pages/addcalendar/addcalendar.ts","../../src/components/calendar/calendar.component.ts","../../src/pages/calendar/calendar.ts","../../src/pages/viewcompanygroup/viewcompanygroup.ts","../../src/pages/maps/maps.ts","../../src/pages/addcompanygroup/addcompanygroup.ts","../../src/pages/companydetail/companydetail.ts","../../src/pages/companygroup/companygroup.ts","../../src/pages/addrequestsupport/addrequestsupport.ts","../../src/pages/servicinginfo/servicinginfo.ts","../../src/pages/addserviceinfo/addserviceinfo.ts","../../src/pages/notification/notification.ts","../../src/pages/addunitsfour/addunitsfour.ts","../../src/pages/addunitsthree/addunitsthree.ts","../../src/pages/addunitstwo/addunitstwo.ts","../../src/pages/addunitsone/addunitsone.ts","../../src/pages/units/units.ts","../../src/pages/reportviewtable/reportviewtable.ts","../../src/pages/reports/reports.ts","../../src/pages/dashboard/dashboard.ts","../../src/pages/forgotpassword/forgotpassword.ts","../../src/pages/home/home.ts","../../src/pages/engineview/engineview.ts","../../src/pages/enginedetail/enginedetail.ts","../../src/pages/addenginedetail/addenginedetail.ts","../../src/providers/data-service/data-service.ts","../../src/app/app.component.ts","../../src/pages/custom-header-component.ts","../../src/pages/custom-footer-component.ts","../../src/app/app.module.ts","../../src/app/app.module.ngfactory.ts","../../node_modules/moment/locale ^/.*$"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module","exports","id","email___decorate","this","__decorate","decorators","target","key","desc","calendar___decorate","maps___decorate","notification___decorate","units___decorate","data_service___decorate","_super","webpackContext","__webpack_require__","webpackContextResolve","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","Object"],"mappings":"oCAAA,SAAAA,EAAAC,GAGA,OAAAC,QAAAC,UAAAC,KAAA,WACA,MAAA,IAAAC,MAAA,uBAAAJ,EAAA,QAGAD,EAAAM,KAAA,WAA4C,UAC5CN,EAAAG,QAAAH,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,uBCVA,SAAAT,EAAAC,GAGA,OAAAC,QAAAC,UAAAC,KAAA,WACA,MAAA,IAAAC,MAAA,uBAAAJ,EAAA,QAGAD,EAAAM,KAAA,WAA4C,UAC5CN,EAAAG,QAAAH,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,s/r+CCuBwB,0lQAAA,MCHA,i2LAAA,MCCI,stJAAA,MCFA,09JAAA,MCEN,stRAAA,MCHD,qxMAAA,MCIJ,mnPAAA,MCHH,ipKAAA,MCFG,4kiBAAA,MCCH,y3IAAA,MCCa,o+IAAA,MCAH,8xJAAA,MCCL,ipGAAA,MCZF,uiCAAA,MCcC,mnIAAA,GChClBC,GAAAC,MAAAA,KAAAC,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,kcAgC6B,ypjBAAA,ilCCAJ,ijUAAA,MCLH,07JAAA,MCGH,skRAAA,MCDA,qqOAAA,MCJA,0pCAAA,MCUJ,woKAAA,MCNU,q1FAAA,MCDH,89HAAA,MCAE,skKAAA,MCEA,45LAAA,MCGF,8+QAAA,MCLI,uuGAAA,MCPP,ggGAAA,MCWE,u2JAAA,MCFH,mnKAAA,MCHA,q6HAAA,MCCI,66GAAA,MCDE,uuEAAA,MCAH,m4QAAA,MCDE,shpBAAA,GC1BvBC,GAAAN,MAAAA,KAAAC,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,kcAmBmC,4uVAAA,2WCKT,s6BAAA,YCxB1BE,GAAAP,MAAAA,KAAAC,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,kcA4B2B,siVAAA,qoBCDF,irhBAAA,MCCF,4mGAAA,MCED,08LAAA,MCAK,09TAAA,MCKJ,y2OAAA,MCFC,oicAAA,GCjCxBG,GAAAR,MAAAA,KAAAC,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,kcAiC2C,86JAAA,2lBCNrB,ioQAAA,MCCC,qtUAAA,MCAF,4lMAAA,gBCAA,45GAAA,GC5BrBI,GAAAT,MAAAA,KAAAC,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,kcA6B6B,+5UAAA,ufCFJ,i9IAAA,MCJR,msHAAA,MCHE,0vCAAA,MCAK,03CAAA,MCFV,6qYAAA,MCEM,ohDAAA,MCSE,msHAAA,MCFG,+6FAAA,GC3BzBK,GAAAV,MAAAA,KAAAC,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,+bAkByB,kNAAA,gKC6Bd,isMAAA,MCnCgB,oQAAA,MCIA,qhBAAA,0BCmEZ,+BAAA,+/qBCkDQ,SAAAM,+weAAA,0KCmGvB,SAAAC,EAAAtB,GACA,OAAAuB,EAAAC,EAAAxB,IAEA,SAAAwB,EAAAxB,GACA,IAAAQ,EAAAiB,EAAAzB,GACA,KAAAQ,EAAA,GACA,MAAA,IAAAJ,MAAA,uBAAAJ,EAAA,MACA,OAAAQ,EA/OA,IAAAiB,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAWAzO,EAAAjB,KAAA,WACA,OAAA2P,OAAA3P,KAAAoB,IAEAH,EAAApB,QAAAsB,EACAlB,EAAAC,QAAAe,EACAA,EAAAd,GAAA","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 159;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 159\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 168;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 168\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n//import { UserPage } from '../user/user';\r\n//import { UseraccountPage } from '../useraccount/useraccount';\r\nimport { AddorgchartonePage } from '../addorgchartone/addorgchartone';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport 'rxjs/add/operator/map';\r\n//import { HomePage } from '../home/home';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddorgcharttwoPage = (function () {\r\n    function AddorgcharttwoPage(navCtrl, http, NP, fb, toastCtrl, transfer, ngZone) {\r\n        var _this = this;\r\n        this.navCtrl = navCtrl;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.transfer = transfer;\r\n        this.ngZone = ngZone;\r\n        // Define FormBuilder /model properties\r\n        this.userInfo = [];\r\n        this.userdata = [];\r\n        this.len = 0;\r\n        this.isSubmitted = false;\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"job_position\": [\"\", Validators.required],\r\n            \"company_group\": [\"\", Validators.required],\r\n            \"report_to\": [\"\"]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddorgcharttwoPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddorgcharttwoPage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddorgcharttwoPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    AddorgcharttwoPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getCompanyGroupListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"User Org Chart:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit Org Chart';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            var editItem = this.NP.get(\"record\");\r\n            this.job_position = editItem.job_position;\r\n            this.company_group = editItem.company_id;\r\n            this.report_to = editItem.report_to;\r\n            this.getUserListData();\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Edit Org Chart';\r\n        }\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log(\"info.first_name\" + info.first_name);\r\n            console.log(\"info.first_name array\" + info['first_name']);\r\n            console.log(\"info.first_name array 0\" + info[0]['first_name']);\r\n            var keyindex = info.length - 1;\r\n            this.first_name = info[keyindex]['first_name'];\r\n            this.last_name = info[keyindex]['last_name'];\r\n            this.email = info[keyindex]['email'];\r\n            this.country = info[keyindex]['country'];\r\n            this.contact = info[keyindex]['contact'];\r\n            this.photo = info[keyindex]['photo'];\r\n            this.createdby = info[keyindex]['createdby'];\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddorgcharttwoPage.prototype.selectEntry = function (item) {\r\n        this.job_position = item.job_position;\r\n        this.company_group = item.company_id;\r\n        this.report_to = item.report_to;\r\n        this.recordID = item.staff_id;\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddorgcharttwoPage.prototype.createEntry = function (userdata, userid) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var userPhotoFile = localStorage.getItem(\"userPhotoFile\");\r\n        if (userPhotoFile) {\r\n            console.log(\"Upload Device Image File:\" + userPhotoFile);\r\n            this.fileTrans(userPhotoFile);\r\n        }\r\n        if (this.photo == undefined) {\r\n            this.photo = '';\r\n        }\r\n        if (this.photo == 'undefined') {\r\n            this.photo = '';\r\n        }\r\n        this.contact = this.contact.replace(\"+\", \"%2B\");\r\n        var body = \"is_mobile=1&firstname=\" + this.first_name +\r\n            \"&lastname=\" + this.last_name +\r\n            \"&photo=\" + this.photo +\r\n            \"&email=\" + this.email +\r\n            \"&country_id=\" + this.country +\r\n            \"&contact_number=\" + this.contact +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&report_to=\" + this.report_to +\r\n            \"&company_id=\" + this.company_group +\r\n            \"&job_position=\" + this.job_position, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/orgchart/store\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"User created was successfully added\");\r\n                localStorage.setItem(\"userPhotoFile\", \"\");\r\n                _this.navCtrl.setRoot(OrgchartPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddorgcharttwoPage.prototype.updateEntry = function (userdata, userid) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var userPhotoFile = localStorage.getItem(\"userPhotoFile\");\r\n        if (userPhotoFile) {\r\n            console.log(\"Upload Device Image File:\" + userPhotoFile);\r\n            this.fileTrans(userPhotoFile);\r\n        }\r\n        if (this.photo == undefined) {\r\n            this.photo = '';\r\n        }\r\n        if (this.photo == 'undefined') {\r\n            this.photo = '';\r\n        }\r\n        this.contact = this.contact.replace(\"+\", \"%2B\");\r\n        var body = \"is_mobile=1&staff_id=\" + this.recordID +\r\n            \"&firstname=\" + this.first_name +\r\n            \"&lastname=\" + this.last_name +\r\n            \"&photo=\" + this.photo +\r\n            \"&email=\" + this.email +\r\n            \"&country_id=\" + this.country +\r\n            \"&contact_number=\" + this.contact +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&report_to=\" + this.report_to +\r\n            \"&company_id=\" + this.company_group +\r\n            \"&job_position=\" + this.job_position, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/orgchart/update\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"successfully updated\");\r\n                _this.navCtrl.setRoot(OrgchartPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddorgcharttwoPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var companygroup_name = this.form.controls[\"companygroup_name\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/api/users.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + companygroup_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddorgcharttwoPage.prototype.saveEntry = function () {\r\n        var job_position = this.form.controls[\"job_position\"].value, company_group = this.form.controls[\"company_group\"].value, report_to = this.form.controls[\"report_to\"].value;\r\n        this.userInfo.push({\r\n            'job_position': job_position,\r\n            'company_group': company_group,\r\n            'report_to': report_to,\r\n            'first_name': this.first_name,\r\n            'last_name': this.last_name,\r\n            'photo': this.photo,\r\n            'email': this.email,\r\n            'country': this.country,\r\n            'contact': this.contact,\r\n            'createdby': this.createdby,\r\n            'username': this.username,\r\n            'password': this.password,\r\n            'hashtag': this.hashtag,\r\n            'role': this.role\r\n        });\r\n        if (this.isEdited) {\r\n            this.updateEntry(this.userInfo, this.userId);\r\n        }\r\n        else {\r\n            this.createEntry(this.userInfo, this.userId);\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddorgcharttwoPage.prototype.resetFields = function () {\r\n        this.companygroup_name = \"\";\r\n        this.address = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddorgcharttwoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddorgcharttwoPage.prototype.getCompanyGroupListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getcompanies?loginid=\" + this.userId;\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCompanyGroup = res.companies;\r\n        });\r\n    };\r\n    AddorgcharttwoPage.prototype.getUserListData = function () {\r\n        var _this = this;\r\n        if (this.isEdited == true) {\r\n            this.userId = this.recordID;\r\n            var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getstaffs?loginid=\" + this.userId + \"&company_id=\" + this.company_group;\r\n            var res_1;\r\n            console.log(\"Report To API:\" + url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                res_1 = data.json();\r\n                // this.responseResultReportTo=\"N/A\";\r\n                if (_this.report_to == 0) {\r\n                    console.log(\"LENGTH\" + _this.report_to);\r\n                    _this.len = 0;\r\n                }\r\n                else {\r\n                    _this.len = res_1.TotalCount;\r\n                }\r\n                console.log(\"length\" + res_1.TotalCount);\r\n                // this.naDisplay = 1;\r\n                _this.responseResultReportTo = res_1.staffslist;\r\n            });\r\n        }\r\n        else {\r\n            var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getstaffs?loginid=\" + this.userId + \"&company_id=\" + this.company_group;\r\n            var res_2;\r\n            console.log(\"Report To API:\" + url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                res_2 = data.json();\r\n                // this.responseResultReportTo=\"N/A\";\r\n                _this.len = res_2.TotalCount;\r\n                console.log(\"length\" + res_2.TotalCount);\r\n                // this.naDisplay = 1;\r\n                _this.responseResultReportTo = res_2.staffslist;\r\n            });\r\n        }\r\n    };\r\n    AddorgcharttwoPage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(AddorgchartonePage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddorgcharttwoPage.prototype.fileTrans = function (path) {\r\n        var _this = this;\r\n        var fileName = path.substr(path.lastIndexOf('/') + 1);\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        this.photo = currentName;\r\n        console.log(\"File Name is:\" + currentName);\r\n        /*var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpg\";*/\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: fileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/upload.php', options)\r\n            .then(function (data) {\r\n            console.log(JSON.stringify(data));\r\n            console.log(\"UPLOAD SUCCESS:\" + data.response);\r\n            var successData = JSON.parse(data.response);\r\n            _this.userInfo.push({\r\n                photo: successData\r\n            });\r\n            //this.sendNotification(\"User photo uploaded successfully\");\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            // this.isUploadedProcessing = false;\r\n            // return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\");\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    AddorgcharttwoPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    AddorgcharttwoPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    AddorgcharttwoPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    AddorgcharttwoPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    AddorgcharttwoPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    AddorgcharttwoPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    AddorgcharttwoPage.prototype.onSegmentChanged = function () {\r\n        console.log(\"ID\" + this.company_group);\r\n        this.getUserListData();\r\n    };\r\n    return AddorgcharttwoPage;\r\n}());\r\nAddorgcharttwoPage = __decorate([\r\n    Component({\r\n        selector: 'page-addorgcharttwo',\r\n        templateUrl: 'addorgcharttwo.html',\r\n        providers: [FileChooser, Transfer, File]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _f || Object, typeof (_g = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _g || Object])\r\n], AddorgcharttwoPage);\r\nexport { AddorgcharttwoPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=addorgcharttwo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addorgcharttwo/addorgcharttwo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddorgcharttwoPage } from '../addorgcharttwo/addorgcharttwo';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport 'rxjs/add/operator/map';\r\n/**\r\n * Generated class for the AddorgchartonePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddorgchartonePage = (function () {\r\n    function AddorgchartonePage(nav, http, NP, fb, toastCtrl, loadingCtrl, camera, transfer, ngZone) {\r\n        var _this = this;\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.camera = camera;\r\n        this.transfer = transfer;\r\n        this.ngZone = ngZone;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.userInfo = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            //\"first_name\": [\"\", Validators.required],\r\n            //\"last_name\": [\"\", Validators.required],\r\n            \"first_name\": [\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n            \"last_name\": [\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n            \"country\": [\"\", Validators.required],\r\n            \"contact\": [\"\", Validators.required],\r\n            \"primary\": [\"\", Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(5)])],\r\n            /// \"email\": [\"\", Validators.required]\r\n            'email': ['', Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(50), Validators.pattern(/^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i)])],\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddorgchartonePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddorgchartonePage');\r\n        this.pageLoad();\r\n    };\r\n    AddorgchartonePage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    AddorgchartonePage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getJsonCountryListData();\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Add User:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit Org Chart';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            if (this.NP.get(\"record\").photo) {\r\n                this.addedImgLists = this.apiServiceURL + \"/staffphotos/\" + this.NP.get(\"record\").photo;\r\n                console.log(this.addedImgLists);\r\n            }\r\n            var editItem = this.NP.get(\"record\");\r\n            this.first_name = editItem.firstname;\r\n            this.last_name = editItem.lastname;\r\n            this.email = editItem.email;\r\n            this.country = editItem.country_id;\r\n            this.contact = editItem.contact_number;\r\n            if (this.contact != undefined) {\r\n                var contactSplitSpace = this.contact.split(\" \");\r\n                this.primary = contactSplitSpace[0];\r\n                this.contact = contactSplitSpace[1];\r\n            }\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Add Org Chart';\r\n        }\r\n        /*this.first_name = \"Kannan\";\r\n        this.last_name = \"Nagarathinam\";\r\n        this.email = \"kannanrathvalli@gmail.com\";\r\n        this.country = \"238\";\r\n        this.contact = \"9443976954\";*/\r\n    };\r\n    AddorgchartonePage.prototype.getPrimaryContact = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation = '';\r\n        }\r\n    };\r\n    AddorgchartonePage.prototype.selectEntry = function (item) {\r\n        this.first_name = item.first_name;\r\n        this.last_name = item.last_name;\r\n        this.email = item.email;\r\n        this.country = item.country;\r\n        this.contact = item.contact;\r\n        this.photo = item.photo;\r\n        this.recordID = item.userid;\r\n    };\r\n    AddorgchartonePage.prototype.resetFields = function () {\r\n        this.first_name = \"\";\r\n        this.last_name = \"\";\r\n        this.email = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    AddorgchartonePage.prototype.createEntry = function (first_name, last_name, email, country, contact, createdby) {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            email: email,\r\n            country: country,\r\n            contact: contact,\r\n            createdby: createdby,\r\n        });\r\n        this.nav.setRoot(AddorgcharttwoPage, {\r\n            accountInfo: this.userInfo\r\n        });\r\n    };\r\n    AddorgchartonePage.prototype.updateEntry = function (first_name, last_name, email, country, contact, createdby) {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            email: email,\r\n            country: country,\r\n            contact: contact,\r\n            createdby: createdby,\r\n        });\r\n        this.nav.setRoot(AddorgcharttwoPage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddorgchartonePage.prototype.getJsonCountryListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getCountries\";\r\n        console.log(url);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCountry = res.countries;\r\n        });\r\n    };\r\n    AddorgchartonePage.prototype.saveEntry = function () {\r\n        var first_name = this.form.controls[\"first_name\"].value, last_name = this.form.controls[\"last_name\"].value, email = this.form.controls[\"email\"].value, country = this.form.controls[\"country\"].value, contact = this.form.controls[\"contact\"].value, primary = this.form.controls[\"primary\"].value;\r\n        contact = primary + \" \" + contact;\r\n        console.log(contact);\r\n        /*if (this.addedImgLists) {\r\n          this.isUploadedProcessing = true;\r\n        }*/\r\n        if (this.isUploadedProcessing == false) {\r\n            if (this.isEdited) {\r\n                this.updateEntry(first_name, last_name, email, country, contact, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(first_name, last_name, email, country, contact, this.userId);\r\n            }\r\n        }\r\n    };\r\n    AddorgchartonePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AddorgchartonePage.prototype.doUploadPhoto = function () {\r\n        var _this = this;\r\n        var options = {\r\n            quality: 75,\r\n            destinationType: this.camera.DestinationType.FILE_URI,\r\n            targetWidth: 200,\r\n            targetHeight: 200,\r\n            sourceType: 1\r\n        };\r\n        this.camera.getPicture(options).then(function (imageData) {\r\n            console.log(imageData);\r\n            localStorage.setItem(\"userPhotoFile\", imageData);\r\n            //this.fileTrans(imageData);\r\n            _this.uploadResultBase64Data = imageData;\r\n            _this.addedImgLists = imageData;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n        }, function (err) {\r\n            // Handle error\r\n            _this.sendNotification(err);\r\n        });\r\n    };\r\n    AddorgchartonePage.prototype.fileTrans = function (path) {\r\n        var _this = this;\r\n        var fileName = path.substr(path.lastIndexOf('/') + 1);\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        this.photo = currentName;\r\n        console.log(\"File Name is:\" + currentName);\r\n        /*var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpg\";*/\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: fileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/upload.php', options)\r\n            .then(function (data) {\r\n            console.log(JSON.stringify(data));\r\n            console.log(\"UPLOAD SUCCESS:\" + data.response);\r\n            var successData = JSON.parse(data.response);\r\n            _this.userInfo.push({\r\n                photo: successData\r\n            });\r\n            _this.sendNotification(\"User photo uploaded successfully\");\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\");\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    AddorgchartonePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddorgchartonePage.prototype.previous = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    AddorgchartonePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddorgchartonePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddorgchartonePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddorgchartonePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddorgchartonePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddorgchartonePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddorgchartonePage;\r\n}());\r\nAddorgchartonePage = __decorate([\r\n    Component({\r\n        selector: 'page-addorgchartone',\r\n        templateUrl: 'addorgchartone.html',\r\n        providers: [Camera, FileChooser, Transfer]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object, typeof (_g = typeof Camera !== \"undefined\" && Camera) === \"function\" && _g || Object, typeof (_h = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _h || Object, typeof (_j = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _j || Object])\r\n], AddorgchartonePage);\r\nexport { AddorgchartonePage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n//# sourceMappingURL=addorgchartone.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addorgchartone/addorgchartone.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { EditprofilesteponePage } from '../editprofilestepone/editprofilestepone';\r\nimport 'rxjs/add/operator/map';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar EditprofilesteptwoPage = (function () {\r\n    function EditprofilesteptwoPage(nav, http, NP, fb, toastCtrl, transfer, ngZone) {\r\n        var _this = this;\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.transfer = transfer;\r\n        this.ngZone = ngZone;\r\n        // Define FormBuilder /model properties\r\n        this.userInfo = [];\r\n        this.userdata = [];\r\n        this.isSubmitted = false;\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"hashtag\": [\"\", Validators.required],\r\n            \"country\": [\"\", Validators.required]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    EditprofilesteptwoPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad EditprofilesteptwoPage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    EditprofilesteptwoPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    EditprofilesteptwoPage.prototype.pageLoad = function () {\r\n        this.resetFields();\r\n        this.getJsonCountryListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"User Org Chart:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit User';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            var editItem = this.NP.get(\"record\");\r\n            this.job_position = editItem.job_position;\r\n            this.company_group = editItem.company_id;\r\n            this.report_to = editItem.report_to;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Edit User';\r\n        }\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log(\"info.first_name\" + info.first_name);\r\n            console.log(\"info.first_name array\" + info['first_name']);\r\n            console.log(\"info.first_name array 0\" + info[0]['first_name']);\r\n            var keyindex = info.length - 1;\r\n            this.first_name = info[keyindex]['first_name'];\r\n            this.last_name = info[keyindex]['last_name'];\r\n            this.email = info[keyindex]['email'];\r\n            this.country = info[keyindex]['country'];\r\n            this.contact = info[keyindex]['contact'];\r\n            this.photo = info[keyindex]['photo'];\r\n            this.createdby = info[keyindex]['createdby'];\r\n            this.username = info[keyindex]['username'];\r\n            this.password = info[keyindex]['password'];\r\n            this.hashtag = info[keyindex]['hashtag'];\r\n            this.role = info[keyindex]['role'];\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    EditprofilesteptwoPage.prototype.selectEntry = function (item) {\r\n        /*this.job_position = item.job_position;\r\n        this.company_group = item.company_id;\r\n        this.report_to = item.report_to;\r\n        this.recordID = item.staff_id;*/\r\n        console.log(\"Select Entty\" + JSON.stringify(item));\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    EditprofilesteptwoPage.prototype.updateEntry = function (country, hashtag, userid) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        //http://denyoappv2.stridecdev.com/settings/profileupdate?is_mobile=1&username=newtestmdv&loggedin_id=14\r\n        var userPhotoFile = localStorage.getItem(\"userPhotoFile\");\r\n        if (userPhotoFile) {\r\n            console.log(\"Upload Device Image File:\" + userPhotoFile);\r\n            this.fileTrans(userPhotoFile);\r\n        }\r\n        this.contact = this.contact.replace(\"+\", \"%2B\");\r\n        var body = \"is_mobile=1&loggedin_id=\" + userid +\r\n            \"&firstname=\" + this.first_name +\r\n            \"&lastname=\" + this.last_name +\r\n            \"&photo=\" + this.photo +\r\n            \"&email=\" + this.email +\r\n            \"&country_id=\" + country +\r\n            \"&contact_number=\" + this.contact +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&username=\" + this.username +\r\n            \"&password=\" + this.password +\r\n            \"&personalhashtag=\" + hashtag, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/settings/profileupdate\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                if (!userPhotoFile) {\r\n                    localStorage.setItem(\"userPhotoFile\", \"\");\r\n                    _this.sendNotification(\"User profile successfully updated\");\r\n                    _this.nav.setRoot(MyaccountPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    EditprofilesteptwoPage.prototype.saveEntry = function () {\r\n        var country = this.form.controls[\"country\"].value, hashtag = this.form.controls[\"hashtag\"].value;\r\n        this.updateEntry(country, hashtag, this.userId);\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    EditprofilesteptwoPage.prototype.resetFields = function () {\r\n        this.companygroup_name = \"\";\r\n        this.address = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    EditprofilesteptwoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    EditprofilesteptwoPage.prototype.fileTrans = function (path) {\r\n        var _this = this;\r\n        var fileName = path.substr(path.lastIndexOf('/') + 1);\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        this.photo = currentName;\r\n        console.log(\"File Name is:\" + currentName);\r\n        /*var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpg\";*/\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: fileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        // this.sendNotification(`profile photo uploaded few minutes redirect to my account page. please wait`);\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/upload.php', options)\r\n            .then(function (data) {\r\n            console.log(JSON.stringify(data));\r\n            localStorage.setItem(\"userPhotoFile\", \"\");\r\n            console.log(\"UPLOAD SUCCESS:\" + data.response);\r\n            var successData = JSON.parse(data.response);\r\n            _this.userInfo.push({\r\n                photo: successData\r\n            });\r\n            //this.sendNotification(\"User photo uploaded successfully\");\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            // this.isUploadedProcessing = false;\r\n            // return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n            _this.sendNotification(\"User profile successfully updated\");\r\n            _this.nav.setRoot(MyaccountPage);\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\");\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    EditprofilesteptwoPage.prototype.getJsonCountryListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/api/countries.php\";\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCountry = res;\r\n        });\r\n    };\r\n    //http://denyoappv2.stridecdev.com/staff/store\r\n    //main.js:61474 firstname=Kannan&lastname=Naga&photo=undefined&email=kn@gmail.com&country_id=4&contact_number=123456789&createdby=1&updatedby=1&username=nk&password=nk&role_id=1&personalhashtag=@nk&report_to=3&company_id=13&job_position=At prg\r\n    //main.js:61622 File Name is:1497379310688.jpg\r\n    EditprofilesteptwoPage.prototype.previous = function () {\r\n        this.nav.setRoot(EditprofilesteponePage);\r\n    };\r\n    EditprofilesteptwoPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    EditprofilesteptwoPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    EditprofilesteptwoPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    EditprofilesteptwoPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    EditprofilesteptwoPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    EditprofilesteptwoPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return EditprofilesteptwoPage;\r\n}());\r\nEditprofilesteptwoPage = __decorate([\r\n    Component({\r\n        selector: 'page-editprofilesteptwo',\r\n        templateUrl: 'editprofilesteptwo.html',\r\n        providers: [FileChooser, Transfer, File]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _f || Object, typeof (_g = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _g || Object])\r\n], EditprofilesteptwoPage);\r\nexport { EditprofilesteptwoPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=editprofilesteptwo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/editprofilesteptwo/editprofilesteptwo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { EditprofilesteptwoPage } from '../editprofilesteptwo/editprofilesteptwo';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport 'rxjs/add/operator/map';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar EditprofilesteponePage = (function () {\r\n    function EditprofilesteponePage(nav, http, NP, fb, toastCtrl, loadingCtrl, camera) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.camera = camera;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.userInfo = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            //\"first_name\": [\"\", Validators.required],\r\n            //\"last_name\": [\"\", Validators.required],\r\n            \"first_name\": [\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n            \"last_name\": [\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n            \"username\": [\"\", Validators.required],\r\n            \"password\": [\"\", Validators.required],\r\n            \"contact\": [\"\", Validators.required],\r\n            \"primary\": [\"\", Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(5)])],\r\n            'email': ['', Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(50), Validators.pattern(/^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i)])]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    EditprofilesteponePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad EditprofilesteponePage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    EditprofilesteponePage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    EditprofilesteponePage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        this.resetFields();\r\n        this.pageTitle = 'Edit Profile';\r\n        var userInf = localStorage.getItem(\"userInfo\");\r\n        console.log(\"User Information Storage:\" + JSON.stringify(userInf));\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/settings/profile?is_mobile=1&loggedin_id=\" + this.userId;\r\n        console.log(url);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.settings.length);\r\n            console.log(\"2\" + res.settings);\r\n            _this.first_name = res.settings[0].firstname;\r\n            _this.last_name = res.settings[0].lastname;\r\n            console.log(res.settings[0].firstname);\r\n            _this.username = res.settings[0].username;\r\n            _this.contact = res.settings[0].contact_number;\r\n            if (_this.contact != undefined) {\r\n                var contactSplitSpace = _this.contact.split(\" \");\r\n                _this.primary = contactSplitSpace[0];\r\n                _this.contact = contactSplitSpace[1];\r\n            }\r\n            _this.email = res.settings[0].email;\r\n            _this.email = res.settings[0].email;\r\n            _this.password = res.settings[0].password;\r\n            _this.re_password = res.settings[0].password;\r\n            _this.hashtag = \"@\" + _this.username;\r\n            _this.country = res.settings[0].country_id;\r\n            console.log(res.settings[0].country_name);\r\n            if (res.settings[0].photo_filename != '' && res.settings[0].photo_filename != 'undefined' && res.settings[0].photo_filename != undefined) {\r\n                _this.addedImgLists = _this.apiServiceURL + \"/staffphotos/\" + res.settings[0].photo_filename;\r\n                _this.photo = res.settings[0].photo_filename;\r\n            }\r\n        });\r\n    };\r\n    EditprofilesteponePage.prototype.getPrimaryContact = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation = '';\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    //first_name, last_name, email, username,password, contact, this.userId\r\n    EditprofilesteponePage.prototype.updateEntry = function (first_name, last_name, email, username, password, contact, createdby) {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            email: email,\r\n            username: username,\r\n            password: password,\r\n            contact: contact,\r\n            createdby: createdby,\r\n            hashtag: this.hashtag,\r\n            country: this.country\r\n        });\r\n        this.nav.setRoot(EditprofilesteptwoPage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    EditprofilesteponePage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var first_name = this.form.controls[\"first_name\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/api/companygroup.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + first_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    EditprofilesteponePage.prototype.saveEntry = function () {\r\n        var first_name = this.form.controls[\"first_name\"].value, last_name = this.form.controls[\"last_name\"].value, username = this.form.controls[\"username\"].value, password = this.form.controls[\"password\"].value, email = this.form.controls[\"email\"].value, contact = this.form.controls[\"contact\"].value, primary = this.form.controls[\"primary\"].value;\r\n        contact = primary + \" \" + contact;\r\n        console.log(\"Contact Concatenate\" + contact);\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            this.updateEntry(first_name, last_name, email, username, password, contact, this.userId);\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    EditprofilesteponePage.prototype.resetFields = function () {\r\n        this.first_name = \"\";\r\n        this.last_name = \"\";\r\n        this.email = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    EditprofilesteponePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    EditprofilesteponePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    EditprofilesteponePage.prototype.doUploadPhoto = function () {\r\n        var _this = this;\r\n        this.isUploadedProcessing = true;\r\n        var options = {\r\n            quality: 25,\r\n            destinationType: this.camera.DestinationType.FILE_URI\r\n        };\r\n        this.camera.getPicture(options).then(function (imageData) {\r\n            localStorage.setItem(\"userPhotoFile\", imageData);\r\n            _this.uploadResultBase64Data = imageData;\r\n            _this.addedImgLists = imageData;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n        }, function (err) {\r\n            // Handle error\r\n            _this.sendNotification(err);\r\n        });\r\n    };\r\n    EditprofilesteponePage.prototype.previous = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    EditprofilesteponePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    EditprofilesteponePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    EditprofilesteponePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    EditprofilesteponePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    EditprofilesteponePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    EditprofilesteponePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return EditprofilesteponePage;\r\n}());\r\nEditprofilesteponePage = __decorate([\r\n    Component({\r\n        selector: 'page-editprofilestepone',\r\n        templateUrl: 'editprofilestepone.html',\r\n        providers: [Camera]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object, typeof (_g = typeof Camera !== \"undefined\" && Camera) === \"function\" && _g || Object])\r\n], EditprofilesteponePage);\r\nexport { EditprofilesteponePage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=editprofilestepone.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/editprofilestepone/editprofilestepone.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UserPage } from '../user/user';\r\nimport { UseraccountPage } from '../useraccount/useraccount';\r\nimport 'rxjs/add/operator/map';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar UserorgchartPage = (function () {\r\n    function UserorgchartPage(navCtrl, http, NP, fb, toastCtrl, filechooser, transfer, file, ngZone) {\r\n        var _this = this;\r\n        this.navCtrl = navCtrl;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.filechooser = filechooser;\r\n        this.transfer = transfer;\r\n        this.file = file;\r\n        this.ngZone = ngZone;\r\n        // Define FormBuilder /model properties\r\n        this.userInfo = [];\r\n        this.userdata = [];\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.len = 0;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.roleId = localStorage.getItem(\"userInfoRoleId\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"job_position\": [\"\", Validators.required],\r\n            \"company_group\": [\"\", Validators.required],\r\n            \"report_to\": [\"\"]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    UserorgchartPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddcompanygroupPage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    UserorgchartPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    UserorgchartPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        this.naDisplay = 0;\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getCompanyGroupListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"User Org Chart:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit User';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            var editItem = this.NP.get(\"record\");\r\n            this.job_position = editItem.job_position;\r\n            this.company_group = editItem.company_id;\r\n            console.log(\"EDIT\" + this.company_group);\r\n            this.getUserListData();\r\n            this.report_to = editItem.report_to;\r\n            console.log(\"RTO\" + this.report_to);\r\n            this.naDisplay = 0;\r\n            if (this.NP.get(\"record\").role_id == 1) {\r\n                this.naDisplay = 1;\r\n            }\r\n            if (this.NP.get(\"record\").role_id == 2) {\r\n                this.naDisplay = 1;\r\n            }\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New User';\r\n        }\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log(\"info.first_name\" + info.first_name);\r\n            console.log(\"info.first_name array\" + info['first_name']);\r\n            console.log(\"info.first_name array 0\" + info[0]['first_name']);\r\n            var keyindex = info.length - 1;\r\n            this.first_name = info[keyindex]['first_name'];\r\n            this.last_name = info[keyindex]['last_name'];\r\n            this.email = info[keyindex]['email'];\r\n            this.country = info[keyindex]['country'];\r\n            this.contact = info[keyindex]['contact'];\r\n            this.photo = info[keyindex]['photo'];\r\n            this.createdby = info[keyindex]['createdby'];\r\n            this.username = info[keyindex]['username'];\r\n            this.password = info[keyindex]['password'];\r\n            this.hashtag = info[keyindex]['hashtag'];\r\n            this.role = info[keyindex]['role'];\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    UserorgchartPage.prototype.selectEntry = function (item) {\r\n        this.job_position = item.job_position;\r\n        this.company_group = item.company_id;\r\n        this.report_to = item.report_to;\r\n        this.recordID = item.staff_id;\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    UserorgchartPage.prototype.createEntry = function (userdata, userid) {\r\n        var _this = this;\r\n        var userPhotoFile = localStorage.getItem(\"userPhotoFile\");\r\n        if (userPhotoFile) {\r\n            console.log(\"Upload Device Image File:\" + userPhotoFile);\r\n            this.fileTrans(userPhotoFile);\r\n        }\r\n        this.contact = this.contact.replace(\"+\", \"%2B\");\r\n        var body = \"is_mobile=1&firstname=\" + this.first_name +\r\n            \"&lastname=\" + this.last_name +\r\n            \"&photo=\" + this.photo +\r\n            \"&email=\" + this.email +\r\n            \"&country_id=\" + this.country +\r\n            \"&contact_number=\" + this.contact +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&username=\" + this.username +\r\n            \"&password=\" + this.password +\r\n            \"&role_id=\" + this.role +\r\n            \"&personalhashtag=\" + this.hashtag +\r\n            \"&report_to=\" + this.report_to +\r\n            \"&company_id=\" + this.company_group +\r\n            \"&job_position=\" + this.job_position, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/staff/store\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"User created was successfully added\");\r\n                localStorage.setItem(\"userPhotoFile\", \"\");\r\n                _this.navCtrl.setRoot(UserPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    UserorgchartPage.prototype.updateEntry = function (userdata, userid) {\r\n        var _this = this;\r\n        var userPhotoFile = localStorage.getItem(\"userPhotoFile\");\r\n        if (userPhotoFile) {\r\n            console.log(\"Upload Device Image File:\" + userPhotoFile);\r\n            this.fileTrans(userPhotoFile);\r\n        }\r\n        this.contact = this.contact.replace(\"+\", \"%2B\");\r\n        var body = \"is_mobile=1&staff_id=\" + this.recordID +\r\n            \"&firstname=\" + this.first_name +\r\n            \"&lastname=\" + this.last_name +\r\n            \"&photo=\" + this.photo +\r\n            \"&email=\" + this.email +\r\n            \"&country_id=\" + this.country +\r\n            \"&contact_number=\" + this.contact +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&username=\" + this.username +\r\n            \"&password=\" + this.password +\r\n            \"&role_id=\" + this.role +\r\n            \"&personalhashtag=\" + this.hashtag +\r\n            \"&report_to=\" + this.report_to +\r\n            \"&company_id=\" + this.company_group +\r\n            \"&job_position=\" + this.job_position, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/staff/update\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"User created was successfully updated\");\r\n                _this.navCtrl.setRoot(UserPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    UserorgchartPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var companygroup_name = this.form.controls[\"companygroup_name\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/api/users.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + companygroup_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    UserorgchartPage.prototype.saveEntry = function () {\r\n        var job_position = this.form.controls[\"job_position\"].value, company_group = this.form.controls[\"company_group\"].value, report_to = this.form.controls[\"report_to\"].value;\r\n        this.userInfo.push({\r\n            'job_position': job_position,\r\n            'company_group': company_group,\r\n            'report_to': report_to,\r\n            'first_name': this.first_name,\r\n            'last_name': this.last_name,\r\n            'photo': this.photo,\r\n            'email': this.email,\r\n            'country': this.country,\r\n            'contact': this.contact,\r\n            'createdby': this.createdby,\r\n            'username': this.username,\r\n            'password': this.password,\r\n            'hashtag': this.hashtag,\r\n            'role': this.role\r\n        });\r\n        if (this.isEdited) {\r\n            this.updateEntry(this.userInfo, this.userId);\r\n        }\r\n        else {\r\n            this.createEntry(this.userInfo, this.userId);\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    UserorgchartPage.prototype.resetFields = function () {\r\n        this.companygroup_name = \"\";\r\n        this.address = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    UserorgchartPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    UserorgchartPage.prototype.getCompanyGroupListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        // url: any = this.apiServiceURL + \"/getcompanies?loginid=\" + this.userId+\"comapnyid=\"+this.companyId;\r\n        url = this.apiServiceURL + \"/getcompanies?loginid=\" + this.userId;\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCompanyGroup = res.companies;\r\n        });\r\n    };\r\n    UserorgchartPage.prototype.getUserListData = function () {\r\n        var _this = this;\r\n        if (this.isEdited == true) {\r\n            this.userId = this.recordID;\r\n            var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getstaffs?loginid=\" + this.userId + \"&company_id=\" + this.company_group;\r\n            var res_1;\r\n            console.log(\"Report To API:\" + url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                res_1 = data.json();\r\n                // this.responseResultReportTo=\"N/A\";\r\n                if (_this.report_to == 0) {\r\n                    _this.len = 0;\r\n                }\r\n                else {\r\n                    _this.len = res_1.TotalCount;\r\n                }\r\n                console.log(\"length\" + res_1.TotalCount);\r\n                _this.naDisplay = 1;\r\n                _this.responseResultReportTo = res_1.staffslist;\r\n            });\r\n        }\r\n        else {\r\n            var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getstaffs?loginid=\" + this.userId + \"&company_id=\" + this.company_group;\r\n            var res_2;\r\n            console.log(\"Report To API:\" + url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                res_2 = data.json();\r\n                // this.responseResultReportTo=\"N/A\";\r\n                _this.len = res_2.TotalCount;\r\n                console.log(\"length\" + res_2.TotalCount);\r\n                _this.naDisplay = 1;\r\n                _this.responseResultReportTo = res_2.staffslist;\r\n            });\r\n        }\r\n    };\r\n    UserorgchartPage.prototype.previous = function () {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: this.first_name,\r\n            last_name: this.last_name,\r\n            email: this.email,\r\n            country: this.country,\r\n            contact: this.contact,\r\n            createdby: this.createdby,\r\n            username: this.username,\r\n            password: this.password,\r\n            hashtag: this.hashtag,\r\n            role: this.role\r\n        });\r\n        this.navCtrl.setRoot(UseraccountPage, {\r\n            uservalue: this.userInfo\r\n        });\r\n    };\r\n    UserorgchartPage.prototype.fileTrans = function (path) {\r\n        var _this = this;\r\n        var fileName = path.substr(path.lastIndexOf('/') + 1);\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        this.photo = currentName;\r\n        console.log(\"File Name is:\" + currentName);\r\n        /*var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpg\";*/\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: fileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/upload.php', options)\r\n            .then(function (data) {\r\n            console.log(JSON.stringify(data));\r\n            console.log(\"UPLOAD SUCCESS:\" + data.response);\r\n            var successData = JSON.parse(data.response);\r\n            _this.userInfo.push({\r\n                photo: successData\r\n            });\r\n            //this.sendNotification(\"User photo uploaded successfully\");\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            // this.isUploadedProcessing = false;\r\n            // return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\");\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    //http://denyoappv2.stridecdev.com/staff/store\r\n    //main.js:61474 firstname=Kannan&lastname=Naga&photo=undefined&email=kn@gmail.com&country_id=4&contact_number=123456789&createdby=1&updatedby=1&username=nk&password=nk&role_id=1&personalhashtag=@nk&report_to=3&company_id=13&job_position=At prg\r\n    //main.js:61622 File Name is:1497379310688.jpg\r\n    UserorgchartPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    UserorgchartPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    UserorgchartPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    UserorgchartPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    UserorgchartPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    UserorgchartPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    UserorgchartPage.prototype.onSegmentChanged = function () {\r\n        console.log(\"ID\" + this.company_group);\r\n        this.getUserListData();\r\n    };\r\n    return UserorgchartPage;\r\n}());\r\nUserorgchartPage = __decorate([\r\n    Component({\r\n        selector: 'page-userorgchart',\r\n        templateUrl: 'userorgchart.html',\r\n        providers: [FileChooser, Transfer, File]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof FileChooser !== \"undefined\" && FileChooser) === \"function\" && _f || Object, typeof (_g = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _g || Object, typeof (_h = typeof File !== \"undefined\" && File) === \"function\" && _h || Object, typeof (_j = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _j || Object])\r\n], UserorgchartPage);\r\nexport { UserorgchartPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n//# sourceMappingURL=userorgchart.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/userorgchart/userorgchart.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\n//import { PasswordValidator } from '../../validators/password';\r\nimport { UserorgchartPage } from '../userorgchart/userorgchart';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AdduserPage } from '../adduser/adduser';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the UseraccountPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar UseraccountPage = (function () {\r\n    function UseraccountPage(http, navCtrl, NP, fb, toastCtrl) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.userInfo = [];\r\n        this.hideActionButton = true;\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.recordID = null;\r\n        this.responseResultRoleDropDown = [];\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.roleId = localStorage.getItem(\"userInfoRoleId\");\r\n        this.form = fb.group({\r\n            // \"username\": [\"\", Validators.required],\r\n            \"username\": [\"\", Validators.compose([Validators.maxLength(30), Validators.required])],\r\n            \"password\": [\"\", Validators.required],\r\n            \"re_password\": [\"\", Validators.required],\r\n            \"hashtag\": [\"\"],\r\n            \"role\": [\"\", Validators.required],\r\n        }, { validator: this.matchingPasswords('password', 're_password') });\r\n        //this.hashtag = this.username;\r\n        //getRoleListData() {\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getroles\";\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultRole = res.roles;\r\n            console.log(JSON.stringify(_this.responseResultRole));\r\n            if (_this.responseResultRole.length > 0) {\r\n                for (var role in _this.responseResultRole) {\r\n                    if (_this.roleId == '1') {\r\n                        _this.responseResultRoleDropDown.push({\r\n                            role_id: _this.responseResultRole[role].role_id,\r\n                            role_name: _this.responseResultRole[role].role_name\r\n                        });\r\n                    }\r\n                    else {\r\n                        if (_this.responseResultRole[role].role_id != '1') {\r\n                            _this.responseResultRoleDropDown.push({\r\n                                role_id: _this.responseResultRole[role].role_id,\r\n                                role_name: _this.responseResultRole[role].role_name\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n    }\r\n    UseraccountPage.prototype.matchingPasswords = function (passwordKey, passwordConfirmationKey) {\r\n        return function (group) {\r\n            var passwordInput = group.controls[passwordKey];\r\n            var passwordConfirmationInput = group.controls[passwordConfirmationKey];\r\n            if (passwordInput.value !== passwordConfirmationInput.value) {\r\n                return passwordConfirmationInput.setErrors({ notEquivalent: true });\r\n            }\r\n        };\r\n    };\r\n    UseraccountPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad UseraccountPage');\r\n        this.pageLoad();\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    UseraccountPage.prototype.selectEntry = function (item) {\r\n        this.username = item.username;\r\n        this.password = item.password;\r\n        this.re_password = item.password;\r\n        this.hashtag = item.hashtag;\r\n        this.role = item.role;\r\n        this.recordID = item.userid;\r\n    };\r\n    UseraccountPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    UseraccountPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        // this.getRoleListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"User Account:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit User-Account';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            var editItem = this.NP.get(\"record\");\r\n            this.username = editItem.username;\r\n            this.password = editItem.password;\r\n            this.re_password = editItem.password;\r\n            this.hashtag = editItem.personalhashtag;\r\n            this.role = editItem.role_id;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New User-Account';\r\n        }\r\n        //[{\"info\":[{\"photo\":{\"fileName\":\"1496384705815.jpg\",\"baseURL\":\"denyoappv2.stridecdev.com\",\"ext\":\"jpg\",\"target_dir\":\"uploads/users/\"}},{\"first_name\":\"Kennan. N\",\"last_name\":\"Nagarathina. K\",\"email\":\"kannann@gmail.com\",\"country\":\"Australia\",\"contact\":\"9443976954\",\"createdby\":\"6\"}]}]\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log('A');\r\n            for (var key in info) {\r\n                console.log('B');\r\n                var keyindex = void 0;\r\n                if (this.NP.get(\"record\")) {\r\n                    keyindex = 0;\r\n                }\r\n                else {\r\n                    keyindex = 1;\r\n                }\r\n                console.log(\"Key:\" + key);\r\n                console.log(\"Key Index:\" + keyindex);\r\n                if (key == keyindex) {\r\n                    console.log('Key' + key);\r\n                    this.first_name = info[key].first_name;\r\n                    this.last_name = info[key].last_name;\r\n                    this.email = info[key].email;\r\n                    this.country = info[key].country;\r\n                    this.contact = info[key].contact;\r\n                    this.photo = info[key].photo;\r\n                    this.createdby = info[key].createdby;\r\n                    console.log(\"First Name for User Account:\" + this.first_name);\r\n                    //console.log(JSON.stringify(this));\r\n                }\r\n                else {\r\n                    console.log('Key' + key);\r\n                    this.first_name = info[0].first_name;\r\n                    this.last_name = info[0].last_name;\r\n                    this.email = info[0].email;\r\n                    this.country = info[0].country;\r\n                    this.contact = info[0].contact;\r\n                    this.photo = info[0].photo;\r\n                    this.createdby = info[0].createdby;\r\n                    console.log(\"First Name for User Account:\" + this.first_name);\r\n                }\r\n                /* this.userInfo.push({\r\n                   info\r\n                 });\r\n                 console.log(\"User Information:\" + JSON.stringify(this.userInfo));\r\n                 */\r\n            }\r\n        }\r\n        if (this.NP.get(\"uservalue\")) {\r\n            var info = this.NP.get(\"uservalue\");\r\n            var keyindex = info.length - 1;\r\n            this.first_name = info[keyindex]['first_name'];\r\n            this.last_name = info[keyindex]['last_name'];\r\n            this.email = info[keyindex]['email'];\r\n            this.country = info[keyindex]['country'];\r\n            this.contact = info[keyindex]['contact'];\r\n            this.photo = info[keyindex]['photo'];\r\n            this.username = info[keyindex]['username'];\r\n            this.password = info[keyindex]['password'];\r\n            this.hashtag = info[keyindex]['hashtag'];\r\n            this.re_password = info[keyindex]['password'];\r\n            this.role = info[keyindex]['role'];\r\n        }\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    UseraccountPage.prototype.saveEntry = function () {\r\n        var username = this.form.controls[\"username\"].value, password = this.form.controls[\"password\"].value, hashtag = this.form.controls[\"hashtag\"].value, role = this.form.controls[\"role\"].value;\r\n        console.log(this.form.controls);\r\n        if (this.isEdited) {\r\n            this.updateEntry(username, password, hashtag, role);\r\n        }\r\n        else {\r\n            this.createEntry(username, password, hashtag, role);\r\n        }\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    UseraccountPage.prototype.createEntry = function (username, password, hashtag, role) {\r\n        var _this = this;\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: this.first_name,\r\n            last_name: this.last_name,\r\n            email: this.email,\r\n            country: this.country,\r\n            contact: this.contact,\r\n            createdby: this.createdby,\r\n            username: username,\r\n            password: password,\r\n            hashtag: hashtag,\r\n            role: role\r\n        });\r\n        var body = \"username=\" + username + \"&id=0\", type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/checkusername\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"create\" + data.json().msg[0].Error);\r\n                if (data.json().msg[0].Error > 0) {\r\n                    //this.userInfo=[];\r\n                    _this.sendNotification(data.json().msg[0].result);\r\n                }\r\n                else {\r\n                    //this.sendNotification(data.json().message);\r\n                    _this.navCtrl.setRoot(UserorgchartPage, {\r\n                        accountInfo: _this.userInfo\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    UseraccountPage.prototype.updateEntry = function (username, password, hashtag, role) {\r\n        var _this = this;\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: this.first_name,\r\n            last_name: this.last_name,\r\n            email: this.email,\r\n            country: this.country,\r\n            contact: this.contact,\r\n            createdby: this.createdby,\r\n            username: username,\r\n            password: password,\r\n            hashtag: hashtag,\r\n            role: role\r\n        });\r\n        var body = \"username=\" + username + \"&id=\" + this.NP.get(\"record\").staff_id, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/checkusername\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"update\" + data.json().msg[0].Error);\r\n                if (data.json().msg[0].Error > 0) {\r\n                    //this.userInfo=[];\r\n                    _this.sendNotification(data.json().msg[0].result);\r\n                }\r\n                else {\r\n                    //this.sendNotification(data.json().message);\r\n                    _this.navCtrl.setRoot(UserorgchartPage, {\r\n                        accountInfo: _this.userInfo,\r\n                        record: _this.NP.get(\"record\")\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    UseraccountPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    UseraccountPage.prototype.previous = function () {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: this.first_name,\r\n            last_name: this.last_name,\r\n            email: this.email,\r\n            country: this.country,\r\n            contact: this.contact,\r\n            createdby: this.createdby,\r\n        });\r\n        this.navCtrl.setRoot(AdduserPage, {\r\n            uservalue: this.userInfo\r\n        });\r\n    };\r\n    UseraccountPage.prototype.addhashtag = function (val) {\r\n        this.hashtag = \"@\" + val;\r\n    };\r\n    UseraccountPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    UseraccountPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    UseraccountPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    UseraccountPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    UseraccountPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    UseraccountPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    return UseraccountPage;\r\n}());\r\nUseraccountPage = __decorate([\r\n    Component({\r\n        selector: 'page-useraccount',\r\n        templateUrl: 'useraccount.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], UseraccountPage);\r\nexport { UseraccountPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=useraccount.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/useraccount/useraccount.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UseraccountPage } from '../useraccount/useraccount';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport 'rxjs/add/operator/map';\r\nimport { UserPage } from '../user/user';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AdduserPage = (function () {\r\n    function AdduserPage(nav, http, NP, fb, toastCtrl, loadingCtrl, camera, transfer, ngZone) {\r\n        var _this = this;\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.camera = camera;\r\n        this.transfer = transfer;\r\n        this.ngZone = ngZone;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.userInfo = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            //\"first_name\": [\"\", Validators.required],\r\n            //\"last_name\": [\"\", Validators.required],\r\n            \"first_name\": [\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n            \"last_name\": [\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n            \"country\": [\"\", Validators.required],\r\n            \"contact\": [\"\", Validators.required],\r\n            \"primary\": [\"\", Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(5)])],\r\n            /// \"email\": [\"\", Validators.required]\r\n            'email': ['', Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(50), Validators.pattern(/^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i)])],\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AdduserPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddcompanygroupPage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AdduserPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    AdduserPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getJsonCountryListData();\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Add User:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit User';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            if (this.NP.get(\"record\").photo) {\r\n                if (this.NP.get(\"record\").photo != 'undefined') {\r\n                    this.addedImgLists = this.apiServiceURL + \"/staffphotos/\" + this.NP.get(\"record\").photo;\r\n                    console.log(this.addedImgLists);\r\n                }\r\n            }\r\n            var editItem = this.NP.get(\"record\");\r\n            this.first_name = editItem.firstname;\r\n            this.last_name = editItem.lastname;\r\n            this.email = editItem.email;\r\n            this.country = editItem.country_id;\r\n            this.contact = editItem.contact_number;\r\n            if (this.contact != undefined) {\r\n                var contactSplitSpace = this.contact.split(\" \");\r\n                this.primary = contactSplitSpace[0];\r\n                this.contact = contactSplitSpace[1];\r\n            }\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New User';\r\n        }\r\n        if (this.NP.get(\"uservalue\")) {\r\n            var info = this.NP.get(\"uservalue\");\r\n            this.pageTitle = 'Edit User';\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log('A');\r\n            for (var key in info) {\r\n                console.log('B');\r\n                var keyindex = void 0;\r\n                if (this.NP.get(\"record\")) {\r\n                    keyindex = 0;\r\n                }\r\n                else {\r\n                    keyindex = 1;\r\n                }\r\n                console.log(\"Key:\" + key);\r\n                console.log(\"Key Index:\" + keyindex);\r\n                if (key == keyindex) {\r\n                    console.log('Key' + key);\r\n                    this.first_name = info[key].first_name;\r\n                    this.last_name = info[key].last_name;\r\n                    this.email = info[key].email;\r\n                    this.country = info[key].country;\r\n                    this.contact = info[key].contact;\r\n                    this.photo = info[key].photo;\r\n                    if (this.contact != '') {\r\n                        var contactSplitSpace = this.contact.split(\" \");\r\n                        this.primary = contactSplitSpace[0];\r\n                        this.contact = contactSplitSpace[1];\r\n                    }\r\n                    console.log(\"First Name for User Account:\" + this.first_name);\r\n                    //console.log(JSON.stringify(this));\r\n                }\r\n                else {\r\n                    console.log('Key' + key);\r\n                    this.first_name = info[0].first_name;\r\n                    this.last_name = info[0].last_name;\r\n                    this.email = info[0].email;\r\n                    this.country = info[0].country;\r\n                    this.contact = info[0].contact;\r\n                    this.photo = info[0].photo;\r\n                    if (this.contact != '') {\r\n                        var contactSplitSpace = this.contact.split(\" \");\r\n                        this.primary = contactSplitSpace[0];\r\n                        this.contact = contactSplitSpace[1];\r\n                    }\r\n                    console.log(\"First Name for User Account:\" + this.first_name);\r\n                }\r\n                /* this.userInfo.push({\r\n                   info\r\n                 });\r\n                 console.log(\"User Information:\" + JSON.stringify(this.userInfo));\r\n                 */\r\n            }\r\n            if (this.NP.get(\"uservalue\")[0].photo) {\r\n                if (this.NP.get(\"uservalue\")[0].photo != 'undefined') {\r\n                    this.addedImgLists = this.apiServiceURL + \"/staffphotos/\" + this.NP.get(\"uservalue\")[0].photo;\r\n                    console.log(this.addedImgLists);\r\n                }\r\n            }\r\n        }\r\n        /*this.first_name = \"Kannan\";\r\n        this.last_name = \"Nagarathinam\";\r\n        this.email = \"kannanrathvalli@gmail.com\";\r\n        this.country = \"238\";\r\n        this.contact = \"9443976954\";*/\r\n    };\r\n    AdduserPage.prototype.getPrimaryContact = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation = '';\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AdduserPage.prototype.selectEntry = function (item) {\r\n        this.first_name = item.first_name;\r\n        this.last_name = item.last_name;\r\n        this.email = item.email;\r\n        this.country = item.country;\r\n        this.contact = item.contact_number;\r\n        console.log(\"Contact Number\" + item.contact_number);\r\n        if (this.contact != '') {\r\n            var contactSplitSpace = this.contact.split(\" \");\r\n            this.primary = contactSplitSpace[0];\r\n            this.contact = contactSplitSpace[1];\r\n        }\r\n        this.photo = item.photo;\r\n        this.recordID = item.userid;\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AdduserPage.prototype.createEntry = function (first_name, last_name, email, country, contact, createdby) {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            email: email,\r\n            country: country,\r\n            contact: contact,\r\n            createdby: createdby,\r\n        });\r\n        this.nav.setRoot(UseraccountPage, {\r\n            accountInfo: this.userInfo\r\n        });\r\n        /*\r\n            let body: string = \"key=emailexist&email=\" + email,\r\n              type: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n              headers: any = new Headers({ 'Content-Type': type }),\r\n              options: any = new RequestOptions({ headers: headers }),\r\n              url: any = this.apiServiceURL + \"api/users.php\";\r\n        \r\n            this.http.post(url, body, options)\r\n              .subscribe((data) => {\r\n                console.log(JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                  this.hideForm = true;\r\n                  console.log(data.json().Error);\r\n                  if (data.json().Error > 0) {\r\n                    this.userInfo = []; // need this one\r\n                    this.sendNotification(data.json().message);\r\n                  } else {\r\n                    //this.sendNotification(data.json().message);\r\n                    this.nav.setRoot(UseraccountPage, {\r\n                      accountInfo: this.userInfo\r\n                    });\r\n                  }\r\n                }\r\n                // Otherwise let 'em know anyway\r\n                else {\r\n                  this.sendNotification('Something went wrong!');\r\n                }\r\n              });\r\n        */\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AdduserPage.prototype.updateEntry = function (first_name, last_name, email, country, contact, createdby) {\r\n        this.userInfo.push({\r\n            photo: this.photo,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            email: email,\r\n            country: country,\r\n            contact: contact,\r\n            createdby: createdby,\r\n        });\r\n        this.nav.setRoot(UseraccountPage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AdduserPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var first_name = this.form.controls[\"first_name\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"api/companygroup.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + first_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AdduserPage.prototype.saveEntry = function () {\r\n        var first_name = this.form.controls[\"first_name\"].value, last_name = this.form.controls[\"last_name\"].value, email = this.form.controls[\"email\"].value, country = this.form.controls[\"country\"].value, contact = this.form.controls[\"contact\"].value, primary = this.form.controls[\"primary\"].value;\r\n        contact = primary + \" \" + contact;\r\n        console.log(contact);\r\n        /*if (this.addedImgLists) {\r\n          this.isUploadedProcessing = true;\r\n        }*/\r\n        if (this.isUploadedProcessing == false) {\r\n            if (this.isEdited) {\r\n                this.updateEntry(first_name, last_name, email, country, contact, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(first_name, last_name, email, country, contact, this.userId);\r\n            }\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AdduserPage.prototype.resetFields = function () {\r\n        this.first_name = \"\";\r\n        this.last_name = \"\";\r\n        this.email = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AdduserPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AdduserPage.prototype.getJsonCountryListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getCountries\";\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCountry = res.countries;\r\n        });\r\n    };\r\n    AdduserPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AdduserPage.prototype.doUploadPhoto = function () {\r\n        var _this = this;\r\n        var options = {\r\n            quality: 75,\r\n            destinationType: this.camera.DestinationType.FILE_URI,\r\n            targetWidth: 200,\r\n            targetHeight: 200,\r\n            sourceType: 1\r\n        };\r\n        this.camera.getPicture(options).then(function (imageData) {\r\n            console.log(imageData);\r\n            localStorage.setItem(\"userPhotoFile\", imageData);\r\n            //this.fileTrans(imageData);\r\n            _this.uploadResultBase64Data = imageData;\r\n            _this.addedImgLists = imageData;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n        }, function (err) {\r\n            // Handle error\r\n            _this.sendNotification(err);\r\n        });\r\n    };\r\n    AdduserPage.prototype.fileTrans = function (path) {\r\n        var _this = this;\r\n        var fileName = path.substr(path.lastIndexOf('/') + 1);\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        this.photo = currentName;\r\n        console.log(\"File Name is:\" + currentName);\r\n        /*var d = new Date(),\r\n            n = d.getTime(),\r\n            newFileName = n + \".jpg\";*/\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: fileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/upload.php', options)\r\n            .then(function (data) {\r\n            console.log(JSON.stringify(data));\r\n            console.log(\"UPLOAD SUCCESS:\" + data.response);\r\n            var successData = JSON.parse(data.response);\r\n            _this.userInfo.push({\r\n                photo: successData\r\n            });\r\n            _this.sendNotification(\"User photo uploaded successfully\");\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\");\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    AdduserPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AdduserPage.prototype.previous = function () {\r\n        this.nav.setRoot(UserPage);\r\n    };\r\n    AdduserPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AdduserPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AdduserPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AdduserPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AdduserPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AdduserPage;\r\n}());\r\nAdduserPage = __decorate([\r\n    Component({\r\n        selector: 'page-adduser',\r\n        templateUrl: 'adduser.html',\r\n        providers: [Camera, FileChooser, Transfer, File]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object, typeof (_g = typeof Camera !== \"undefined\" && Camera) === \"function\" && _g || Object, typeof (_h = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _h || Object, typeof (_j = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _j || Object])\r\n], AdduserPage);\r\nexport { AdduserPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n//# sourceMappingURL=adduser.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/adduser/adduser.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AdduserPage } from '../adduser/adduser';\r\nimport { ViewcompanygroupPage } from '../viewcompanygroup/viewcompanygroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the UserPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar UserPage = (function () {\r\n    function UserPage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'staff_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Users';\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.VIEWACCESS = localStorage.getItem(\"SETTINGS_USERLIST_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"SETTINGS_USERLIST_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"SETTINGS_USERLIST_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"SETTINGS_USERLIST_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    UserPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad UserPage');\r\n    };\r\n    /*******************/\r\n    /* Pull to Refresh */\r\n    /*******************/\r\n    UserPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUser();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /****************************/\r\n    /*@doUser calling on report */\r\n    /****************************/\r\n    UserPage.prototype.doUser = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"vendor\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/staff?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&companyid=\" + this.companyId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.staff.length);\r\n            console.log(\"2\" + res.staff);\r\n            if (res.staff.length > 0) {\r\n                _this.reportAllLists = res.staff;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    UserPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doUser();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    UserPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        if (this.VIEWACCESS > 0) {\r\n            this.reportData.startindex = 0;\r\n            this.reportData.sort = \"staff_id\";\r\n            this.doUser();\r\n        }\r\n    };\r\n    UserPage.prototype.doAdd = function () {\r\n        this.nav.setRoot(AdduserPage);\r\n    };\r\n    UserPage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AdduserPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n        else {\r\n            this.nav.setRoot(ViewcompanygroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n    };\r\n    /******************************************/\r\n    /* @doConfirm called for alert dialog box **/\r\n    /******************************************/\r\n    UserPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this user?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    UserPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/staff/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations the user was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    UserPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    UserPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUser();\r\n    };\r\n    /********************/\r\n    /* Sorting function */\r\n    /********************/\r\n    UserPage.prototype.doSort = function (val) {\r\n        console.log('1');\r\n        this.reportAllLists = [];\r\n        this.reportData.startindex = 0;\r\n        console.log('2');\r\n        this.sortby = 1;\r\n        if (this.vendorsort == \"asc\") {\r\n            this.reportData.sortascdesc = \"desc\";\r\n            this.vendorsort = \"desc\";\r\n            this.ascending = false;\r\n            console.log('3');\r\n        }\r\n        else {\r\n            console.log('4');\r\n            this.reportData.sortascdesc = \"asc\";\r\n            this.vendorsort = \"asc\";\r\n            this.ascending = true;\r\n        }\r\n        console.log('5');\r\n        this.reportData.sort = val;\r\n        this.doUser();\r\n        console.log('6');\r\n    };\r\n    UserPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    UserPage.prototype.previous = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    UserPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    UserPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    UserPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    UserPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    UserPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    UserPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return UserPage;\r\n}());\r\nUserPage = __decorate([\r\n    Component({\r\n        selector: 'page-user',\r\n        templateUrl: 'user.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], UserPage);\r\nexport { UserPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=user.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/user.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { RolePage } from '../role/role';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddRolePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddrolePage = (function () {\r\n    function AddrolePage(navCtrl, http, NP, fb, toastCtrl) {\r\n        this.navCtrl = navCtrl;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.isSubmitted = false;\r\n        this.roleperMissionData = [];\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        //public dashboardviewmap: boolean = false;\r\n        this.rolepermissionData = {\r\n            dashboardviewmap: false,\r\n            dashboardcreatemap: false,\r\n            dashboardeditmap: false,\r\n            dashboarddeletemap: false,\r\n            dashboardhidemap: false,\r\n            //Dashboard Units\r\n            dashboardviewunits: false,\r\n            dashboardcreateunits: false,\r\n            dashboardeditunits: false,\r\n            dashboarddeleteunits: false,\r\n            dashboardhideunits: false,\r\n            // Calendar Events\r\n            calviewevents: false,\r\n            calcreateevents: false,\r\n            caleditevents: false,\r\n            caldeleteevents: false,\r\n            // Calendar Services\r\n            calviewservices: false,\r\n            calcreateservices: false,\r\n            caleditservices: false,\r\n            caldeleteservices: false,\r\n            // Calendar Alarm\r\n            calviewalarm: false,\r\n            calcreatealarm: false,\r\n            caleditalarm: false,\r\n            caldeletealarm: false,\r\n            // Units Unit List\r\n            univiewlist: false,\r\n            unicreatelist: false,\r\n            unieditlist: false,\r\n            unideletelist: false,\r\n            // Units Alaram\r\n            univiewalarm: false,\r\n            unicreatealarm: false,\r\n            unieditalarm: false,\r\n            unideletealarm: false,\r\n            // Units Services Info\r\n            univiewservices: false,\r\n            unicreateservices: false,\r\n            unieditservices: false,\r\n            unideleteservices: false,\r\n            // Units Comments\r\n            univiewcomm: false,\r\n            unicreatecomm: false,\r\n            unieditcomm: false,\r\n            unideletecomm: false,\r\n            // Units Unit Group\r\n            univiewgroup: false,\r\n            unicreategroup: false,\r\n            unieditgroup: false,\r\n            unideletegroup: false,\r\n            // Units Generator Model Managment\r\n            univiewgmm: false,\r\n            unicreategmm: false,\r\n            unieditgmm: false,\r\n            unideletegmm: false,\r\n            // Reports\r\n            viewreports: false,\r\n            createreports: false,\r\n            editreports: false,\r\n            deletereports: false,\r\n            // Message Inbox\r\n            msgviewinbox: false,\r\n            msgcreateinbox: false,\r\n            msgeditinbox: false,\r\n            msgdeleteinbox: false,\r\n            // Message Sent\r\n            msgviewsent: false,\r\n            msgcreatesent: false,\r\n            msgeditsent: false,\r\n            msgdeletesent: false,\r\n            // Settings My Account\r\n            setviewmyacc: false,\r\n            setcreatemyacc: false,\r\n            seteditmyacc: false,\r\n            setdeletemyacc: false,\r\n            // Settings User List\r\n            setviewuselst: false,\r\n            setcreateuselst: false,\r\n            setedituselst: false,\r\n            setdeleteuselst: false,\r\n            // Settings User Group\r\n            setviewusegru: false,\r\n            setcreateusegru: false,\r\n            seteditusegru: false,\r\n            setdeleteusegru: false,\r\n            // Settings User Role\r\n            setviewuserle: false,\r\n            setcreateuserle: false,\r\n            setedituserle: false,\r\n            setdeleteuserle: false,\r\n            // Settings Report Template\r\n            setviewtmp: false,\r\n            setcreatetmp: false,\r\n            setedittmp: false,\r\n            setdeletetmp: false,\r\n            // Settings Org Chart\r\n            setvieworg: false,\r\n            setcreateorg: false,\r\n            seteditorg: false,\r\n            setdeleteorg: false\r\n        };\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com/\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"role_name\": [\"\", Validators.required],\r\n            //Dashboard Map\r\n            \"dashboardviewmap\": [\"\"],\r\n            \"dashboardcreatemap\": [\"\"],\r\n            \"dashboardeditmap\": [\"\"],\r\n            \"dashboarddeletemap\": [\"\"],\r\n            \"dashboardhidemap\": [\"\"],\r\n            //Dashboard Units\r\n            \"dashboardviewunits\": [\"\"],\r\n            \"dashboardcreateunits\": [\"\"],\r\n            \"dashboardeditunits\": [\"\"],\r\n            \"dashboarddeleteunits\": [\"\"],\r\n            \"dashboardhideunits\": [\"\"],\r\n            // Calendar Events\r\n            \"calviewevents\": [\"\"],\r\n            \"calcreateevents\": [\"\"],\r\n            \"caleditevents\": [\"\"],\r\n            \"caldeleteevents\": [\"\"],\r\n            // Calendar Services\r\n            \"calviewservices\": [\"\"],\r\n            \"calcreateservices\": [\"\"],\r\n            \"caleditservices\": [\"\"],\r\n            \"caldeleteservices\": [\"\"],\r\n            // Calendar Alarm\r\n            \"calviewalarm\": [\"\"],\r\n            \"calcreatealarm\": [\"\"],\r\n            \"caleditalarm\": [\"\"],\r\n            \"caldeletealarm\": [\"\"],\r\n            // Units Unit List\r\n            \"univiewlist\": [\"\"],\r\n            \"unicreatelist\": [\"\"],\r\n            \"unieditlist\": [\"\"],\r\n            \"unideletelist\": [\"\"],\r\n            // Units Alaram\r\n            \"univiewalarm\": [\"\"],\r\n            \"unicreatealarm\": [\"\"],\r\n            \"unieditalarm\": [\"\"],\r\n            \"unideletealarm\": [\"\"],\r\n            // Units Services Info\r\n            \"univiewservices\": [\"\"],\r\n            \"unicreateservices\": [\"\"],\r\n            \"unieditservices\": [\"\"],\r\n            \"unideleteservices\": [\"\"],\r\n            // Units Comments\r\n            \"univiewcomm\": [\"\"],\r\n            \"unicreatecomm\": [\"\"],\r\n            \"unieditcomm\": [\"\"],\r\n            \"unideletecomm\": [\"\"],\r\n            // Units Unit Group\r\n            \"univiewgroup\": [\"\"],\r\n            \"unicreategroup\": [\"\"],\r\n            \"unieditgroup\": [\"\"],\r\n            \"unideletegroup\": [\"\"],\r\n            // Units Generator Model Managment\r\n            \"univiewgmm\": [\"\"],\r\n            \"unicreategmm\": [\"\"],\r\n            \"unieditgmm\": [\"\"],\r\n            \"unideletegmm\": [\"\"],\r\n            // Reports\r\n            \"viewreports\": [\"\"],\r\n            \"createreports\": [\"\"],\r\n            \"editreports\": [\"\"],\r\n            \"deletereports\": [\"\"],\r\n            // Message Inbox\r\n            \"msgviewinbox\": [\"\"],\r\n            \"msgcreateinbox\": [\"\"],\r\n            \"msgeditinbox\": [\"\"],\r\n            \"msgdeleteinbox\": [\"\"],\r\n            // Message Sent\r\n            \"msgviewsent\": [\"\"],\r\n            \"msgcreatesent\": [\"\"],\r\n            \"msgeditsent\": [\"\"],\r\n            \"msgdeletesent\": [\"\"],\r\n            // Settings My Account\r\n            \"setviewmyacc\": [\"\"],\r\n            \"setcreatemyacc\": [\"\"],\r\n            \"seteditmyacc\": [\"\"],\r\n            \"setdeletemyacc\": [\"\"],\r\n            // Settings User List\r\n            \"setviewuselst\": [\"\"],\r\n            \"setcreateuselst\": [\"\"],\r\n            \"setedituselst\": [\"\"],\r\n            \"setdeleteuselst\": [\"\"],\r\n            // Settings User Group\r\n            \"setviewusegru\": [\"\"],\r\n            \"setcreateusegru\": [\"\"],\r\n            \"seteditusegru\": [\"\"],\r\n            \"setdeleteusegru\": [\"\"],\r\n            // Settings User Role\r\n            \"setviewuserle\": [\"\"],\r\n            \"setcreateuserle\": [\"\"],\r\n            \"setedituserle\": [\"\"],\r\n            \"setdeleteuserle\": [\"\"],\r\n            // Settings Report Template\r\n            \"setviewtmp\": [\"\"],\r\n            \"setcreatetmp\": [\"\"],\r\n            \"setedittmp\": [\"\"],\r\n            \"setdeletetmp\": [\"\"],\r\n            // Settings Org Chart\r\n            \"setvieworg\": [\"\"],\r\n            \"setcreateorg\": [\"\"],\r\n            \"seteditorg\": [\"\"],\r\n            \"setdeleteorg\": [\"\"]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddrolePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddRolePage');\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddrolePage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit Role';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Add New Role';\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddrolePage.prototype.selectEntry = function (item) {\r\n        var _this = this;\r\n        this.role_name = item.role_name;\r\n        this.recordID = item.role_id;\r\n        // let body: string = \"key=permissiondata&role_id=\" + this.recordID,\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"editrole?is_mobile=1&role_id=\" + this.recordID;\r\n        console.log(url);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            // Dashboard Mapif()\r\n            if (res.roledata[0].view_action == 1) {\r\n                _this.rolepermissionData.dashboardviewmap = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardviewmap = false;\r\n            }\r\n            if (res.roledata[0].create_action == 1) {\r\n                _this.rolepermissionData.dashboardcreatemap = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardcreatemap = false;\r\n            }\r\n            if (res.roledata[0].edit_action == 1) {\r\n                _this.rolepermissionData.dashboardeditmap = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardeditmap = false;\r\n            }\r\n            if (res.roledata[0].delete_action == 1) {\r\n                _this.rolepermissionData.dashboarddeletemap = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboarddeletemap = false;\r\n            }\r\n            if (res.roledata[0].hide_action == 1) {\r\n                _this.rolepermissionData.dashboardhidemap = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardhidemap = false;\r\n            }\r\n            //this.rolepermissionData.dashboardviewmap = res[0].dashboardviewmap;\r\n            //this.rolepermissionData.dashboardcreatemap = res[0].dashboardcreatemap;\r\n            //this.rolepermissionData.dashboardeditmap = res[0].dashboardeditmap;\r\n            //this.rolepermissionData.dashboarddeletemap = res[0].dashboarddeletemap;\r\n            // this.rolepermissionData.dashboardhidemap = res[0].dashboardhidemap;\r\n            // Dashboard Units\r\n            if (res.roledata[1].view_action == 1) {\r\n                _this.rolepermissionData.dashboardviewunits = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardviewunits = false;\r\n            }\r\n            if (res.roledata[1].create_action == 1) {\r\n                _this.rolepermissionData.dashboardcreateunits = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardcreateunits = false;\r\n            }\r\n            if (res.roledata[1].edit_action == 1) {\r\n                _this.rolepermissionData.dashboardeditunits = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardeditunits = false;\r\n            }\r\n            if (res.roledata[1].delete_action == 1) {\r\n                _this.rolepermissionData.dashboarddeleteunits = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboarddeleteunits = false;\r\n            }\r\n            if (res.roledata[1].hide_action == 1) {\r\n                _this.rolepermissionData.dashboardhideunits = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.dashboardhideunits = false;\r\n            }\r\n            //this.rolepermissionData.dashboardviewunits = res[1].dashboardviewunits;\r\n            //this.rolepermissionData.dashboardcreateunits = res[1].dashboardcreateunits;\r\n            //this.rolepermissionData.dashboardeditunits = res[1].dashboardeditunits;\r\n            //this.rolepermissionData.dashboarddeleteunits = res[1].dashboarddeleteunits;\r\n            //this.rolepermissionData.dashboardhideunits = res[1].dashboardhideunits;\r\n            // Calendar Events    \r\n            if (res.roledata[2].view_action == 1) {\r\n                _this.rolepermissionData.calviewevents = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.calviewevents = false;\r\n            }\r\n            if (res.roledata[2].create_action == 1) {\r\n                _this.rolepermissionData.calcreateevents = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.calcreateevents = false;\r\n            }\r\n            if (res.roledata[2].edit_action == 1) {\r\n                _this.rolepermissionData.caleditevents = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.caleditevents = false;\r\n            }\r\n            if (res.roledata[2].delete_action == 1) {\r\n                _this.rolepermissionData.caldeleteevents = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.caldeleteevents = false;\r\n            }\r\n            // this.rolepermissionData.calviewevents = res[2].calviewevents;\r\n            //  this.rolepermissionData.calcreateevents = res[2].calcreateevents;\r\n            // this.rolepermissionData.caleditevents = res[2].caleditevents;\r\n            //this.rolepermissionData.caldeleteevents = res[2].caldeleteevents;\r\n            // Calendar Services\r\n            if (res.roledata[3].view_action == 1) {\r\n                _this.rolepermissionData.calviewservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.calviewservices = false;\r\n            }\r\n            if (res.roledata[3].create_action == 1) {\r\n                _this.rolepermissionData.calcreateservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.calcreateservices = false;\r\n            }\r\n            if (res.roledata[3].edit_action == 1) {\r\n                _this.rolepermissionData.caleditservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.caleditservices = false;\r\n            }\r\n            if (res.roledata[3].delete_action == 1) {\r\n                _this.rolepermissionData.caldeleteservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.caldeleteservices = false;\r\n            }\r\n            // this.rolepermissionData.calviewservices = res[3].calviewservices;\r\n            // this.rolepermissionData.calcreateservices = res[3].calcreateservices;\r\n            // this.rolepermissionData.caleditservices = res[3].caleditservices;\r\n            // this.rolepermissionData.caldeleteservices = res[3].caldeleteservices;\r\n            // Calendar Alarm \r\n            if (res.roledata[4].view_action == 1) {\r\n                _this.rolepermissionData.calviewalarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.calviewalarm = false;\r\n            }\r\n            if (res.roledata[4].create_action == 1) {\r\n                _this.rolepermissionData.calcreatealarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.calcreatealarm = false;\r\n            }\r\n            if (res.roledata[4].edit_action == 1) {\r\n                _this.rolepermissionData.caleditalarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.caleditalarm = false;\r\n            }\r\n            if (res.roledata[4].delete_action == 1) {\r\n                _this.rolepermissionData.caldeletealarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.caldeletealarm = false;\r\n            }\r\n            // this.rolepermissionData.calviewalarm = res[4].calviewalarm;\r\n            // this.rolepermissionData.calcreatealarm = res[4].calcreatealarm;\r\n            // this.rolepermissionData.caleditalarm = res[4].caleditalarm;\r\n            // this.rolepermissionData.caldeletealarm = res[4].caldeletealarm;\r\n            // Units Unit List\r\n            if (res.roledata[5].view_action == 1) {\r\n                _this.rolepermissionData.univiewlist = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.univiewlist = false;\r\n            }\r\n            if (res.roledata[5].create_action == 1) {\r\n                _this.rolepermissionData.unicreatelist = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unicreatelist = false;\r\n            }\r\n            if (res.roledata[5].edit_action == 1) {\r\n                _this.rolepermissionData.unieditlist = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unieditlist = false;\r\n            }\r\n            if (res.roledata[5].delete_action == 1) {\r\n                _this.rolepermissionData.unideletelist = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unideletelist = false;\r\n            }\r\n            //this.rolepermissionData.univiewlist = res[5].univiewlist;\r\n            //this.rolepermissionData.unicreatelist = res[5].unicreatelist;\r\n            //this.rolepermissionData.unieditlist = res[5].unieditlist;\r\n            // this.rolepermissionData.unideletelist = res[5].unideletelist;\r\n            // Units Alaram\r\n            if (res.roledata[6].view_action == 1) {\r\n                _this.rolepermissionData.univiewalarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.univiewalarm = false;\r\n            }\r\n            if (res.roledata[6].create_action == 1) {\r\n                _this.rolepermissionData.unicreatealarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unicreatealarm = false;\r\n            }\r\n            if (res.roledata[6].edit_action == 1) {\r\n                _this.rolepermissionData.unieditalarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unieditalarm = false;\r\n            }\r\n            if (res.roledata[6].delete_action == 1) {\r\n                _this.rolepermissionData.unideletealarm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unideletealarm = false;\r\n            }\r\n            // this.rolepermissionData.univiewalarm = res[6].univiewalarm;\r\n            // this.rolepermissionData.unicreatealarm = res[6].unicreatealarm;\r\n            // this.rolepermissionData.unieditalarm = res[6].unieditalarm;\r\n            // this.rolepermissionData.unideletealarm = res[6].unideletealarm;\r\n            // Units Services Info\r\n            if (res.roledata[7].view_action == 1) {\r\n                _this.rolepermissionData.univiewservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.univiewservices = false;\r\n            }\r\n            if (res.roledata[7].create_action == 1) {\r\n                _this.rolepermissionData.unicreateservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unicreateservices = false;\r\n            }\r\n            if (res.roledata[7].edit_action == 1) {\r\n                _this.rolepermissionData.unieditservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unieditservices = false;\r\n            }\r\n            if (res.roledata[7].delete_action == 1) {\r\n                _this.rolepermissionData.unideleteservices = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unideleteservices = false;\r\n            }\r\n            // this.rolepermissionData.univiewservices = res[7].univiewservices;\r\n            // this.rolepermissionData.unicreateservices = res[7].unicreateservices;\r\n            // this.rolepermissionData.unieditservices = res[7].unieditservices;\r\n            // this.rolepermissionData.unideleteservices = res[7].unideleteservices;\r\n            // Units Comments\r\n            if (res.roledata[8].view_action == 1) {\r\n                _this.rolepermissionData.univiewcomm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.univiewcomm = false;\r\n            }\r\n            if (res.roledata[8].create_action == 1) {\r\n                _this.rolepermissionData.unicreatecomm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unicreatecomm = false;\r\n            }\r\n            if (res.roledata[8].edit_action == 1) {\r\n                _this.rolepermissionData.unieditcomm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unieditcomm = false;\r\n            }\r\n            if (res.roledata[8].delete_action == 1) {\r\n                _this.rolepermissionData.unideletecomm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unideletecomm = false;\r\n            }\r\n            // this.rolepermissionData.univiewcomm = res[8].univiewcomm;\r\n            // this.rolepermissionData.unicreatecomm = res[8].unicreatecomm;\r\n            // this.rolepermissionData.unieditcomm = res[8].unieditcomm;\r\n            // this.rolepermissionData.unideletecomm = res[8].unideletecomm;\r\n            // Units Unit Group\r\n            if (res.roledata[9].view_action == 1) {\r\n                _this.rolepermissionData.univiewgroup = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.univiewgroup = false;\r\n            }\r\n            if (res.roledata[9].create_action == 1) {\r\n                _this.rolepermissionData.unicreategroup = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unicreategroup = false;\r\n            }\r\n            if (res.roledata[9].edit_action == 1) {\r\n                _this.rolepermissionData.unieditgroup = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unieditgroup = false;\r\n            }\r\n            if (res.roledata[9].delete_action == 1) {\r\n                _this.rolepermissionData.unideletegroup = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unideletegroup = false;\r\n            }\r\n            // this.rolepermissionData.univiewgroup = res[9].univiewgroup;\r\n            // this.rolepermissionData.unicreategroup = res[9].unicreategroup;\r\n            // this.rolepermissionData.unieditgroup = res[9].unieditgroup;\r\n            // this.rolepermissionData.unideletegroup = res[9].unideletegroup;\r\n            // Units Generator Model Managment\r\n            if (res.roledata[10].view_action == 1) {\r\n                _this.rolepermissionData.univiewgmm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.univiewgmm = false;\r\n            }\r\n            if (res.roledata[10].create_action == 1) {\r\n                _this.rolepermissionData.unicreategmm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unicreategmm = false;\r\n            }\r\n            if (res.roledata[10].edit_action == 1) {\r\n                _this.rolepermissionData.unieditgmm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unieditgmm = false;\r\n            }\r\n            if (res.roledata[10].delete_action == 1) {\r\n                _this.rolepermissionData.unideletegmm = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.unideletegmm = false;\r\n            }\r\n            // this.rolepermissionData.univiewgmm = res[10].univiewgmm;\r\n            // this.rolepermissionData.unicreategmm = res[10].unicreategmm;\r\n            // this.rolepermissionData.unieditgmm = res[10].unieditgmm;\r\n            // this.rolepermissionData.unideletegmm = res[10].unideletegmm;\r\n            // Reports\r\n            if (res.roledata[11].view_action == 1) {\r\n                _this.rolepermissionData.viewreports = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.viewreports = false;\r\n            }\r\n            if (res.roledata[11].create_action == 1) {\r\n                _this.rolepermissionData.createreports = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.createreports = false;\r\n            }\r\n            if (res.roledata[11].edit_action == 1) {\r\n                _this.rolepermissionData.editreports = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.editreports = false;\r\n            }\r\n            if (res.roledata[11].delete_action == 1) {\r\n                _this.rolepermissionData.deletereports = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.deletereports = false;\r\n            }\r\n            // this.rolepermissionData.viewreports = res[11].viewreports;\r\n            // this.rolepermissionData.createreports = res[11].createreports;\r\n            // this.rolepermissionData.editreports = res[11].editreports;\r\n            // this.rolepermissionData.deletereports = res[11].deletereports;\r\n            // Message Inbox\r\n            if (res.roledata[12].view_action == 1) {\r\n                _this.rolepermissionData.msgviewinbox = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgviewinbox = false;\r\n            }\r\n            if (res.roledata[12].create_action == 1) {\r\n                _this.rolepermissionData.msgcreateinbox = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgcreateinbox = false;\r\n            }\r\n            if (res.roledata[12].edit_action == 1) {\r\n                _this.rolepermissionData.msgeditinbox = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgeditinbox = false;\r\n            }\r\n            if (res.roledata[12].delete_action == 1) {\r\n                _this.rolepermissionData.msgdeleteinbox = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgdeleteinbox = false;\r\n            }\r\n            // this.rolepermissionData.msgviewinbox = res[12].msgviewinbox;\r\n            // this.rolepermissionData.msgcreateinbox = res[12].msgcreateinbox;\r\n            // this.rolepermissionData.msgeditinbox = res[12].msgeditinbox;\r\n            // this.rolepermissionData.msgdeleteinbox = res[12].msgdeleteinbox;\r\n            // Message Sent\r\n            if (res.roledata[13].view_action == 1) {\r\n                _this.rolepermissionData.msgviewsent = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgviewsent = false;\r\n            }\r\n            if (res.roledata[13].create_action == 1) {\r\n                _this.rolepermissionData.msgcreatesent = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgcreatesent = false;\r\n            }\r\n            if (res.roledata[13].edit_action == 1) {\r\n                _this.rolepermissionData.msgeditsent = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgeditsent = false;\r\n            }\r\n            if (res.roledata[13].delete_action == 1) {\r\n                _this.rolepermissionData.msgdeletesent = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.msgdeletesent = false;\r\n            }\r\n            // this.rolepermissionData.msgviewsent = res[13].msgviewsent;\r\n            // this.rolepermissionData.msgcreatesent = res[13].msgcreatesent;\r\n            // this.rolepermissionData.msgeditsent = res[13].msgeditsent;\r\n            // this.rolepermissionData.msgdeletesent = res[13].msgdeletesent;\r\n            // Settings My Account   \r\n            if (res.roledata[14].view_action == 1) {\r\n                _this.rolepermissionData.setviewmyacc = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setviewmyacc = false;\r\n            }\r\n            if (res.roledata[14].create_action == 1) {\r\n                _this.rolepermissionData.setcreatemyacc = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setcreatemyacc = false;\r\n            }\r\n            if (res.roledata[14].edit_action == 1) {\r\n                _this.rolepermissionData.seteditmyacc = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.seteditmyacc = false;\r\n            }\r\n            if (res.roledata[14].delete_action == 1) {\r\n                _this.rolepermissionData.setdeletemyacc = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setdeletemyacc = false;\r\n            }\r\n            // this.rolepermissionData.setviewmyacc = res[14].setviewmyacc;\r\n            // this.rolepermissionData.setcreatemyacc = res[14].setcreatemyacc;\r\n            // this.rolepermissionData.seteditmyacc = res[14].seteditmyacc;\r\n            // this.rolepermissionData.setdeletemyacc = res[14].setdeletemyacc;\r\n            // Settings User List\r\n            if (res.roledata[15].view_action == 1) {\r\n                _this.rolepermissionData.setviewuselst = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setviewuselst = false;\r\n            }\r\n            if (res.roledata[15].create_action == 1) {\r\n                _this.rolepermissionData.setcreateuselst = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setcreateuselst = false;\r\n            }\r\n            if (res.roledata[15].edit_action == 1) {\r\n                _this.rolepermissionData.setedituselst = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setedituselst = false;\r\n            }\r\n            if (res.roledata[15].delete_action == 1) {\r\n                _this.rolepermissionData.setdeleteuselst = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setdeleteuselst = false;\r\n            }\r\n            // this.rolepermissionData.setviewuselst = res[15].setviewuselst;\r\n            // this.rolepermissionData.setcreateuselst = res[15].setcreateuselst;\r\n            // this.rolepermissionData.setedituselst = res[15].setedituselst;\r\n            // this.rolepermissionData.setdeleteuselst = res[15].setdeleteuselst;\r\n            // Settings User Group\r\n            if (res.roledata[16].view_action == 1) {\r\n                _this.rolepermissionData.setviewusegru = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setviewusegru = false;\r\n            }\r\n            if (res.roledata[16].create_action == 1) {\r\n                _this.rolepermissionData.setcreateusegru = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setcreateusegru = false;\r\n            }\r\n            if (res.roledata[16].edit_action == 1) {\r\n                _this.rolepermissionData.seteditusegru = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.seteditusegru = false;\r\n            }\r\n            if (res.roledata[16].delete_action == 1) {\r\n                _this.rolepermissionData.setdeleteusegru = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setdeleteusegru = false;\r\n            }\r\n            // this.rolepermissionData.setviewusegru = res[16].setviewusegru;\r\n            // this.rolepermissionData.setcreateusegru = res[16].setcreateusegru;\r\n            // this.rolepermissionData.seteditusegru = res[16].seteditusegru;\r\n            // this.rolepermissionData.setdeleteusegru = res[16].setdeleteusegru;\r\n            // Settings User Role\r\n            if (res.roledata[17].view_action == 1) {\r\n                _this.rolepermissionData.setviewuserle = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setviewuserle = false;\r\n            }\r\n            if (res.roledata[17].create_action == 1) {\r\n                _this.rolepermissionData.setcreateuserle = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setcreateuserle = false;\r\n            }\r\n            if (res.roledata[17].edit_action == 1) {\r\n                _this.rolepermissionData.setedituserle = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setedituserle = false;\r\n            }\r\n            if (res.roledata[17].delete_action == 1) {\r\n                _this.rolepermissionData.setdeleteuserle = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setdeleteuserle = false;\r\n            }\r\n            // this.rolepermissionData.setviewuserle = res[17].setviewuserle;\r\n            // this.rolepermissionData.setcreateuserle = res[17].setcreateuserle;\r\n            // this.rolepermissionData.setedituserle = res[17].setedituserle;\r\n            // this.rolepermissionData.setdeleteuserle = res[17].setdeleteuserle;\r\n            // Settings Report Template\r\n            if (res.roledata[18].view_action == 1) {\r\n                _this.rolepermissionData.setviewtmp = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setviewtmp = false;\r\n            }\r\n            if (res.roledata[18].create_action == 1) {\r\n                _this.rolepermissionData.setcreatetmp = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setcreatetmp = false;\r\n            }\r\n            if (res.roledata[18].edit_action == 1) {\r\n                _this.rolepermissionData.setedittmp = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setedittmp = false;\r\n            }\r\n            if (res.roledata[18].delete_action == 1) {\r\n                _this.rolepermissionData.setdeletetmp = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setdeletetmp = false;\r\n            }\r\n            // this.rolepermissionData.setviewtmp = res[18].setviewtmp;\r\n            // this.rolepermissionData.setcreatetmp = res[18].setcreatetmp;\r\n            // this.rolepermissionData.setedittmp = res[18].setedittmp;\r\n            // this.rolepermissionData.setdeletetmp = res[18].setdeletetmp;\r\n            // Settings Org Chart\r\n            if (res.roledata[19].view_action == 1) {\r\n                _this.rolepermissionData.setvieworg = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setvieworg = false;\r\n            }\r\n            if (res.roledata[19].create_action == 1) {\r\n                _this.rolepermissionData.setcreateorg = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setcreateorg = false;\r\n            }\r\n            if (res.roledata[19].edit_action == 1) {\r\n                _this.rolepermissionData.seteditorg = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.seteditorg = false;\r\n            }\r\n            if (res.roledata[19].delete_action == 1) {\r\n                _this.rolepermissionData.setdeleteorg = true;\r\n            }\r\n            else {\r\n                _this.rolepermissionData.setdeleteorg = false;\r\n            }\r\n            // this.rolepermissionData.setvieworg = res[19].setvieworg;\r\n            // this.rolepermissionData.setcreateorg = res[19].setcreateorg;\r\n            // this.rolepermissionData.seteditorg = res[19].seteditorg;\r\n            // this.rolepermissionData.setdeleteorg = res[19].setdeleteorg;\r\n            //  console.log(\"dashboardviewmap:\" + res[1].dashboardviewunits);\r\n            console.log(\"Role Permission Data Response:\" + JSON.stringify(data.json()));\r\n        });\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddrolePage.prototype.createEntry = function (role_name, roleperMissionData, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1&role_name=\" + role_name + \"&module=\" + JSON.stringify(roleperMissionData) + \"&createdby=\" + createdby, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"role/store\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                console.log(data.json().Error);\r\n                if (data.json().Error > 0) {\r\n                    _this.roleperMissionData = [];\r\n                    _this.sendNotification(data.json().message);\r\n                }\r\n                else {\r\n                    //this.sendNotification(data.json().message);\r\n                    _this.sendNotification(\"Role  was successfully added\");\r\n                    _this.navCtrl.setRoot(RolePage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddrolePage.prototype.updateEntry = function (role_name, roleperMissionData, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1&role_name=\" + role_name + \"&module=\" + JSON.stringify(roleperMissionData) + \"&createdby=\" + createdby + \"&role_id=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"role/update\";\r\n        console.log(url + \"?\" + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                if (data.json().Error > 0) {\r\n                    _this.sendNotification(data.json().message);\r\n                }\r\n                else {\r\n                    //this.sendNotification(data.json().message);\r\n                    _this.sendNotification(\"Role  was successfully updated\");\r\n                    _this.navCtrl.setRoot(RolePage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddrolePage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var role_name = this.form.controls[\"role_name\"].value, body = \"is_mobile=1&role_name=\" + role_name + \"&module=\" + JSON.stringify(this.roleperMissionData) + \"&updatedby=\" + this.userId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"role/store\";\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the role: \" + role_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddrolePage.prototype.saveEntry = function () {\r\n        // console.log(\"Controll Form is:\"+JSON.stringify(this.form.controls));\r\n        this.roleperMissionData = [];\r\n        var role_name = this.form.controls[\"role_name\"].value;\r\n        var dashboardviewmap = this.form.controls[\"dashboardviewmap\"].value, dashboardcreatemap = this.form.controls[\"dashboardcreatemap\"].value, dashboardeditmap = this.form.controls[\"dashboardeditmap\"].value, dashboarddeletemap = this.form.controls[\"dashboarddeletemap\"].value, dashboardhidemap = this.form.controls[\"dashboardhidemap\"].value, dashboardviewunits = this.form.controls[\"dashboardviewunits\"].value, dashboardcreateunits = this.form.controls[\"dashboardcreateunits\"].value, dashboardeditunits = this.form.controls[\"dashboardeditunits\"].value, dashboarddeleteunits = this.form.controls[\"dashboarddeleteunits\"].value, dashboardhideunits = this.form.controls[\"dashboardhideunits\"].value, calviewevents = this.form.controls[\"calviewevents\"].value, calcreateevents = this.form.controls[\"calcreateevents\"].value, caleditevents = this.form.controls[\"caleditevents\"].value, caldeleteevents = this.form.controls[\"caldeleteevents\"].value, calviewservices = this.form.controls[\"calviewservices\"].value, calcreateservices = this.form.controls[\"calcreateservices\"].value, caleditservices = this.form.controls[\"caleditservices\"].value, caldeleteservices = this.form.controls[\"caldeleteservices\"].value, calviewalarm = this.form.controls[\"calviewalarm\"].value, calcreatealarm = this.form.controls[\"calcreatealarm\"].value, caleditalarm = this.form.controls[\"caleditalarm\"].value, caldeletealarm = this.form.controls[\"caldeletealarm\"].value, \r\n        // Units Unit List      \r\n        univiewlist = this.form.controls[\"univiewlist\"].value, unicreatelist = this.form.controls[\"unicreatelist\"].value, unieditlist = this.form.controls[\"unieditlist\"].value, unideletelist = this.form.controls[\"unideletelist\"].value, \r\n        // Units Alaram\r\n        univiewalarm = this.form.controls[\"univiewalarm\"].value, unicreatealarm = this.form.controls[\"unicreatealarm\"].value, unieditalarm = this.form.controls[\"unieditalarm\"].value, unideletealarm = this.form.controls[\"unideletealarm\"].value, \r\n        // Units Services Info\r\n        univiewservices = this.form.controls[\"univiewservices\"].value, unicreateservices = this.form.controls[\"unicreateservices\"].value, unieditservices = this.form.controls[\"unieditservices\"].value, unideleteservices = this.form.controls[\"unideleteservices\"].value, \r\n        // Units Comments\r\n        univiewcomm = this.form.controls[\"univiewcomm\"].value, unicreatecomm = this.form.controls[\"unicreatecomm\"].value, unieditcomm = this.form.controls[\"unieditcomm\"].value, unideletecomm = this.form.controls[\"unideletecomm\"].value, \r\n        // Units Unit Group\r\n        univiewgroup = this.form.controls[\"univiewgroup\"].value, unicreategroup = this.form.controls[\"unicreategroup\"].value, unieditgroup = this.form.controls[\"unieditgroup\"].value, unideletegroup = this.form.controls[\"unideletegroup\"].value, \r\n        // Units Generator Model Managment\r\n        univiewgmm = this.form.controls[\"univiewgmm\"].value, unicreategmm = this.form.controls[\"unicreategmm\"].value, unieditgmm = this.form.controls[\"unieditgmm\"].value, unideletegmm = this.form.controls[\"unideletegmm\"].value, \r\n        // Units Generator Model Managment\r\n        viewreports = this.form.controls[\"viewreports\"].value, createreports = this.form.controls[\"createreports\"].value, editreports = this.form.controls[\"editreports\"].value, deletereports = this.form.controls[\"deletereports\"].value, \r\n        // Message Inbox\r\n        msgviewinbox = this.form.controls[\"msgviewinbox\"].value, msgcreateinbox = this.form.controls[\"msgcreateinbox\"].value, msgeditinbox = this.form.controls[\"msgeditinbox\"].value, msgdeleteinbox = this.form.controls[\"msgdeleteinbox\"].value, \r\n        // Message Sent\r\n        msgviewsent = this.form.controls[\"msgviewsent\"].value, msgcreatesent = this.form.controls[\"msgcreatesent\"].value, msgeditsent = this.form.controls[\"msgeditsent\"].value, msgdeletesent = this.form.controls[\"msgdeletesent\"].value, \r\n        // Settings My Account\r\n        setviewmyacc = this.form.controls[\"setviewmyacc\"].value, setcreatemyacc = this.form.controls[\"setcreatemyacc\"].value, seteditmyacc = this.form.controls[\"seteditmyacc\"].value, setdeletemyacc = this.form.controls[\"setdeletemyacc\"].value, \r\n        // Settings User List\r\n        setviewuselst = this.form.controls[\"setviewuselst\"].value, setcreateuselst = this.form.controls[\"setcreateuselst\"].value, setedituselst = this.form.controls[\"setedituselst\"].value, setdeleteuselst = this.form.controls[\"setdeleteuselst\"].value, \r\n        // Settings User Group\r\n        setviewusegru = this.form.controls[\"setviewusegru\"].value, setcreateusegru = this.form.controls[\"setcreateusegru\"].value, seteditusegru = this.form.controls[\"seteditusegru\"].value, setdeleteusegru = this.form.controls[\"setdeleteusegru\"].value, \r\n        // Settings User Role\r\n        setviewuserle = this.form.controls[\"setviewuserle\"].value, setcreateuserle = this.form.controls[\"setcreateuserle\"].value, setedituserle = this.form.controls[\"setedituserle\"].value, setdeleteuserle = this.form.controls[\"setdeleteuserle\"].value, \r\n        // Settings Report Template\r\n        setviewtmp = this.form.controls[\"setviewtmp\"].value, setcreatetmp = this.form.controls[\"setcreatetmp\"].value, setedittmp = this.form.controls[\"setedittmp\"].value, setdeletetmp = this.form.controls[\"setdeletetmp\"].value, \r\n        // Settings Org Chart\r\n        setvieworg = this.form.controls[\"setvieworg\"].value, setcreateorg = this.form.controls[\"setcreateorg\"].value, seteditorg = this.form.controls[\"seteditorg\"].value, setdeleteorg = this.form.controls[\"setdeleteorg\"].value;\r\n        this.roleperMissionData.push({\r\n            \"module_1\": {\r\n                \"page_8\": {\r\n                    \"action_1\": dashboardviewmap,\r\n                    \"action_2\": dashboardcreatemap,\r\n                    \"action_3\": dashboardeditmap,\r\n                    \"action_4\": dashboarddeletemap,\r\n                    \"action_5\": dashboardhidemap\r\n                },\r\n                \"page_12\": {\r\n                    \"action_1\": dashboardviewunits,\r\n                    \"action_2\": dashboardcreateunits,\r\n                    \"action_3\": dashboardeditunits,\r\n                    \"action_4\": dashboarddeleteunits,\r\n                    \"action_5\": dashboardhideunits\r\n                }\r\n            },\r\n            \"module_2\": {\r\n                // Calendar Events\r\n                \"page_7\": {\r\n                    \"action_1\": calviewevents,\r\n                    \"action_2\": calcreateevents,\r\n                    \"action_3\": caleditevents,\r\n                    \"action_4\": caldeleteevents\r\n                },\r\n                // Calendar Services\r\n                \"page_18\": {\r\n                    \"action_1\": calviewservices,\r\n                    \"action_2\": calcreateservices,\r\n                    \"action_3\": caleditservices,\r\n                    \"action_4\": caldeleteservices\r\n                },\r\n                // Calendar Alarm\r\n                \"page_19\": {\r\n                    \"action_1\": calviewalarm,\r\n                    \"action_2\": calcreatealarm,\r\n                    \"action_3\": caleditalarm,\r\n                    \"action_4\": caldeletealarm\r\n                }\r\n            },\r\n            \"module_3\": {\r\n                // Units Unit List\r\n                \"page_9\": {\r\n                    \"action_1\": univiewlist,\r\n                    \"action_2\": unicreatelist,\r\n                    \"action_3\": unieditlist,\r\n                    \"action_4\": unideletelist\r\n                },\r\n                // Units Alaram\r\n                \"page_13\": {\r\n                    \"action_1\": univiewalarm,\r\n                    \"action_2\": unicreatealarm,\r\n                    \"action_3\": unieditalarm,\r\n                    \"action_4\": unideletealarm\r\n                },\r\n                // Units Services Info\r\n                \"page_14\": {\r\n                    \"action_1\": univiewservices,\r\n                    \"action_2\": unicreateservices,\r\n                    \"action_3\": unieditservices,\r\n                    \"action_4\": unideleteservices\r\n                },\r\n                // Units Comments\r\n                \"page_15\": {\r\n                    \"action_1\": univiewcomm,\r\n                    \"action_2\": unicreatecomm,\r\n                    \"action_3\": unieditcomm,\r\n                    \"action_4\": unideletecomm\r\n                },\r\n                // Units Unit Group\r\n                \"page_16\": {\r\n                    \"action_1\": univiewgroup,\r\n                    \"action_2\": unicreategroup,\r\n                    \"action_3\": unieditgroup,\r\n                    \"action_4\": unideletegroup\r\n                },\r\n                // Units Generator Model Managment\r\n                \"page_20\": {\r\n                    \"action_1\": univiewgmm,\r\n                    \"action_2\": unicreategmm,\r\n                    \"action_3\": unieditgmm,\r\n                    \"action_4\": unideletegmm\r\n                }\r\n            },\r\n            \"module_4\": {\r\n                \"page_10\": {\r\n                    \"action_1\": viewreports,\r\n                    \"action_2\": createreports,\r\n                    \"action_3\": editreports,\r\n                    \"action_4\": deletereports\r\n                }\r\n            },\r\n            \"module_5\": {\r\n                // Message Inbox\r\n                \"page_11\": {\r\n                    \"action_1\": msgviewinbox,\r\n                    \"action_2\": msgcreateinbox,\r\n                    \"action_3\": msgeditinbox,\r\n                    \"action_4\": msgdeleteinbox\r\n                },\r\n                // Message Sent\r\n                \"page_17\": {\r\n                    \"action_1\": msgviewsent,\r\n                    \"action_2\": msgcreatesent,\r\n                    \"action_3\": msgeditsent,\r\n                    \"action_4\": msgdeletesent\r\n                }\r\n            },\r\n            \"module_6\": {\r\n                // Settings My Account\r\n                \"page_1\": {\r\n                    \"action_1\": setviewmyacc,\r\n                    \"action_2\": setcreatemyacc,\r\n                    \"action_3\": seteditmyacc,\r\n                    \"action_4\": setdeletemyacc\r\n                },\r\n                // Settings User List\r\n                \"page_2\": {\r\n                    \"action_1\": setviewuselst,\r\n                    \"action_2\": setcreateuselst,\r\n                    \"action_3\": setedituselst,\r\n                    \"action_4\": setdeleteuselst\r\n                },\r\n                // Settings User Group\r\n                \"page_3\": {\r\n                    \"action_1\": setviewusegru,\r\n                    \"action_2\": setcreateusegru,\r\n                    \"action_3\": seteditusegru,\r\n                    \"action_4\": setdeleteusegru\r\n                },\r\n                // Settings User Role\r\n                \"page_4\": {\r\n                    \"action_1\": setviewuserle,\r\n                    \"action_2\": setcreateuserle,\r\n                    \"action_3\": setedituserle,\r\n                    \"action_4\": setdeleteuserle\r\n                },\r\n                // Settings Report Template\r\n                \"page_5\": {\r\n                    \"action_1\": setviewtmp,\r\n                    \"action_2\": setcreatetmp,\r\n                    \"action_3\": setedittmp,\r\n                    \"action_4\": setdeletetmp\r\n                },\r\n                // Settings Org Chart\r\n                \"page_6\": {\r\n                    \"action_1\": setvieworg,\r\n                    \"action_2\": setcreateorg,\r\n                    \"action_3\": seteditorg,\r\n                    \"action_4\": setdeleteorg\r\n                }\r\n            }\r\n        });\r\n        console.log(\"1\" + this.roleperMissionData);\r\n        console.log(\"2\" + JSON.stringify(this.roleperMissionData));\r\n        if (this.isEdited) {\r\n            this.updateEntry(role_name, this.roleperMissionData, this.userId);\r\n        }\r\n        else {\r\n            this.createEntry(role_name, this.roleperMissionData, this.userId);\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddrolePage.prototype.resetFields = function () {\r\n        this.role_name = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddrolePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddrolePage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(RolePage);\r\n    };\r\n    AddrolePage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    AddrolePage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    AddrolePage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    AddrolePage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    AddrolePage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    AddrolePage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    return AddrolePage;\r\n}());\r\nAddrolePage = __decorate([\r\n    Component({\r\n        selector: 'page-addrole',\r\n        templateUrl: 'addrole.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddrolePage);\r\nexport { AddrolePage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addrole.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addrole/addrole.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddrolePage } from '../addrole/addrole';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddrolePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar RolePage = (function () {\r\n    function RolePage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com/\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'asc',\r\n            sortascdesc: '',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Roles';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.VIEWACCESS = localStorage.getItem(\"SETTINGS_USERROLE_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"SETTINGS_USERROLE_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"SETTINGS_USERROLE_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"SETTINGS_USERROLE_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    RolePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad RolePage');\r\n    };\r\n    /*******************/\r\n    /* Pull to Refresh */\r\n    /*******************/\r\n    RolePage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doRole();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /****************************/\r\n    /*@doRole calling on report */\r\n    /****************************/\r\n    RolePage.prototype.doRole = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"vendor\";\r\n        }\r\n        //console.log(\"key=run&startIndex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&statusName=\" + this.reportData.status + \"&pagination=true\");\r\n        var //body: string = \"key=run&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&statusName=\" + this.reportData.status + \"&pagination=true\",\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"role?is_mobile=1&role_name=\" + this.reportData.sort;\r\n        console.log(url);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            if (res.roles.length > 0) {\r\n                _this.reportAllLists = res.roles;\r\n                // this.totalCount = res[0].totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                //this.totalCount = 0;\r\n            }\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    RolePage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doRole();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    RolePage.prototype.ionViewWillEnter = function () {\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"createdon\";\r\n        if (this.VIEWACCESS > 0) {\r\n            this.doRole();\r\n        }\r\n    };\r\n    RolePage.prototype.doAdd = function () {\r\n        this.nav.setRoot(AddrolePage);\r\n    };\r\n    RolePage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddrolePage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n    };\r\n    RolePage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[1];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doRole();\r\n    };\r\n    /******************************************/\r\n    /* @doConfirm called for alert dialog box **/\r\n    /******************************************/\r\n    RolePage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this role?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    RolePage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        // body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"role/\" + recordID + \"/1/delete\";\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"role name was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    RolePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    /********************/\r\n    /* Sorting function */\r\n    /********************/\r\n    RolePage.prototype.doSort = function (val) {\r\n        console.log('1');\r\n        this.reportAllLists = [];\r\n        this.reportData.startindex = 0;\r\n        console.log('2');\r\n        this.sortby = 1;\r\n        if (this.vendorsort == \"asc\") {\r\n            this.reportData.sortascdesc = \"desc\";\r\n            this.vendorsort = \"desc\";\r\n            this.ascending = false;\r\n            console.log('3');\r\n        }\r\n        else {\r\n            console.log('4');\r\n            this.reportData.sortascdesc = \"asc\";\r\n            this.vendorsort = \"asc\";\r\n            this.ascending = true;\r\n        }\r\n        console.log('5');\r\n        this.reportData.sort = val;\r\n        this.doRole();\r\n        console.log('6');\r\n    };\r\n    RolePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    RolePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    RolePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    RolePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    RolePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    RolePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    RolePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    RolePage.prototype.previous = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    return RolePage;\r\n}());\r\nRolePage = __decorate([\r\n    Component({\r\n        selector: 'page-role',\r\n        templateUrl: 'role.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], RolePage);\r\nexport { RolePage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=role.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/role/role.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n//import { AddunitgroupPage } from '../addunitgroup/addunitgroup';\r\nimport { ReporttemplatePage } from '../reporttemplate/reporttemplate';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n///import { LoadingController } from 'ionic-angular';\r\n/**\r\n * Generated class for the AddreporttemplatePage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Io//nic pages and navigation.\r\n */\r\nvar AddreporttemplatePage = (function () {\r\n    function AddreporttemplatePage(nav, http, NP, fb, toastCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.items = [];\r\n        this.template_data = [];\r\n        this.getCheckboxData = [];\r\n        this.availableheading = [];\r\n        this.availableheadingitem = [];\r\n        this.recordID = null;\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"templatename\": [\"\", Validators.required]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    /*\r\n  insertUserToArray(id,item){\r\n  //check item.user and do stuff\r\n  \r\n  console.log(\"Current Available Loop Data\"+JSON.stringify(this.availableheadingitem));\r\n  console.log(\"Id\"+id+\"<==>\"+item._value);\r\n  \r\n  console.log(\"Selected DAta:\"+JSON.stringify(this.getCheckboxData));\r\n  }*/\r\n    AddreporttemplatePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddreporttemplatePage');\r\n    };\r\n    AddreporttemplatePage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        if (this.NP.get(\"record\")) {\r\n            this.pageTitle = \"Edit Template\";\r\n            console.log(this.NP.get(\"record\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n        }\r\n        else {\r\n            this.pageTitle = \"Add Template\";\r\n            this.isEdited = false;\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getavailableheading\";\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            var checkvalue = false;\r\n            if (res.templatedata.length > 0) {\r\n                for (var tempdata in res.templatedata) {\r\n                    if (_this.NP.get(\"record\")) {\r\n                        if (_this.in_array(res.templatedata[tempdata].availabledata, _this.NP.get(\"record\").availableheading) != -1) {\r\n                            //is in array\r\n                            checkvalue = true;\r\n                            _this.getCheckboxData.push({\r\n                                availabledata: res.templatedata[tempdata].availabledata\r\n                            });\r\n                        }\r\n                        else {\r\n                            checkvalue = false;\r\n                        }\r\n                    }\r\n                    _this.availableheadingitem.push({\r\n                        id: res.templatedata[tempdata].id,\r\n                        availabledata: res.templatedata[tempdata].availabledata,\r\n                        check: checkvalue\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    AddreporttemplatePage.prototype.in_array = function (needle, haystack) {\r\n        var found = 0;\r\n        for (var i = 0, len = haystack.length; i < len; i++) {\r\n            if (haystack[i] == needle)\r\n                return i;\r\n            found++;\r\n        }\r\n        return -1;\r\n    };\r\n    /*getCheckBoxValue(name) {\r\n      console.log(\"Available data\" + name);\r\n  \r\n  \r\n      this.getCheckboxData.push({\r\n        availabledata: name\r\n      })\r\n      console.log(JSON.stringify(this.getCheckboxData));\r\n    }*/\r\n    AddreporttemplatePage.prototype.getCheckBoxValue = function (id, item, value) {\r\n    };\r\n    AddreporttemplatePage.prototype.insertUserToArray = function (id, item, value) {\r\n        /* console.log(\"Available data\" + name);\r\n     \r\n     \r\n         this.getCheckboxData.push({\r\n           availabledata: name\r\n         })\r\n         console.log(JSON.stringify(this.getCheckboxData));\r\n         */\r\n        //check item.user and do stuff\r\n        console.log(\"Current Available Loop Data\" + JSON.stringify(this.availableheadingitem));\r\n        console.log(\"Id:\" + id + \"<==>Checkbox Boolean:\" + item._value + \"<==>Checkbox value:\" + value);\r\n        //console.log(\"Selected DAta:\"+JSON.stringify(this.getCheckboxData));\r\n        //this.getCheckboxData.splice(1,1);\r\n        //console.log(\"Filter DAta:\"+JSON.stringify(this.getCheckboxData));\r\n        if (item._value == true) {\r\n            this.getCheckboxData.push({ \"availabledata\": value });\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.getCheckboxData.length; i++) {\r\n                if (this.getCheckboxData[i].availabledata == value) {\r\n                    this.getCheckboxData.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        console.log(\"Edited Data\" + JSON.stringify(this.getCheckboxData));\r\n    };\r\n    AddreporttemplatePage.prototype.saveEntry = function () {\r\n        if (this.isEdited) {\r\n            this.updateEntry();\r\n        }\r\n        else {\r\n            this.createEntry();\r\n        }\r\n    };\r\n    AddreporttemplatePage.prototype.remove_duplicates = function (arr) {\r\n        // var obj = {};\r\n        // var ret_arr = [];\r\n        // for (var i = 0; i < arr.length; i++) {\r\n        //     obj[arr[i]] = true;\r\n        // }\r\n        // for (var key in obj) {\r\n        //     ret_arr.push(key);\r\n        //     console.log(key);\r\n        // }\r\n        // return ret_arr;\r\n        var uniqueArray = arr.filter(function (elem, pos) {\r\n            return arr.indexOf(elem) == pos;\r\n        });\r\n    };\r\n    AddreporttemplatePage.prototype.updateEntry = function () {\r\n        var _this = this;\r\n        if (this.getCheckboxData.length == 0) {\r\n            this.sendNotification('Checkbox ateast one should be selected');\r\n        }\r\n        else {\r\n            var getCheckbox = this.remove_duplicates(this.getCheckboxData);\r\n            console.log(\"Check\" + getCheckbox);\r\n            var templatename = this.form.controls[\"templatename\"].value;\r\n            var body = \"is_mobile=1&templatename=\" + templatename + \"&data=\" + JSON.stringify(this.getCheckboxData) + \"&id=\" + this.recordID + \"&ses_login_id=\" + this.userId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/reporttemplate/update\";\r\n            console.log(url + \"?\" + body);\r\n            this.http.post(url, body, options)\r\n                .subscribe(function (data) {\r\n                var res = data.json();\r\n                console.log(JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                    if (res.msg[0].result > 0) {\r\n                        _this.sendNotification(res.msg[0].result);\r\n                        _this.nav.setRoot(ReporttemplatePage);\r\n                    }\r\n                    else {\r\n                        _this.sendNotification(res.msg[0].result);\r\n                        _this.nav.setRoot(ReporttemplatePage);\r\n                    }\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    AddreporttemplatePage.prototype.selectEntry = function (item) {\r\n        this.templatename = item.templatename;\r\n        console.log(\"Id:\" + item.id);\r\n        this.recordID = item.id;\r\n        console.log(\"Available Heading:\" + JSON.stringify(item.availableheading));\r\n        console.log(item.availableheading);\r\n        for (var ava = 0; ava < item.availableheading; ava++) {\r\n            console.log(item.availableheading[ava]);\r\n        }\r\n    };\r\n    AddreporttemplatePage.prototype.createEntry = function () {\r\n        var _this = this;\r\n        if (this.getCheckboxData.length == 0) {\r\n            this.sendNotification('Checkbox ateast one should be selected');\r\n        }\r\n        else {\r\n            console.log(JSON.stringify(this.getCheckboxData));\r\n            var templatename = this.form.controls[\"templatename\"].value;\r\n            var body = \"is_mobile=1&templatename=\" + templatename + \"&data=\" + JSON.stringify(this.getCheckboxData) + \"&ses_login_id=\" + this.userId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/reporttemplate/store\";\r\n            console.log(url + \"?\" + body);\r\n            this.http.post(url, body, options)\r\n                .subscribe(function (data) {\r\n                var res = data.json();\r\n                console.log(JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                    if (res.msg[0].result > 0) {\r\n                        _this.sendNotification(res.msg[0].result);\r\n                        _this.nav.setRoot(ReporttemplatePage);\r\n                    }\r\n                    else {\r\n                        _this.sendNotification(res.msg[0].result);\r\n                        _this.nav.setRoot(ReporttemplatePage);\r\n                    }\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    AddreporttemplatePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddreporttemplatePage.prototype.previous = function () {\r\n        this.nav.setRoot(ReporttemplatePage);\r\n    };\r\n    AddreporttemplatePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddreporttemplatePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddreporttemplatePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddreporttemplatePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddreporttemplatePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddreporttemplatePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddreporttemplatePage;\r\n}());\r\nAddreporttemplatePage = __decorate([\r\n    Component({\r\n        selector: 'page-addreporttemplate',\r\n        templateUrl: 'addreporttemplate.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddreporttemplatePage);\r\nexport { AddreporttemplatePage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addreporttemplate.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addreporttemplate/addreporttemplate.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddreporttemplatePage } from '../addreporttemplate/addreporttemplate';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n//import { TabsPage } from '../tabs/tabs';\r\n/**\r\n * Generated class for the UnitgroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar ReporttemplatePage = (function () {\r\n    function ReporttemplatePage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unitgroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"SETTINGS_REPORTTEMPLATE_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"SETTINGS_REPORTTEMPLATE_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"SETTINGS_REPORTTEMPLATE_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"SETTINGS_REPORTTEMPLATE_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n        this.pageTitle = 'Report Template';\r\n    }\r\n    ReporttemplatePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad ReporttemplatePage');\r\n    };\r\n    ReporttemplatePage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doReport();\r\n    };\r\n    ReporttemplatePage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        if (this.VIEWACCESS > 0) {\r\n            this.doReport();\r\n        }\r\n    };\r\n    ReporttemplatePage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doReport();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    ReporttemplatePage.prototype.doReport = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"unitgroup_id\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        // url: any = this.apiServiceURL + \"/reporttemplate?is_mobile=1\";\r\n        url = this.apiServiceURL + \"/reporttemplate?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.availabletemp.length);\r\n            console.log(\"2\" + res.availabletemp);\r\n            if (res.availabletemp.length > 0) {\r\n                for (var availabletemps in res.availabletemp) {\r\n                    _this.reportAllLists.push({\r\n                        id: res.availabletemp[availabletemps].id,\r\n                        templatename: res.availabletemp[availabletemps].templatename,\r\n                        availableheading: res.availabletemp[availabletemps].availableheading.split(\"#\")\r\n                    });\r\n                }\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                //this.totalCount = 0;\r\n            }\r\n            // console.log(\"Total Record:2\" + this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    ReporttemplatePage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doReport();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    ReporttemplatePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    ReporttemplatePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    ReporttemplatePage.prototype.doAdd = function (availableheading) {\r\n        this.nav.setRoot(AddreporttemplatePage, {\r\n            availableheading: availableheading\r\n        });\r\n    };\r\n    ReporttemplatePage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this report template?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    ReporttemplatePage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/reporttemplate/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Report Template was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    ReporttemplatePage.prototype.doEdit = function (item, act, availableheading) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddreporttemplatePage, {\r\n                record: item,\r\n                act: act,\r\n                availableheading: availableheading\r\n            });\r\n        }\r\n    };\r\n    ReporttemplatePage.prototype.previous = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    ReporttemplatePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    ReporttemplatePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    ReporttemplatePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    ReporttemplatePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    ReporttemplatePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    ReporttemplatePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return ReporttemplatePage;\r\n}());\r\nReporttemplatePage = __decorate([\r\n    Component({\r\n        selector: 'page-reporttemplate',\r\n        templateUrl: 'reporttemplate.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], ReporttemplatePage);\r\nexport { ReporttemplatePage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=reporttemplate.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reporttemplate/reporttemplate.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { EditprofilesteponePage } from '../editprofilestepone/editprofilestepone';\r\nimport { HomePage } from '../home/home';\r\nimport { UserPage } from '../user/user';\r\nimport { UnitsPage } from '../units/units';\r\nimport { RolePage } from '../role/role';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport { ReporttemplatePage } from '../reporttemplate/reporttemplate';\r\n/**\r\n * Generated class for the MyaccountPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar MyaccountPage = (function () {\r\n    function MyaccountPage(http, navCtrl, navParams, nav) {\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pageTitle = 'My Account';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"SETTINGS_MYACCOUNT_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"SETTINGS_MYACCOUNT_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"SETTINGS_MYACCOUNT_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"SETTINGS_MYACCOUNT_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    //[{\"userid\":\"1\",\"userdetailsid\":\"1\",\"username\":\"webkannan\",\"password\":\"webkannan\",\"role\":\"1\",\"hashtag\":\"@welcome\",\"first_name\":\"Kannan\",\"last_name\":\"Nagarathinam\",\"email\":\"kannan@gmail.com\",\"contact\":\"123456789\",\"country\":\"2\",\"photo\":\"1496647262537.jpg\",\"job_position\":\"At prog\",\"report_to\":\"0\",\"company_group\":\"1\",\"companygroup_name\":\"Denyo\"}]\r\n    MyaccountPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        // body: string = \"key=myaccount&userId=\" + this.userId,\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/settings/profile?is_mobile=1&loggedin_id=\" + this.userId;\r\n        console.log(url);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.settings.length);\r\n            console.log(\"2\" + res.settings);\r\n            if (res.settings.length > 0) {\r\n                _this.userid = res.settings[0].username;\r\n                _this.password = res.settings[0].password;\r\n                _this.hashtag = \"@\" + _this.userid;\r\n                _this.role = res.settings[0].role_name;\r\n                _this.email = res.settings[0].email;\r\n                _this.country = res.settings[0].country_name;\r\n                _this.job_position = res.settings[0].job_position;\r\n                _this.accountcreatedby = res.settings[0].report_to;\r\n                console.log(\"A\" + res.settings[0].photo_filename);\r\n                if (res.settings[0].photo_filename != 'undefined' && res.settings[0].photo_filename != undefined) {\r\n                    console.log(\"B\");\r\n                    _this.photo = _this.apiServiceURL + \"/staffphotos/\" + res.settings[0].photo_filename;\r\n                }\r\n                else {\r\n                    console.log('No photo available');\r\n                    _this.photo = 'img/undefined.png';\r\n                }\r\n            }\r\n            // [{ \"userid\": \"1\", \"userdetailsid\": \"1\", \"username\": \"denyov2\", \"password\": \"e3b81d385ca4c26109dfbda28c563e2b\", \"firstname\": \"Super Admin\", \"lastname\": \"Denyo\", \"email\": \"balamurugan@webneo.in\", \"contact_number\": \"9597645985\", \"country_id\": \"99\", \"photo\": \"1496647262537.jpg\", \"job_position\": \"Country Manager\", \"report_to\": \"0\", \"company_id\": \"1\", \"companygroup_name\": \"Denyo\" }]\r\n        });\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url1);\r\n        // console.log(body);\r\n        this.http.get(url1, options1)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    MyaccountPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad My Account Page');\r\n    };\r\n    MyaccountPage.prototype.doEdit = function (userid) {\r\n        this.nav.setRoot(EditprofilesteponePage, {\r\n            userId: userid\r\n        });\r\n    };\r\n    MyaccountPage.prototype.viewOrgChart = function () {\r\n        this.nav.setRoot(OrgchartPage, {\r\n            companyId: this.companyId\r\n        });\r\n    };\r\n    MyaccountPage.prototype.previous = function () {\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    MyaccountPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    MyaccountPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    MyaccountPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    MyaccountPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    MyaccountPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    MyaccountPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    MyaccountPage.prototype.user = function () {\r\n        this.nav.setRoot(UserPage);\r\n    };\r\n    MyaccountPage.prototype.cgroup = function () {\r\n        this.nav.setRoot(CompanygroupPage);\r\n    };\r\n    MyaccountPage.prototype.urole = function () {\r\n        this.nav.setRoot(RolePage);\r\n    };\r\n    MyaccountPage.prototype.orgchart = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    MyaccountPage.prototype.report = function () {\r\n        this.nav.setRoot(ReporttemplatePage);\r\n    };\r\n    return MyaccountPage;\r\n}());\r\nMyaccountPage = __decorate([\r\n    Component({\r\n        selector: 'page-myaccount',\r\n        templateUrl: 'myaccount.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object])\r\n], MyaccountPage);\r\nexport { MyaccountPage };\r\nvar _a, _b, _c, _d;\r\n//# sourceMappingURL=myaccount.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/myaccount/myaccount.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ViewController } from 'ionic-angular';\r\nimport { EmailPage } from '../email/email';\r\n/**\r\n * Generated class for the PopoverPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar PopoverPage = (function () {\r\n    function PopoverPage(viewCtrl, NP, nav) {\r\n        this.viewCtrl = viewCtrl;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.itemDataDelete = [];\r\n        this.itemData = this.NP.get(\"item\");\r\n        console.log(JSON.stringify(this.itemData));\r\n        this.itemDataDelete.push({ staff_id: this.itemData.staff_id });\r\n        this.photo = this.itemData.photo;\r\n        this.firstname = this.itemData.firstname;\r\n        this.lastname = this.itemData.lastname;\r\n        this.job_position = this.itemData.job_position;\r\n        this.ht = this.itemData.personalhashtag;\r\n        this.email = this.itemData.email;\r\n        this.cn = this.itemData.contact_number;\r\n        this.EDITACCESS = localStorage.getItem(\"SETTINGS_ORGCHART_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"SETTINGS_ORGCHART_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    PopoverPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad PopoverPage');\r\n    };\r\n    PopoverPage.prototype.close = function (itemData) {\r\n        this.viewCtrl.dismiss(itemData);\r\n    };\r\n    PopoverPage.prototype.mail = function () {\r\n        console.log(\"HELLO\" + this.email);\r\n        this.nav.setRoot(EmailPage, {\r\n            recordemail: this.email\r\n        });\r\n    };\r\n    return PopoverPage;\r\n}());\r\nPopoverPage = __decorate([\r\n    Component({\r\n        selector: 'page-popover',\r\n        templateUrl: 'popover.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof NavController !== \"undefined\" && NavController) === \"function\" && _c || Object])\r\n], PopoverPage);\r\nexport { PopoverPage };\r\nvar _a, _b, _c;\r\n//# sourceMappingURL=popover.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/popover/popover.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddorgchartonePage } from '../addorgchartone/addorgchartone';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { PopoverPage } from '../popover/popover';\r\nimport { EmailPage } from '../email/email';\r\nimport { PopoverController } from 'ionic-angular';\r\n//import * as $ from 'jquery';\r\n//import \"slick-carousel\";\r\n/**\r\n * Generated class for the UnitgroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar OrgchartPage = (function () {\r\n    function OrgchartPage(NP, popoverCtrl, http, nav, sanitizer, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.NP = NP;\r\n        this.popoverCtrl = popoverCtrl;\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.sanitizer = sanitizer;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unitgroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.parents = [];\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.apiServiceURL = this.apiServiceURL;\r\n        //Authorization Get Value\r\n        this.VIEWACCESS = localStorage.getItem(\"SETTINGS_ORGCHART_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"SETTINGS_ORGCHART_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        //Authorization Get Value\r\n    }\r\n    OrgchartPage.prototype.presentPopover = function (myEvent, item) {\r\n        var _this = this;\r\n        var popover = this.popoverCtrl.create(PopoverPage, { item: item });\r\n        popover.present({\r\n            ev: myEvent,\r\n        });\r\n        popover.onWillDismiss(function (data) {\r\n            console.log(JSON.stringify(data));\r\n            if (data != null) {\r\n                if (data.length == 1) {\r\n                    _this.doDelete(data);\r\n                }\r\n                else {\r\n                    _this.doEdit(data, 'edit');\r\n                }\r\n            }\r\n        });\r\n    };\r\n    OrgchartPage.prototype.doDelete = function (item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + item[0].staff_id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(item[0].staff_id);\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    OrgchartPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/staff/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Orgchart was successfully deleted\");\r\n                _this.parents = [];\r\n                _this.doOrgChart();\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    OrgchartPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    OrgchartPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad OrgchartPage');\r\n    };\r\n    OrgchartPage.prototype.onSegmentChanged = function (val) {\r\n        this.companyId = val;\r\n        this.parents = [];\r\n        this.doOrgChart();\r\n    };\r\n    OrgchartPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.getCompanyGroupListData();\r\n        var compId = this.NP.get(\"companyId\");\r\n        if (compId > 0) {\r\n            this.pet = compId;\r\n            this.companyId = compId;\r\n        }\r\n        else {\r\n            this.pet = this.companyId;\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        // this.iframeContent =  \"<iframe id='filecontainer' src=\" + \"http://denyoappv2.stridecdev.com/orgchart?company_id=\"+this.companyId+\"&is_mobile=1&id=\"+this.userId+\" height=350 width=100% frameborder=0></iframe>\";\r\n        this.pageTitle = \"Org Chart\";\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"unitgroup_id\";\r\n        if (this.VIEWACCESS > 0) {\r\n            this.doOrgChart();\r\n        }\r\n        console.log(this.apiServiceURL + \"/orgchart?company_id=\" + this.companyId + \"&is_mobile=1\");\r\n        // this.iframeContent = \"<iframe src=\" + \"http://denyoappv2.stridecdev.com/orgchart?company_id=\" + this.companyId + \"&is_mobile=1&id=\" + this.userId + \" width=350  frameborder=0  scrolling=yes></iframe>\";\r\n    };\r\n    OrgchartPage.prototype.doOrgChart = function () {\r\n        var _this = this;\r\n        //this.presentLoading(1);\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/orgchart?company_id=\" + this.companyId + \"&is_mobile=1&id=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // this.presentLoading(0);\r\n            // console.log(\"Orgchart Response Success:\" + JSON.stringify(data.json()));\r\n            res = data.json();\r\n            console.log(\"Parent\" + JSON.stringify(res));\r\n            if (res.parents.length > 0) {\r\n                _this.parents = res.parents;\r\n                // this.responseResultCompany = res.companies;\r\n                //console.log(\"1:\"+JSON.stringify(this.responseResultCompany));\r\n            }\r\n            else {\r\n                //this.totalCount = 0;\r\n            }\r\n        });\r\n    };\r\n    OrgchartPage.prototype.getCompanyGroupListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getcompanies?loginid=\" + this.userId;\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCompanyGroup = res.companies;\r\n        });\r\n    };\r\n    OrgchartPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    OrgchartPage.prototype.doAdd = function () {\r\n        this.nav.setRoot(AddorgchartonePage);\r\n    };\r\n    OrgchartPage.prototype.previous = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    OrgchartPage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddorgchartonePage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n    };\r\n    OrgchartPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    OrgchartPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    OrgchartPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    OrgchartPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    OrgchartPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    OrgchartPage.prototype.redirectToSettings = function () {\r\n        //this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return OrgchartPage;\r\n}());\r\nOrgchartPage = __decorate([\r\n    Component({\r\n        selector: 'page-orgchart',\r\n        templateUrl: 'orgchart.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _a || Object, typeof (_b = typeof PopoverController !== \"undefined\" && PopoverController) === \"function\" && _b || Object, typeof (_c = typeof Http !== \"undefined\" && Http) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _e || Object, typeof (_f = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object, typeof (_h = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _h || Object, typeof (_j = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _j || Object])\r\n], OrgchartPage);\r\nexport { OrgchartPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n//# sourceMappingURL=orgchart.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/orgchart/orgchart.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { ActionSheetController, AlertController, NavController, NavParams, ViewController, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { DashboardPage } from '../dashboard/dashboard';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddserviceinfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar EmailPage = EmailPage_1 = (function () {\r\n    function EmailPage(actionSheetCtrl, keyboard, file, http, loadingCtrl, alertCtrl, NP, nav, toastCtrl, navParams, viewCtrl, formBuilder, camera, filechooser, transfer, ngZone) {\r\n        var _this = this;\r\n        this.actionSheetCtrl = actionSheetCtrl;\r\n        this.keyboard = keyboard;\r\n        this.file = file;\r\n        this.http = http;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.navParams = navParams;\r\n        this.viewCtrl = viewCtrl;\r\n        this.camera = camera;\r\n        this.filechooser = filechooser;\r\n        this.transfer = transfer;\r\n        this.ngZone = ngZone;\r\n        this.photoInfo = [];\r\n        this.inboxLists = [];\r\n        this.sendLists = [];\r\n        this.addedImgListsArray = [];\r\n        this.addedImgLists = [];\r\n        this.attachedFileLists = [];\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.pet = \"\";\r\n        this.choice = \"inbox\";\r\n        this.isSubmitted = false;\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        this.selectedAction = [];\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.valueforngif = true;\r\n        this.inboxData = {\r\n            status: '',\r\n            sort: 'messages_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.sendData = {\r\n            status: '',\r\n            sort: 'messages_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.hideActionButton = true;\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.replyforward = 0;\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        // Authority for message send\r\n        this.MESSAGESENTVIEWACCESS = localStorage.getItem(\"MESSAGE_SENT_VIEW\");\r\n        this.MESSAGESENTCREATEACCESS = localStorage.getItem(\"MESSAGE_SENT_CREATE\");\r\n        this.MESSAGESENTEDITACCESS = localStorage.getItem(\"MESSAGE_SENT_EDIT\");\r\n        this.MESSAGESENTDELETEACCESS = localStorage.getItem(\"MESSAGE_SENT_DELETE\");\r\n        // Authority for message send\r\n        // Authority for message inbox\r\n        this.MESSAGEINBOXVIEWACCESS = localStorage.getItem(\"MESSAGE_INBOX_VIEW\");\r\n        this.MESSAGEINBOXCREATEACCESS = localStorage.getItem(\"MESSAGE_INBOX_CREATE\");\r\n        this.MESSAGEINBOXEDITACCESS = localStorage.getItem(\"MESSAGE_INBOX_EDIT\");\r\n        this.MESSAGEINBOXDELETEACCESS = localStorage.getItem(\"MESSAGE_INBOX_DELETE\");\r\n        // Authority for message inbox\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.str = '';\r\n        this.form = formBuilder.group({\r\n            subject: ['', Validators.required],\r\n            composemessagecontent: ['', Validators.required],\r\n            to: ['', Validators.required],\r\n            copytome: ['']\r\n        });\r\n        this.message_priority = 0;\r\n        // Watch the form for changes, and\r\n        this.form.valueChanges.subscribe(function (v) {\r\n            _this.isReadyToSave = _this.form.valid;\r\n        });\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n    }\r\n    EmailPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddserviceinfoPage');\r\n    };\r\n    EmailPage.prototype.ionViewDidEnter = function () {\r\n        var _this = this;\r\n        this.pageTitle = 'Messsage';\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.keyboard.onKeyboardShow().subscribe(function () { _this.valueforngif = false; });\r\n        this.keyboard.onKeyboardHide().subscribe(function () { _this.valueforngif = true; });\r\n    };\r\n    /*******************/\r\n    /* Pull to Refresh */\r\n    /*******************/\r\n    EmailPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.inboxData.startindex = 0;\r\n        this.inboxLists = [];\r\n        this.doInbox();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    EmailPage.prototype.doSendRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.sendData.startindex = 0;\r\n        this.sendLists = [];\r\n        this.doSend();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    EmailPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.inboxData.startindex < this.totalCount && this.inboxData.startindex > 0) {\r\n            console.log('B');\r\n            this.doInbox();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    EmailPage.prototype.doSendInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCountSend);\r\n        if (this.sendData.startindex < this.totalCountSend && this.sendData.startindex > 0) {\r\n            console.log('B');\r\n            this.doSend();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    EmailPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    /****************************/\r\n    /*@doCompanyGroup calling on report */\r\n    /****************************/\r\n    EmailPage.prototype.doInbox = function () {\r\n        var _this = this;\r\n        //this.presentLoading(1);\r\n        if (this.inboxData.status == '') {\r\n            this.inboxData.status = \"messages_id\";\r\n        }\r\n        if (this.inboxData.sort == '') {\r\n            this.inboxData.sort = \"messages_id\";\r\n        }\r\n        //http://denyoappv2.stridecdev.com/companygroup?is_mobile=1\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/messages?is_mobile=1&startindex=\" + this.inboxData.startindex + \"&results=\" + this.inboxData.results + \"&sort=\" + this.inboxData.sort + \"&dir=\" + this.inboxData.sortascdesc + \"&loginid=\" + this.userId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.messages.length);\r\n            console.log(\"2\" + res.messages);\r\n            if (res.messages.length > 0) {\r\n                _this.inboxLists = res.messages;\r\n                _this.totalCount = res.totalCount;\r\n                _this.inboxData.startindex += _this.inboxData.results;\r\n                //this.loadingMoreDataContent = 'Loading More Data';\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n                //this.loadingMoreDataContent = 'No More Data';\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        // this.presentLoading(0);\r\n    };\r\n    EmailPage.prototype.doSend = function () {\r\n        var _this = this;\r\n        //this.presentLoading(1);\r\n        if (this.sendData.status == '') {\r\n            this.sendData.status = \"messages_id\";\r\n        }\r\n        if (this.sendData.sort == '') {\r\n            this.sendData.sort = \"messages_id\";\r\n        }\r\n        //http://denyoappv2.stridecdev.com/sentitems?is_mobile=1&sort=messages_id&dir=desc&startindex=0&results=8&loginid=1\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/sentitems?is_mobile=1&startindex=\" + this.sendData.startindex + \"&results=\" + this.sendData.results + \"&sort=\" + this.sendData.sort + \"&dir=\" + this.sendData.sortascdesc + \"&loginid=\" + this.userId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.messages.length);\r\n            console.log(\"2\" + res.messages);\r\n            if (res.messages.length > 0) {\r\n                _this.sendLists = res.messages;\r\n                _this.totalCountSend = res.totalCount;\r\n                _this.sendData.startindex += _this.sendData.results;\r\n                //this.loadingMoreDataContent = 'Loading More Data';\r\n            }\r\n            else {\r\n                _this.totalCountSend = 0;\r\n                //this.loadingMoreDataContent = 'No More Data';\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCountSend);\r\n        });\r\n        //this.presentLoading(0);\r\n    };\r\n    EmailPage.prototype.onSendSegmentChanged = function (val, item) {\r\n        if (this.sendData.status == '') {\r\n            this.sendData.status = \"messages_id\";\r\n        }\r\n        if (this.sendData.sort == '') {\r\n            this.sendData.sort = \"messages_id\";\r\n        }\r\n        console.log('Send Item segment calling....');\r\n        var splitdata = val.split(\",\");\r\n        this.sendData.sort = splitdata[0];\r\n        this.sendData.sortascdesc = splitdata[1];\r\n        this.sendData.startindex = 0;\r\n        this.doSend();\r\n    };\r\n    EmailPage.prototype.onSegmentChanged = function (val) {\r\n        if (this.inboxData.status == '') {\r\n            this.inboxData.status = \"messages_id\";\r\n        }\r\n        if (this.inboxData.sort == '') {\r\n            this.inboxData.sort = \"messages_id\";\r\n        }\r\n        console.log('Inobox segment calling....');\r\n        var splitdata = val.split(\",\");\r\n        this.inboxData.sort = splitdata[0];\r\n        this.inboxData.sortascdesc = splitdata[1];\r\n        this.inboxData.startindex = 0;\r\n        this.doInbox();\r\n    };\r\n    EmailPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.pageTitle = 'Messsage';\r\n        this.getPrority(0);\r\n        this.copytome = 0;\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        this.choice = 'inbox';\r\n        if (this.NP.get(\"recordemail\") != '') {\r\n            this.choice = 'compose';\r\n            this.to = this.NP.get(\"recordemail\");\r\n        }\r\n        if (this.NP.get(\"record\")) {\r\n            if (this.NP.get(\"act\") != 'Push') {\r\n                this.selectEntry(this.NP.get(\"record\"));\r\n                this.service_id = this.NP.get(\"record\").service_id;\r\n                if (this.NP.get(\"act\") == 'Add') {\r\n                    this.isEdited = false;\r\n                    this.pageTitle = 'Message';\r\n                }\r\n                else {\r\n                    this.pageTitle = 'Message';\r\n                    this.isEdited = true;\r\n                }\r\n                console.log(\"Service Id:\" + this.service_id);\r\n            }\r\n            else {\r\n                var bodymessage = \"messageid=\" + this.NP.get(\"record\"), type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/getmessagedetails\";\r\n                console.log(url1 + '?' + bodymessage);\r\n                this.http.post(url1, bodymessage, options1)\r\n                    .subscribe(function (data) {\r\n                    _this.doDetails(data.json().messages[0], 'inbox');\r\n                    _this.act = 'inbox';\r\n                    console.log(\"Message Response Success:\" + JSON.stringify(data.json()));\r\n                    console.log(\"Message Details:\" + data.json().messages[0]);\r\n                    _this.selectEntry(data.json().messages[0]);\r\n                });\r\n            }\r\n        }\r\n        this.inboxData.startindex = 0;\r\n        this.inboxData.sort = \"messages_id\";\r\n        this.inboxData.sortascdesc = \"desc\";\r\n        this.sendData.startindex = 0;\r\n        this.sendData.sort = \"messages_id\";\r\n        this.inboxData.sortascdesc = \"desc\";\r\n        this.doInbox();\r\n        this.doSend();\r\n    };\r\n    EmailPage.prototype.fileChooser = function (micro_timestamp) {\r\n        var _this = this;\r\n        var actionSheet = this.actionSheetCtrl.create({\r\n            title: 'Attachment',\r\n            buttons: [\r\n                {\r\n                    text: 'From File',\r\n                    role: 'fromfile',\r\n                    handler: function () {\r\n                        console.log('From File clicked');\r\n                        _this.isUploadedProcessing = true;\r\n                        _this.filechooser.open()\r\n                            .then(function (uri) {\r\n                            console.log(uri);\r\n                            _this.fileTrans(uri, micro_timestamp);\r\n                            _this.addedAttachList = uri;\r\n                        })\r\n                            .catch(function (e) { return console.log(e); });\r\n                    }\r\n                }, {\r\n                    text: 'From Camera',\r\n                    handler: function () {\r\n                        console.log('Camera clicked');\r\n                        /*const options: CameraOptions = {\r\n                          quality: 75,\r\n                          destinationType: this.camera.DestinationType.FILE_URI,\r\n                          targetWidth: 200,\r\n                          targetHeight: 200,\r\n                          sourceType: 1\r\n                        }*/\r\n                        var options = {\r\n                            quality: 75,\r\n                            destinationType: _this.camera.DestinationType.FILE_URI,\r\n                            sourceType: 1,\r\n                            // allowEdit: true,\r\n                            targetWidth: 200,\r\n                            targetHeight: 200,\r\n                        };\r\n                        _this.camera.getPicture(options).then(function (uri) {\r\n                            /* console.log(imageData);\r\n                             localStorage.setItem(\"userPhotoFile\", imageData);\r\n                             //this.fileTrans(imageData);\r\n               \r\n                             this.uploadResultBase64Data = imageData;\r\n                             this.addedImgLists = imageData;\r\n                             this.isUploadedProcessing = false;\r\n                             return false;*/\r\n                            console.log(uri);\r\n                            _this.fileTrans(uri, micro_timestamp);\r\n                            _this.addedAttachList = uri;\r\n                        }, function (err) {\r\n                            // Handle error\r\n                            _this.sendNotification(err);\r\n                        });\r\n                    }\r\n                }, {\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    handler: function () {\r\n                        console.log('Cancel clicked');\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        actionSheet.present();\r\n        /*\r\n        this.isUploadedProcessing = true;\r\n        this.filechooser.open()\r\n          .then(\r\n          uri => {\r\n            console.log(uri);\r\n            this.fileTrans(uri, micro_timestamp);\r\n            this.addedAttachList = uri;\r\n          }\r\n    \r\n          )\r\n          .catch(e => console.log(e));\r\n    \r\n    \r\n        return false;*/\r\n    };\r\n    EmailPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    EmailPage.prototype.fileTrans = function (path, micro_timestamp) {\r\n        var _this = this;\r\n        var fileName = path.substr(path.lastIndexOf('/') + 1);\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        console.log(\"File Name is:\" + currentName);\r\n        var dateStr = new Date();\r\n        var year = dateStr.getFullYear();\r\n        var month = dateStr.getMonth();\r\n        var date = dateStr.getDate();\r\n        var hr = dateStr.getHours();\r\n        var mn = dateStr.getMinutes();\r\n        var sec = dateStr.getSeconds();\r\n        var d = new Date(), n = d.getTime(), newFileName = year + \"\" + month + \"\" + date + \"\" + hr + \"\" + mn + \"\" + sec + \"_123_\" + n + currentName;\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: newFileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        fileTransfer.onProgress(this.onProgress);\r\n        // fileTransfer.upload(path, this.baseURI + '/api/upload_attach.php', options)\r\n        fileTransfer.upload(path, this.apiServiceURL + '/api/upload_attach.php?micro_timestamp=' + micro_timestamp, options)\r\n            .then(function (data) {\r\n            console.log(\"UPLOAD SUCCESS:\" + data.response);\r\n            var successData = JSON.parse(data.response);\r\n            _this.sendNotification(\"File attached successfully\");\r\n            console.log('http:' + '//' + successData.baseURL + '/' + successData.target_dir + '/' + successData.fileName);\r\n            var imgSrc;\r\n            if (successData.ext == 'jpg') {\r\n                //imgSrc = 'http://denyoappv2.stridecdev.com/api/uploads/' + successData.fileName;\r\n                //imgSrc = '<ion-icon name=\"image\"></ion-icon>';\r\n                imgSrc = 'img/img.png';\r\n                /* this.addedImgLists.push({\r\n                     imgSrc: imgSrc,\r\n                     file: successData.fileName\r\n                 });*/\r\n                _this.addedImgLists.push({\r\n                    imgSrc: imgSrc,\r\n                    imgDateTime: new Date(),\r\n                    fileName: newFileName\r\n                });\r\n            }\r\n            else {\r\n                if (successData.ext == 'pdf') {\r\n                    imgSrc = 'img/pdf.png';\r\n                    // imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                if (successData.ext == 'doc' || successData.ext == 'docx') {\r\n                    imgSrc = 'img/doc.png';\r\n                    //imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                if (successData.ext == 'xls' || successData.ext == 'xlsx') {\r\n                    imgSrc = 'img/xls.png';\r\n                    //imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                if (successData.ext == 'ppt' || successData.ext == 'pptx') {\r\n                    imgSrc = 'img/ppt.png';\r\n                    //imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                _this.addedImgLists.push({\r\n                    imgSrc: imgSrc,\r\n                    file: fileName\r\n                });\r\n            }\r\n            localStorage.setItem('fileAttach', JSON.stringify(_this.addedImgLists));\r\n            if (_this.addedImgLists.length > 9) {\r\n                _this.isUploaded = false;\r\n            }\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n        }, function (err) {\r\n            console.log(\"Upload Error:\" + JSON.stringify(err));\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    EmailPage.prototype.saveEntry = function () {\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            /* let name: string = this.form.controls[\"lat\"].value,\r\n               description: string = this.form.controls[\"long\"].value,\r\n               photos: object = this.addedImgLists;*/\r\n            var to = this.form.controls[\"to\"].value, copytome = this.form.controls[\"copytome\"].value, composemessagecontent = this.form.controls[\"composemessagecontent\"].value, subject = this.form.controls[\"subject\"].value;\r\n            console.log(\"serviced_datetime:\" + to);\r\n            console.log(\"copytome:\" + copytome);\r\n            console.log(\"messages_subject:\" + subject);\r\n            console.log(\"Attached image for file for reply and forward\" + JSON.stringify(this.attachedFileLists));\r\n            console.log(\"Image Data\" + JSON.stringify(this.addedImgLists));\r\n            //let d = new Date();\r\n            //let micro_timestamp = d.getFullYear() + \"\" + d.getMonth() + \"\" + d.getDate() + \"\" + d.getHours() + \"\" + d.getMinutes() + \"\" + d.getSeconds();\r\n            /*\r\n                  let tolocalstorage = localStorage.getItem('mentionedSelection');\r\n                  console.log(\"Local Storage To:\"+tolocalstorage)\r\n                  if (tolocalstorage != '') {\r\n                    to = localStorage.getItem('mentionedSelection');\r\n                  }*/\r\n            console.log(\"To Final:\" + to);\r\n            this.createEntry(this.micro_timestamp, to, copytome, composemessagecontent, subject);\r\n        }\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    EmailPage.prototype.createEntry = function (micro_timestamp, to, copytome, composemessagecontent, subject) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        if (copytome == true) {\r\n            copytome = '1';\r\n        }\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            to = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        console.log(\"atMentionResult\" + to);\r\n        //http://denyoappv2.stridecdev.com/messages/replyforward?&submit=Reply&forwardmsgid=16\r\n        var param;\r\n        var urlstring;\r\n        console.log(\"is reply forward and this.messageid\" + this.replyforward + \" \" + this.messageid);\r\n        console.log(\"Is reply?\" + this.isReply);\r\n        if (this.replyforward > 0) {\r\n            var isrepfor = void 0;\r\n            if (this.isReply > 0) {\r\n                isrepfor = 'Reply';\r\n            }\r\n            else {\r\n                isrepfor = 'forward';\r\n            }\r\n            param = \"is_mobile=1\" +\r\n                \"&important=\" + this.message_priority +\r\n                \"&microtime=\" + micro_timestamp +\r\n                \"&loginid=\" + this.userId +\r\n                \"&to=\" + to +\r\n                \"&composemessagecontent=\" + composemessagecontent +\r\n                \"&copytome=\" + copytome +\r\n                \"&submit=\" + isrepfor +\r\n                \"&forwardmsgid=\" + this.messageid +\r\n                \"&subject=\" + subject;\r\n            urlstring = this.apiServiceURL + \"/messages/replyforward\";\r\n        }\r\n        else {\r\n            param = \"is_mobile=1\" +\r\n                \"&important=\" + this.message_priority +\r\n                \"&microtime=\" + micro_timestamp +\r\n                \"&loginid=\" + this.userId +\r\n                \"&to=\" + to +\r\n                \"&composemessagecontent=\" + composemessagecontent +\r\n                \"&copytome=\" + copytome +\r\n                \"&subject=\" + subject;\r\n            urlstring = this.apiServiceURL + \"/messages/store\";\r\n        }\r\n        var body = param, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = urlstring;\r\n        console.log(\"Message sending API\" + url + \"?\" + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.replyforward = 0;\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.sendNotification(\"Message sending successfully\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.inboxData.startindex = 0;\r\n                _this.inboxLists = [];\r\n                _this.sendData.startindex = 0;\r\n                _this.sendLists = [];\r\n                _this.addedImgLists = [];\r\n                _this.to = '';\r\n                _this.copytome = 0;\r\n                _this.getPrority(0);\r\n                _this.subject = '';\r\n                _this.choice = 'send';\r\n                _this.doSend();\r\n                _this.doInbox();\r\n                _this.composemessagecontent = \"\";\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    EmailPage.prototype.getPrority = function (val) {\r\n        console.log(val);\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        if (val == \"2\") {\r\n            this.priority_highclass = \"border_high\";\r\n        }\r\n        if (val == \"1\") {\r\n            this.priority_lowclass = \"border_low\";\r\n        }\r\n        this.message_priority = val;\r\n    };\r\n    EmailPage.prototype.addDays = function (days) {\r\n        var result = new Date();\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    };\r\n    EmailPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.hashtag = hashtag;\r\n    };\r\n    EmailPage.prototype.previous = function () {\r\n        console.log(\"A\" + this.act); // inbox\r\n        console.log(\"B\" + this.choice); // details\r\n        if (this.act == 'send' && this.choice == 'details') {\r\n            this.choice = 'send';\r\n            console.log(\"C\" + this.choice);\r\n        }\r\n        else if (this.act == 'inbox' && this.choice == 'details') {\r\n            console.log(\"D\" + this.choice);\r\n            this.choice = 'inbox';\r\n        }\r\n        else if (this.act == 'inbox' && this.choice == 'inbox') {\r\n            console.log(\"E\" + this.choice);\r\n            this.nav.setRoot(DashboardPage);\r\n        }\r\n        else if (this.choice == 'send' && this.act == 'send') {\r\n            console.log(\"F\" + this.choice);\r\n            this.nav.setRoot(DashboardPage);\r\n        }\r\n        else {\r\n            console.log(\"G\" + this.choice);\r\n            this.nav.setRoot(DashboardPage);\r\n        }\r\n    };\r\n    EmailPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    EmailPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    EmailPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage_1);\r\n    };\r\n    EmailPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    EmailPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    EmailPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    EmailPage.prototype.selectEntry = function (item) {\r\n        console.log(JSON.stringify(item));\r\n        this.serviced_by = item.serviced_by;\r\n        this.serviced_datetime = item.serviced_datetime;\r\n        this.messages_subject = item.messages_subject;\r\n        this.messages_body = item.message_body;\r\n        this.messageid = item.message_id;\r\n        this.personalhashtag = item.personalhashtag;\r\n        this.personalhashtagreplaceat = item.personalhashtag.replace(\"@\", \"\");\r\n        this.photo = item.senderphoto;\r\n        this.mdate = item.message_date + \"(\" + item.time_ago + \")\";\r\n        //this.message_readstatus=item.message_readstatus;\r\n        this.receiver_id = item.receiver_id;\r\n        this.receiver_idreplaceat = item.receiver_id.replace(\"@\", \"\");\r\n        this.senderid = item.sender_id;\r\n        //this.next_service_date = item.next_service_date;\r\n        this.message_priority = item.message_priority;\r\n        /*\r\n            if (this.message_priority == \"1\") {\r\n              this.priority_lowclass = \"border_low\";\r\n        \r\n            } else if (this.message_priority == \"0\") {\r\n              this.priority_lowclass = \"border_low\";\r\n        \r\n            } else if (this.message_priority == \"2\") {\r\n              this.priority_highclass = \"border_high\";\r\n            }\r\n        */\r\n        if (this.message_priority == \"1\") {\r\n            this.priority_lowclass = \"border_low\";\r\n        }\r\n        else if (this.message_priority == \"2\") {\r\n            this.priority_highclass = \"border_high\";\r\n        }\r\n        this.serviced_by_name = item.serviced_by_name;\r\n        this.service_resources = item.service_resources;\r\n        this.service_resources = item.attachments;\r\n        if (this.service_resources != undefined && this.service_resources != 'undefined' && this.service_resources != '') {\r\n            var hashhypenhash = this.service_resources.split(\"#\");\r\n            for (var i = 0; i < hashhypenhash.length; i++) {\r\n                var imgDataArr = hashhypenhash[i];\r\n                console.log(\"1\" + imgDataArr);\r\n                console.log(\"2\" + JSON.stringify(imgDataArr));\r\n                var filepath = void 0;\r\n                filepath = this.apiServiceURL + \"/attachments\" + '/' + imgDataArr;\r\n                var ext = imgDataArr.split('.').pop();\r\n                var imgSrc = void 0;\r\n                if (ext == 'jpg') {\r\n                    imgSrc = 'img/img.png';\r\n                }\r\n                if (ext == 'png') {\r\n                    imgSrc = 'img/img.png';\r\n                }\r\n                if (ext == 'pdf') {\r\n                    imgSrc = 'img/pdf.png';\r\n                    // imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                if (ext == 'doc' || ext == 'docx') {\r\n                    imgSrc = 'img/doc.png';\r\n                    //imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                if (ext == 'xls' || ext == 'xlsx') {\r\n                    imgSrc = 'img/xls.png';\r\n                    //imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                if (ext == 'ppt' || ext == 'pptx') {\r\n                    imgSrc = 'img/ppt.png';\r\n                    //imgSrc = '<ion-icon name=\"document\"></ion-icon>';\r\n                }\r\n                //<ion-icon (click)=\"fileChooser(micro_timestamp)\" *ngIf=\"isUploaded\" name=\"attach\" style=\"color: black;position: relative;top: 5px;left: 10px;font-size:20px\"></ion-icon>'+'<a href=\"#\" (click)=download('+filepath+')'\r\n                this.attachedFileLists.push({\r\n                    imgSrc: imgSrc,\r\n                    file: imgDataArr,\r\n                    filepath: filepath\r\n                });\r\n                console.log(JSON.stringify(this.attachedFileLists));\r\n            }\r\n            if (this.addedImgLists.length > 9) {\r\n                this.isUploaded = false;\r\n            }\r\n        }\r\n    };\r\n    EmailPage.prototype.doConfirm = function (id, item, type) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this message?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id, type);\r\n                        if (type == 'inbox') {\r\n                            for (var q = 0; q < _this.inboxLists.length; q++) {\r\n                                if (_this.inboxLists[q] == item) {\r\n                                    _this.inboxLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var q = 0; q < _this.sendLists.length; q++) {\r\n                                if (_this.sendLists[q] == item) {\r\n                                    _this.sendLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    EmailPage.prototype.deleteEntry = function (recordID, typestr) {\r\n        var _this = this;\r\n        var urlstr;\r\n        if (typestr == 'inbox') {\r\n            urlstr = this.apiServiceURL + \"/messages/\" + recordID + \"/inbox/delete?is_mobile=1&ses_login_id=\" + this.userId;\r\n        }\r\n        else {\r\n            urlstr = this.apiServiceURL + \"/messages/\" + recordID + \"/senditems/delete?is_mobile=1&ses_login_id=\" + this.userId;\r\n        }\r\n        var \r\n        // /messages/43/inbox/delete?is_mobile=1&ses_login_id=9\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = urlstr;\r\n        console.log(\"Delete Message URL:\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Messages was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    EmailPage.prototype.doDetails = function (item, act) {\r\n        this.attachedFileLists = [];\r\n        this.isSubmitted = false;\r\n        this.act = act;\r\n        console.log(\"Do Details act is:\" + this.act);\r\n        this.choice = 'details';\r\n        this.selectEntry(item);\r\n        //http://denyoappv2.stridecdev.com/messages/changereadunread?is_mobile=1&ses_login_id=9&messages_id=44\r\n        var body = \"is_mobile=1&ses_login_id=\" + this.userId +\r\n            \"&message_id=\" + item.message_id + \"&frompage=inbox\", type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/messages/changereadunread\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                //this.sendNotification(`Comment count successfully removed`);\r\n            }\r\n            else {\r\n                // this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    EmailPage.prototype.reply = function (messages_body) {\r\n        this.isSubmitted = false;\r\n        this.replyforward = 1;\r\n        this.isReply = 1;\r\n        if (this.senderid == this.userId) {\r\n            this.to = this.receiver_id;\r\n            this.addedImgLists = [];\r\n            console.log(\"Attached image for file\" + JSON.stringify(this.attachedFileLists));\r\n            this.copytome = 0;\r\n            this.getPrority(0);\r\n            this.subject = this.messages_subject;\r\n            //this.composemessagecontent = \"-----Reply Message-----\" + \"\\n\" + messages_body;\r\n            this.choice = 'compose';\r\n        }\r\n        else {\r\n            this.isReply = 0;\r\n            this.to = this.personalhashtag;\r\n            this.addedImgLists = [];\r\n            this.copytome = 0;\r\n            this.getPrority(0);\r\n            this.subject = this.messages_subject;\r\n            this.composemessagecontent = \"-----Reply Message-----\" + \"\\n\" + messages_body;\r\n            this.choice = 'compose';\r\n        }\r\n    };\r\n    EmailPage.prototype.forward = function (messages_body) {\r\n        this.isSubmitted = false;\r\n        this.replyforward = 1;\r\n        this.to = '';\r\n        this.addedImgLists = [];\r\n        this.copytome = 0;\r\n        this.getPrority(0);\r\n        this.subject = this.messages_subject;\r\n        this.composemessagecontent = \"-----Forward Message-----\" + \"\\n\" + messages_body;\r\n        this.choice = 'compose';\r\n    };\r\n    EmailPage.prototype.download = function (file) {\r\n        console.log(\"Download calling...\" + file);\r\n        var fileTransfer = this.transfer.create();\r\n        var url = 'http://denyoappv2.stridecdev.com/api/uploads/' + file;\r\n        fileTransfer.download(url, this.file.dataDirectory + file).then(function (entry) {\r\n            console.log('download complete: ' + entry.toURL());\r\n        }, function (error) {\r\n            // handle error\r\n            console.log('download error: ' + error);\r\n        });\r\n    };\r\n    EmailPage.prototype.favorite = function (messageid) {\r\n        var _this = this;\r\n        var body = \"loginid=\" + this.userId + \"&is_mobile=1&messageid=\" + messageid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/messages/setfavorite\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.inboxData.startindex = 0;\r\n                _this.doInbox();\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    EmailPage.prototype.com = function () {\r\n        this.isSubmitted = false;\r\n        this.to = \"\";\r\n        this.subject = \"\";\r\n        this.composemessagecontent = \"\";\r\n    };\r\n    return EmailPage;\r\n}());\r\n__decorate([\r\n    ViewChild('fileInput'),\r\n    __metadata(\"design:type\", Object)\r\n], EmailPage.prototype, \"fileInput\", void 0);\r\nEmailPage = EmailPage_1 = __decorate([\r\n    Component({\r\n        selector: 'page-email',\r\n        templateUrl: 'email.html',\r\n        providers: [Camera, FileChooser, Transfer, File, DatePicker, Keyboard]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof ActionSheetController !== \"undefined\" && ActionSheetController) === \"function\" && _a || Object, typeof (_b = typeof Keyboard !== \"undefined\" && Keyboard) === \"function\" && _b || Object, typeof (_c = typeof File !== \"undefined\" && File) === \"function\" && _c || Object, typeof (_d = typeof Http !== \"undefined\" && Http) === \"function\" && _d || Object, typeof (_e = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _e || Object, typeof (_f = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _f || Object, typeof (_g = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _g || Object, typeof (_h = typeof NavController !== \"undefined\" && NavController) === \"function\" && _h || Object, typeof (_j = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _j || Object, typeof (_k = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _k || Object, typeof (_l = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _l || Object, typeof (_m = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _m || Object, typeof (_o = typeof Camera !== \"undefined\" && Camera) === \"function\" && _o || Object, typeof (_p = typeof FileChooser !== \"undefined\" && FileChooser) === \"function\" && _p || Object, typeof (_q = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _q || Object, typeof (_r = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _r || Object])\r\n], EmailPage);\r\nexport { EmailPage };\r\nvar EmailPage_1, _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\r\n//# sourceMappingURL=email.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/email/email.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { AlertController, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\n/**\r\n * Generated class for the AddserviceinfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddcommentsinfoPage = (function () {\r\n    function AddcommentsinfoPage(http, alertCtrl, datePicker, NP, nav, toastCtrl, navParams, viewCtrl, formBuilder, camera, filechooser, transfer, file, ngZone) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.alertCtrl = alertCtrl;\r\n        this.datePicker = datePicker;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.navParams = navParams;\r\n        this.viewCtrl = viewCtrl;\r\n        this.camera = camera;\r\n        this.filechooser = filechooser;\r\n        this.transfer = transfer;\r\n        this.file = file;\r\n        this.ngZone = ngZone;\r\n        this.photoInfo = [];\r\n        this.addedImgListsArray = [];\r\n        this.addedImgLists = [];\r\n        this.isSubmitted = false;\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.hideActionButton = true;\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n        this.unitDetailData.serviced_by = localStorage.getItem(\"userInfoName\");\r\n        this.comment_unitid = localStorage.getItem(\"unitId\");\r\n        this.form = formBuilder.group({\r\n            profilePic: [''],\r\n            comments: ['', Validators.required],\r\n            service_subject: ['', Validators.required]\r\n        });\r\n        this.service_priority = 0;\r\n        // Watch the form for changes, and\r\n        this.form.valueChanges.subscribe(function (v) {\r\n            _this.isReadyToSave = _this.form.valid;\r\n        });\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n    }\r\n    AddcommentsinfoPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddcommentsinfoPage');\r\n    };\r\n    AddcommentsinfoPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.comments = \"\";\r\n        this.service_subject = \"\";\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        var users = localStorage.getItem(\"atMentionedStorage\");\r\n        if (this.NP.get(\"record\")) {\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.comment_id = this.NP.get(\"record\").comment_id;\r\n            if (this.NP.get(\"act\") == 'Add') {\r\n                this.isEdited = false;\r\n                this.unitDetailData.pageTitle = 'Add Comments';\r\n                // this.comment_unitid = this.NP.get(\"unit_id\");\r\n            }\r\n            else {\r\n                //this.comment_unitid = this.NP.get(\"record\").comment_unitid;\r\n                this.unitDetailData.pageTitle = 'Edit Comments';\r\n                this.isEdited = true;\r\n            }\r\n            localStorage.setItem(\"iframeunitId\", this.comment_unitid);\r\n            localStorage.setItem(\"unitId\", this.comment_unitid);\r\n        }\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n    };\r\n    AddcommentsinfoPage.prototype.takePictureURL = function (micro_timestamp) {\r\n        var _this = this;\r\n        this.isUploadedProcessing = true;\r\n        var options = {\r\n            quality: 100,\r\n            destinationType: this.camera.DestinationType.FILE_URI\r\n        };\r\n        this.camera.getPicture(options).then(function (imageData) {\r\n            console.log(imageData);\r\n            _this.fileTrans(imageData, micro_timestamp);\r\n            _this.addedAttachList = imageData;\r\n        }, function (err) {\r\n            // Handle error\r\n            _this.sendNotification(err);\r\n        });\r\n    };\r\n    AddcommentsinfoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddcommentsinfoPage.prototype.fileTrans = function (path, micro_timestamp) {\r\n        var _this = this;\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        console.log(\"File Name is:\" + currentName);\r\n        //YmdHis_123_filename\r\n        var dateStr = new Date();\r\n        var year = dateStr.getFullYear();\r\n        var month = dateStr.getMonth();\r\n        var date = dateStr.getDate();\r\n        var hr = dateStr.getHours();\r\n        var mn = dateStr.getMinutes();\r\n        var sec = dateStr.getSeconds();\r\n        var d = new Date(), n = d.getTime(), newFileName = year + \"\" + month + \"\" + date + \"\" + hr + \"\" + mn + \"\" + sec + \"_123_\" + n + \".jpg\";\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: newFileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/commentupload.php?micro_timestamp=' + micro_timestamp, options)\r\n            .then(function (data) {\r\n            var res = JSON.parse(data.response);\r\n            console.log(res.id);\r\n            console.log(JSON.stringify(res));\r\n            var imgSrc;\r\n            imgSrc = _this.apiServiceURL + \"/commentimages\" + '/' + newFileName;\r\n            _this.addedImgLists.push({\r\n                imgSrc: imgSrc,\r\n                imgDateTime: new Date(),\r\n                fileName: newFileName,\r\n                resouce_id: res.id\r\n            });\r\n            //loading.dismiss();\r\n            if (_this.addedImgLists.length > 9) {\r\n                _this.isUploaded = false;\r\n            }\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\" + JSON.stringify(err));\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    AddcommentsinfoPage.prototype.saveEntry = function () {\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            /* let name: string = this.form.controls[\"lat\"].value,\r\n               description: string = this.form.controls[\"long\"].value,\r\n               photos: object = this.addedImgLists;*/\r\n            var comments = this.form.controls[\"comments\"].value, service_subject = this.form.controls[\"service_subject\"].value;\r\n            console.log(\"comments:\" + comments);\r\n            console.log(\"service_subject:\" + service_subject);\r\n            console.log(\"nextServiceDate:\" + this.unitDetailData.nextServiceDate);\r\n            console.log(\"Image Data\" + JSON.stringify(this.addedImgLists));\r\n            //let d = new Date();\r\n            //let micro_timestamp = d.getFullYear() + \"\" + d.getMonth() + \"\" + d.getDate() + \"\" + d.getHours() + \"\" + d.getMinutes() + \"\" + d.getSeconds();\r\n            if (this.isEdited) {\r\n                this.updateEntry(comments, service_subject, this.addedImgLists, this.unitDetailData.hashtag, this.micro_timestamp);\r\n            }\r\n            else {\r\n                this.createEntry(comments, service_subject, this.addedImgLists, this.unitDetailData.hashtag, this.micro_timestamp);\r\n            }\r\n        }\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddcommentsinfoPage.prototype.createEntry = function (comments, service_subject, addedImgLists, remarkget, micro_timestamp) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        comments = localStorage.getItem(\"atMentionResult\");\r\n        if (this.service_priority == undefined) {\r\n            this.service_priority = '0';\r\n        }\r\n        if (this.service_priority == 'undefined') {\r\n            this.service_priority = '0';\r\n        }\r\n        var body = \"is_mobile=1\" +\r\n            \"&comment_unit_id=\" + this.comment_unitid +\r\n            \"&comment_priority=\" + this.service_priority +\r\n            \"&comment_remark=\" + comments +\r\n            \"&comment_by=\" + this.unitDetailData.userId +\r\n            \"&comment_subject=\" + service_subject +\r\n            \"&micro_timestamp=\" + micro_timestamp +\r\n            \"&uploadInfo=\" + JSON.stringify(this.addedImgLists), \r\n        //\"&contact_number=\" + this.contact_number +\r\n        //\"&contact_name=\" + this.contact_name +\r\n        //\"&nextServiceDate=\" + nextServiceDate,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/comments/store\";\r\n        console.log(body);\r\n        console.log(\"Hello\");\r\n        console.log(url);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.service_subject = '';\r\n                _this.comments = '';\r\n                _this.addedImgLists = [];\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.sendNotification(\"Comments was successfully added\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.nav.setRoot(CommentsinfoPage, {\r\n                    record: _this.NP.get(\"record\")\r\n                });\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddcommentsinfoPage.prototype.updateEntry = function (comments, service_subject, addedImgLists, remarkget, micro_timestamp) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            comments = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        if (this.service_priority == undefined) {\r\n            this.service_priority = 0;\r\n        }\r\n        if (this.service_priority == 'undefined') {\r\n            this.service_priority = 0;\r\n        }\r\n        var body = \"is_mobile=1\" +\r\n            \"&comment_remark=\" + comments +\r\n            \"&comment_id=\" + this.recordID +\r\n            \"&comment_priority=\" + this.service_priority +\r\n            \"&comment_unit_id=\" + this.comment_unitid +\r\n            \"&comment_by=\" + this.unitDetailData.userId +\r\n            \"&comment_subject=\" + service_subject +\r\n            \"&micro_timestamp=\" + micro_timestamp +\r\n            \"&uploadInfo=\" + JSON.stringify(this.addedImgLists), type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/comments/update\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.service_subject = '';\r\n                _this.comments = '';\r\n                _this.addedImgLists = [];\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.sendNotification(\"Comments was successfully updated\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.nav.setRoot(CommentsinfoPage, {\r\n                    record: _this.NP.get(\"record\")\r\n                });\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddcommentsinfoPage.prototype.getNextDate = function (val, field) {\r\n        console.log('1' + val);\r\n        var date;\r\n        if (val > 0) {\r\n            date = this.addDays(val);\r\n        }\r\n        else {\r\n            this.showDatePicker();\r\n        }\r\n        if (field == '1') {\r\n            this.comments = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n        }\r\n        else {\r\n            this.unitDetailData.nextServiceDate = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n        }\r\n    };\r\n    AddcommentsinfoPage.prototype.getPrority = function (val) {\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        if (val == \"2\") {\r\n            this.priority_highclass = \"border_high\";\r\n        }\r\n        if (val == \"1\") {\r\n            this.priority_lowclass = \"border_low\";\r\n        }\r\n        this.service_priority = val;\r\n    };\r\n    AddcommentsinfoPage.prototype.addDays = function (days) {\r\n        var result = new Date();\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    };\r\n    AddcommentsinfoPage.prototype.showDatePicker = function () {\r\n        var _this = this;\r\n        this.datePicker.show({\r\n            date: new Date(),\r\n            mode: 'date',\r\n            androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK\r\n        }).then(function (date) {\r\n            _this.unitDetailData.nextServiceDate = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n            console.log('Got date: ', date);\r\n        }, function (err) { return console.log('Error occurred while getting date: ', err); });\r\n    };\r\n    AddcommentsinfoPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.unitDetailData.hashtag = hashtag;\r\n    };\r\n    AddcommentsinfoPage.prototype.previous = function () {\r\n        this.nav.setRoot(CommentsinfoPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddcommentsinfoPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddcommentsinfoPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddcommentsinfoPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddcommentsinfoPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddcommentsinfoPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddcommentsinfoPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    AddcommentsinfoPage.prototype.selectEntry = function (item) {\r\n        console.log(\"Comment Information Item Object:\" + JSON.stringify(item));\r\n        this.comments = item.comment_remark;\r\n        this.service_subject = item.comment_subject;\r\n        //this.next_service_date = item.next_service_date;\r\n        this.service_priority = item.comment_priority;\r\n        if (this.service_priority == \"1\") {\r\n            this.priority_lowclass = \"border_low\";\r\n        }\r\n        else if (this.service_priority == \"2\") {\r\n            this.priority_highclass = \"border_high\";\r\n        }\r\n        this.service_resources = item.comment_resources;\r\n        this.unitDetailData.nextServiceDate = item.next_service_date;\r\n        this.service_resources = item.comment_resources;\r\n        if (this.service_resources != undefined && this.service_resources != 'undefined' && this.service_resources != '') {\r\n            var hashhypenhash = this.service_resources.split(\"#-#\");\r\n            for (var i = 0; i < hashhypenhash.length; i++) {\r\n                var imgDataArr = hashhypenhash[i].split(\"|\");\r\n                var imgSrc = void 0;\r\n                imgSrc = this.apiServiceURL + \"/commentimages\" + '/' + imgDataArr[1];\r\n                this.addedImgLists.push({\r\n                    imgSrc: imgSrc,\r\n                    imgDateTime: new Date(),\r\n                    fileName: imgDataArr[1],\r\n                    resouce_id: imgDataArr[0]\r\n                });\r\n            }\r\n            if (this.addedImgLists.length > 9) {\r\n                this.isUploaded = false;\r\n            }\r\n        }\r\n        this.recordID = item.comment_id;\r\n    };\r\n    AddcommentsinfoPage.prototype.doRemoveResouce = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this file?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.addedImgLists.length; q++) {\r\n                            if (_this.addedImgLists[q] == item) {\r\n                                _this.addedImgLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddcommentsinfoPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/\" + recordID + \"/removecommentresources\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations file was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    return AddcommentsinfoPage;\r\n}());\r\n__decorate([\r\n    ViewChild('fileInput'),\r\n    __metadata(\"design:type\", Object)\r\n], AddcommentsinfoPage.prototype, \"fileInput\", void 0);\r\nAddcommentsinfoPage = __decorate([\r\n    Component({\r\n        selector: 'page-addcommentsinfo',\r\n        templateUrl: 'addcommentsinfo.html',\r\n        providers: [Camera, FileChooser, Transfer, File, DatePicker]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _b || Object, typeof (_c = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _f || Object, typeof (_g = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _g || Object, typeof (_h = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _h || Object, typeof (_j = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _j || Object, typeof (_k = typeof Camera !== \"undefined\" && Camera) === \"function\" && _k || Object, typeof (_l = typeof FileChooser !== \"undefined\" && FileChooser) === \"function\" && _l || Object, typeof (_m = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _m || Object, typeof (_o = typeof File !== \"undefined\" && File) === \"function\" && _o || Object, typeof (_p = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _p || Object])\r\n], AddcommentsinfoPage);\r\nexport { AddcommentsinfoPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\r\n//# sourceMappingURL=addcommentsinfo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addcommentsinfo/addcommentsinfo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitgroupPage } from '../unitgroup/unitgroup';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddunitgroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddunitgroupPage = (function () {\r\n    function AddunitgroupPage(nav, http, NP, fb, toastCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.isSubmitted = false;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"cname\": [\"\", Validators.required],\r\n            \"remark\": [\"\", Validators.required]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    AddunitgroupPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddunitgroupPage');\r\n    };\r\n    AddunitgroupPage.prototype.ionViewWillEnter = function () {\r\n        this.resetFields();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit Unit Group';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n        }\r\n        else {\r\n            document.getElementById(\"FBE983\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"FBE983\";\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Add Unit Group';\r\n        }\r\n    };\r\n    AddunitgroupPage.prototype.selectEntry = function (item) {\r\n        this.cname = item.unitgroup_name;\r\n        this.remark = item.remark;\r\n        this.ccode = item.colorcode;\r\n        this.nccode = this.ccode;\r\n        if (this.ccode == \"DAADFE\") {\r\n            document.getElementById(\"DAADFE\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"DAADFE\";\r\n        }\r\n        if (this.ccode == \"FBE983\") {\r\n            document.getElementById(\"FBE983\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"FBE983\";\r\n        }\r\n        if (this.ccode == \"5584EE\") {\r\n            document.getElementById(\"5584EE\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"5584EE\";\r\n        }\r\n        if (this.ccode == \"A4BDFD\") {\r\n            document.getElementById(\"A4BDFD\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"A4BDFD\";\r\n        }\r\n        if (this.ccode == \"47D6DC\") {\r\n            document.getElementById(\"47D6DC\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"47D6DC\";\r\n        }\r\n        if (this.ccode == \"7AE7BE\") {\r\n            document.getElementById(\"7AE7BE\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"7AE7BE\";\r\n        }\r\n        if (this.ccode == \"FBD75C\") {\r\n            document.getElementById(\"FBD75C\").classList.add(\"border-need\");\r\n            this.ccode = \"FBD75C\";\r\n            // console.log(\"Hi\");\r\n        }\r\n        if (this.ccode == \"FFB878\") {\r\n            document.getElementById(\"FFB878\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"FFB878\";\r\n        }\r\n        if (this.ccode == \"FF877C\") {\r\n            document.getElementById(\"FF877C\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"FF877C\";\r\n        }\r\n        if (this.ccode == \"DC2128\") {\r\n            document.getElementById(\"DC2128\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"DC2128\";\r\n        }\r\n        if (this.ccode == \"E1E1E1\") {\r\n            document.getElementById(\"E1E1E1\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"E1E1E1\";\r\n        }\r\n        if (this.ccode == \"51B749\") {\r\n            document.getElementById(\"51B749\").classList.add(\"border-need\");\r\n            // console.log(\"Hi\");\r\n            this.ccode = \"51B749\";\r\n        }\r\n        this.recordID = item.unitgroup_id;\r\n    };\r\n    AddunitgroupPage.prototype.saveEntry = function () {\r\n        var cname = this.form.controls[\"cname\"].value, remark = this.form.controls[\"remark\"].value;\r\n        console.log(cname, remark);\r\n        if (cname.toLowerCase() == 'denyo' || cname.toLowerCase() == 'dum' || cname.toLowerCase() == 'dsg' || cname.toLowerCase() == 'denyo singapore') {\r\n            this.sendNotification(\"Given Unit Group Name Not Acceptable....\");\r\n        }\r\n        else {\r\n            if (this.isEdited) {\r\n                this.updateEntry(cname, this.ccode, remark, this.userId, this.companyid);\r\n            }\r\n            else {\r\n                this.createEntry(cname, this.ccode, remark, this.userId, this.companyid);\r\n            }\r\n        }\r\n    };\r\n    AddunitgroupPage.prototype.updateEntry = function (cname, ccode, remark, userid, companyid) {\r\n        var _this = this;\r\n        console.log(cname, ccode, remark, userid, companyid);\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1&unitgroup_name=\" + cname + \"&colorcode=\" + this.ccode + \"&remark=\" + remark + \"&createdby=\" + userid + \"&updatedby=\" + userid + \"&company_id=\" + companyid + \"&unitgroup_id=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/unitgroup/update\";\r\n        console.log(url);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(data.json());\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].result > 0) {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    _this.nav.setRoot(UnitgroupPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddunitgroupPage.prototype.createEntry = function (cname, ccode, remark, createdby, companyid) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        // this.isUploadedProcessing = true;\r\n        var updatedby = createdby;\r\n        console.log(cname, ccode, remark, companyid);\r\n        var body = \"is_mobile=1&unitgroup_name=\" + cname + \"&colorcode=\" + ccode + \"&remark=\" + remark + \"&createdby=\" + createdby + \"&updatedby=\" + updatedby + \"&company_id=\" + companyid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/unitgroup/store\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].result > 0) {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    _this.nav.setRoot(UnitgroupPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddunitgroupPage.prototype.resetFields = function () {\r\n        this.cname = \"\";\r\n        this.remark = \"\";\r\n    };\r\n    AddunitgroupPage.prototype.sendNotification = function (message) {\r\n        // this.isUploadedProcessing = false;\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddunitgroupPage.prototype.getColor = function (colorCodeValue) {\r\n        document.getElementById(colorCodeValue).classList.add(\"border-need\");\r\n        if (this.ccode != colorCodeValue) {\r\n            document.getElementById(this.ccode).classList.remove(\"border-need\");\r\n        }\r\n        console.log(colorCodeValue);\r\n        this.ccode = colorCodeValue;\r\n    };\r\n    AddunitgroupPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitgroupPage);\r\n    };\r\n    AddunitgroupPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddunitgroupPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddunitgroupPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddunitgroupPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddunitgroupPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddunitgroupPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddunitgroupPage;\r\n}());\r\nAddunitgroupPage = __decorate([\r\n    Component({\r\n        selector: 'page-addunitgroup',\r\n        templateUrl: 'addunitgroup.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddunitgroupPage);\r\nexport { AddunitgroupPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addunitgroup.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addunitgroup/addunitgroup.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddunitsonePage } from '../addunitsone/addunitsone';\r\nimport { ViewcompanygroupPage } from '../viewcompanygroup/viewcompanygroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { UnitgroupPage } from '../unitgroup/unitgroup';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { UnitsPage } from '../units/units';\r\n/**\r\n * Generated class for the Unitgrouplist page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar Unitgrouplist = (function () {\r\n    function Unitgrouplist(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        //Authorization Declaration\r\n        //Authorization Declaration\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Units';\r\n        this.str = '';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        //Authorization Get Value\r\n        //Authorization Get Value\r\n    }\r\n    Unitgrouplist.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad Unitgrouplist');\r\n    };\r\n    Unitgrouplist.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUnit();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /****************************/\r\n    /*@doUnit calling on report */\r\n    /****************************/\r\n    Unitgrouplist.prototype.doUnit = function () {\r\n        var _this = this;\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"vendor\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/unitgroupdetails?startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&unitgroupid=\" + localStorage.getItem(\"uid\") + \"&loginid=\" + this.userId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.units.length);\r\n            console.log(\"2\" + res.units);\r\n            if (res.units.length > 0) {\r\n                for (var unit in res.units) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.units[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.units[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                        localStorage.setItem(\"unitfav\", favorite);\r\n                    }\r\n                    else {\r\n                        _this.fav = favorite;\r\n                        favorite = \"unfavorite\";\r\n                        localStorage.setItem(\"unitfav\", favorite);\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.units[unit].unit_id,\r\n                        unitname: res.units[unit].unitname,\r\n                        location: res.units[unit].location,\r\n                        projectname: res.units[unit].projectname,\r\n                        colorcode: res.units[unit].colorcode,\r\n                        contacts: res.units[unit].contacts,\r\n                        nextservicedate: res.units[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.units[unit].controllerid,\r\n                        neaplateno: res.units[unit].neaplateno,\r\n                        companys_id: res.units[unit].companys_id,\r\n                        unitgroups_id: res.units[unit].unitgroups_id,\r\n                        models_id: res.units[unit].models_id,\r\n                        alarmnotificationto: res.units[unit].alarmnotificationto,\r\n                        genstatus: res.units[unit].genstatus,\r\n                        lat: res.units[unit].lat,\r\n                        lng: res.units[unit].lng,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    Unitgrouplist.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doUnit();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    Unitgrouplist.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.detailvalue = \"\";\r\n        localStorage.setItem(\"viewlist\", \"\");\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.doUnit();\r\n    };\r\n    Unitgrouplist.prototype.doAdd = function () {\r\n        this.nav.setRoot(AddunitsonePage);\r\n    };\r\n    Unitgrouplist.prototype.getCheckBoxValue = function (item, val) {\r\n        /*console.log(\"Available data\" + val);\r\n        this.getCheckboxData.push({\r\n          availabledata: val\r\n        })*/\r\n        /*console.log(\"Available data\" + name);\r\n    this.selectedAction.push({\r\n      availabledata: name\r\n    })\r\n    console.log(JSON.stringify(this.selectedAction));*/\r\n        if (val != '') {\r\n            if (this.str == '') {\r\n                this.str = val;\r\n            }\r\n            else {\r\n                this.str = this.str + \",\" + val;\r\n            }\r\n        }\r\n        this.detailvalue = item;\r\n        // localStorage.setItem(\"unitunitname\", item.unitname);\r\n        // localStorage.setItem(\"unitlocation\", item.location);\r\n        // localStorage.setItem(\"unitprojectname\", item.projectname);\r\n        // localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n        // localStorage.setItem(\"unitlat\", item.lat);\r\n        // localStorage.setItem(\"unitlng\", item.lng);\r\n        // console.log(this.str + \"//\" + JSON.stringify(this.detailvalue));\r\n        // localStorage.setItem(\"viewlist\", this.str);\r\n    };\r\n    Unitgrouplist.prototype.onAction = function (actpet) {\r\n        var _this = this;\r\n        console.log('Your act pet is:' + actpet);\r\n        console.log(JSON.stringify(this.str));\r\n        var urlstr;\r\n        if (actpet == 'delete') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                urlstr = \"/unitlistaction/\" + this.str + \"/1/delete\";\r\n            }\r\n        }\r\n        if (actpet == 'viewdashboard') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                urlstr = \"/unitlistaction/\" + this.str + \"/1/dashboard?ses_login_id=\" + this.userId;\r\n            }\r\n        }\r\n        if (actpet == 'view') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                this.nav.setRoot(UnitdetailsPage, {\r\n                    record: this.detailvalue\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (urlstr != undefined) {\r\n            //http://denyoappv2.stridecdev.com/unitlistaction/4,6/1/delete\r\n            //http://denyoappv2.stridecdev.com/unitlistaction/4,6/1/dashboard?ses_login_id=2\r\n            // let body: string = \"ses_login_id=\" + this.userId,\r\n            var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + urlstr;\r\n            console.log(url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    if (actpet == 'delete') {\r\n                        _this.sendNotification(\"Successfully Deleted\");\r\n                    }\r\n                    else {\r\n                        _this.sendNotification(\"Successfully Added\");\r\n                    }\r\n                    _this.reportData.startindex = 0;\r\n                    _this.reportData.sort = \"unit_id\";\r\n                    /// this.doUnit();\r\n                    _this.nav.setRoot(_this.nav.getActive().component);\r\n                }\r\n                else {\r\n                    // this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Unitgrouplist.prototype.doEdit = function (item, act, unitId) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddunitsonePage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n        else if (act == 'detail') {\r\n            localStorage.setItem(\"unitId\", unitId);\r\n            localStorage.setItem(\"iframeunitId\", unitId);\r\n            localStorage.setItem(\"unitunitname\", item.unitname);\r\n            localStorage.setItem(\"unitlocation\", item.location);\r\n            localStorage.setItem(\"unitprojectname\", item.projectname);\r\n            localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n            localStorage.setItem(\"unitlat\", item.lat);\r\n            localStorage.setItem(\"unitlng\", item.lng);\r\n            this.nav.setRoot(UnitdetailsPage, {\r\n                record: item\r\n            });\r\n            return false;\r\n        }\r\n        else {\r\n            this.nav.setRoot(ViewcompanygroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    /******************************************/\r\n    /* @doConfirm called for alert dialog box **/\r\n    /******************************************/\r\n    Unitgrouplist.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this unit?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    Unitgrouplist.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/units/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations the units was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    Unitgrouplist.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    Unitgrouplist.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUnit();\r\n    };\r\n    /********************/\r\n    /* Sorting function */\r\n    /********************/\r\n    Unitgrouplist.prototype.doSort = function (val) {\r\n        console.log('1');\r\n        this.reportAllLists = [];\r\n        this.reportData.startindex = 0;\r\n        console.log('2');\r\n        this.sortby = 1;\r\n        if (this.vendorsort == \"asc\") {\r\n            this.reportData.sortascdesc = \"desc\";\r\n            this.vendorsort = \"desc\";\r\n            this.ascending = false;\r\n            console.log('3');\r\n        }\r\n        else {\r\n            console.log('4');\r\n            this.reportData.sortascdesc = \"asc\";\r\n            this.vendorsort = \"asc\";\r\n            this.ascending = true;\r\n        }\r\n        console.log('5');\r\n        this.reportData.sort = val;\r\n        this.doUnit();\r\n        console.log('6');\r\n    };\r\n    Unitgrouplist.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    Unitgrouplist.prototype.previous = function () {\r\n        this.nav.setRoot(UnitgroupPage);\r\n    };\r\n    Unitgrouplist.prototype.favorite = function (unit_id) {\r\n        var _this = this;\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        var body = \"unitid=\" + unit_id + \"&is_mobile=1\" + \"&loginid=\" + this.userId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/setunitfavorite\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            var res = data.json();\r\n            console.log(res.msg[0].Error);\r\n            console.log(res.msg[0].result);\r\n            if (res.msg[0] == 0) {\r\n                console.log(\"Favorite\");\r\n            }\r\n            else {\r\n                console.log(\"Un Favorite\");\r\n            }\r\n            if (res.units.length > 0) {\r\n                for (var unit in res.units) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.units[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.units[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.units[unit].unit_id,\r\n                        unitname: res.units[unit].unitname,\r\n                        location: res.units[unit].location,\r\n                        contacts: res.units[unit].contacts,\r\n                        projectname: res.units[unit].projectname,\r\n                        colorcode: res.units[unit].colorcode,\r\n                        nextservicedate: res.units[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.units[unit].controllerid,\r\n                        neaplateno: res.units[unit].neaplateno,\r\n                        companys_id: res.units[unit].companys_id,\r\n                        unitgroups_id: res.units[unit].unitgroups_id,\r\n                        models_id: res.units[unit].models_id,\r\n                        alarmnotificationto: res.units[unit].alarmnotificationto,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(res.msg[0].result);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        this.doUnit();\r\n    };\r\n    Unitgrouplist.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    Unitgrouplist.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    Unitgrouplist.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    Unitgrouplist.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    Unitgrouplist.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    Unitgrouplist.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return Unitgrouplist;\r\n}());\r\nUnitgrouplist = __decorate([\r\n    Component({\r\n        selector: 'page-unitgrouplist',\r\n        templateUrl: 'unitgrouplist.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], Unitgrouplist);\r\nexport { Unitgrouplist };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=unitgrouplist.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/unitgrouplist/unitgrouplist.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddunitgroupPage } from '../addunitgroup/addunitgroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { HomePage } from '../home/home';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { Unitgrouplist } from '../unitgrouplist/unitgrouplist';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the UnitgroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar UnitgroupPage = (function () {\r\n    function UnitgroupPage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unitgroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.reportAllLists = [];\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"UNITS_UNITGROUP_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"UNITS_UNITGROUP_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"UNITS_UNITGROUP_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"UNITS_UNITGROUP_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    UnitgroupPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad UnitgroupPage');\r\n    };\r\n    UnitgroupPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.dounitGroup();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    UnitgroupPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.pageTitle = \"Unit Groups\";\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"unitgroup_id\";\r\n        if (this.VIEWACCESS > 0) {\r\n            this.dounitGroup();\r\n        }\r\n    };\r\n    UnitgroupPage.prototype.dounitGroup = function () {\r\n        var _this = this;\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"unitgroup_id\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/unitgroup?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&company_id=\" + this.companyId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.unitgroups.length);\r\n            console.log(\"2\" + res.unitgroups);\r\n            console.log(\"3\" + res.colorcode);\r\n            if (res.favorite == 0) {\r\n            }\r\n            if (res.unitgroups.length > 0) {\r\n                for (var unitgroup in res.unitgroups) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.unitgroups[unitgroup].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.unitgroups[unitgroup].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    console.log(favorite);\r\n                    _this.reportAllLists.push({\r\n                        unitgroup_id: res.unitgroups[unitgroup].unitgroup_id,\r\n                        unitgroup_name: res.unitgroups[unitgroup].unitgroup_name,\r\n                        remark: res.unitgroups[unitgroup].remark,\r\n                        favorite: res.unitgroups[unitgroup].favorite,\r\n                        totalunits: res.unitgroups[unitgroup].totalunits,\r\n                        colorcode: res.unitgroups[unitgroup].colorcode,\r\n                        colorcodeindication: colorcode,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //\"unitgroup_id\":1,\"unitgroup_name\":\"demo unit\",\"colorcode\":\"FBD75C\",\"remark\":\"nice\",\"favorite\":1,\"totalunits\":5\r\n                /*this.reportAllLists = res.unitgroups;\r\n               \r\n                console.log(\"Total Record:`\" + this.totalCount);\r\n                console.log(JSON.stringify(this.reportAllLists));*/\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:2\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    UnitgroupPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.dounitGroup();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    UnitgroupPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    UnitgroupPage.prototype.doAdd = function () {\r\n        this.nav.setRoot(AddunitgroupPage);\r\n    };\r\n    UnitgroupPage.prototype.previous = function () {\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    UnitgroupPage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddunitgroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n    };\r\n    UnitgroupPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        if (item.totalunits == 0) {\r\n            console.log(\"Deleted Id\" + id);\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'Are you sure you want to delete this unit group?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(id);\r\n                            for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                if (_this.reportAllLists[q] == item) {\r\n                                    _this.reportAllLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n        else {\r\n            console.log(\"Deleted Id\" + id);\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'There are some units under this Unit Group.If delete this Unit Group,all units will be deleted.Are you sure you want to delete this unit group?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(id);\r\n                            for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                if (_this.reportAllLists[q] == item) {\r\n                                    _this.reportAllLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n    };\r\n    UnitgroupPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/unitgroup/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"unit group was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    UnitgroupPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    UnitgroupPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.dounitGroup();\r\n    };\r\n    UnitgroupPage.prototype.favorite = function (unit_id) {\r\n        var _this = this;\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        var body = \"unitgroupid=\" + unit_id +\r\n            \"&staffs_id=\" + this.userId +\r\n            \"&is_mobile=1\" + \"&company_id=\" + this.companyId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/setunitgroupfavorite\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            var res = data.json();\r\n            console.log(res.msg[0].Error);\r\n            console.log(res.msg[0].result);\r\n            if (res.msg[0] == 0) {\r\n                console.log(\"Favorite\");\r\n            }\r\n            else {\r\n                console.log(\"Un Favorite\");\r\n            }\r\n            if (res.unitgroups.length > 0) {\r\n                for (var unitgroup in res.unitgroups) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.unitgroups[unitgroup].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.unitgroups[unitgroup].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    console.log(favorite);\r\n                    _this.reportAllLists.push({\r\n                        unitgroup_id: res.unitgroups[unitgroup].unitgroup_id,\r\n                        unitgroup_name: res.unitgroups[unitgroup].unitgroup_name,\r\n                        remark: res.unitgroups[unitgroup].remark,\r\n                        favorite: res.unitgroups[unitgroup].favorite,\r\n                        totalunits: res.unitgroups[unitgroup].totalunits,\r\n                        colorcode: res.unitgroups[unitgroup].colorcode,\r\n                        colorcodeindication: colorcode,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //\"unitgroup_id\":1,\"unitgroup_name\":\"demo unit\",\"colorcode\":\"FBD75C\",\"remark\":\"nice\",\"favorite\":1,\"totalunits\":5\r\n                /*this.reportAllLists = res.unitgroups;\r\n               \r\n                console.log(\"Total Record:`\" + this.totalCount);\r\n                console.log(JSON.stringify(this.reportAllLists));*/\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(res.msg[0].result);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        //this.dounitGroup();\r\n    };\r\n    UnitgroupPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    UnitgroupPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    UnitgroupPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    UnitgroupPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    UnitgroupPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    UnitgroupPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    UnitgroupPage.prototype.view = function (id) {\r\n        localStorage.setItem(\"uid\", id);\r\n        this.nav.setRoot(Unitgrouplist);\r\n    };\r\n    return UnitgroupPage;\r\n}());\r\nUnitgroupPage = __decorate([\r\n    Component({\r\n        selector: 'page-unitgroup',\r\n        templateUrl: 'unitgroup.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], UnitgroupPage);\r\nexport { UnitgroupPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=unitgroup.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/unitgroup/unitgroup.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { UserPage } from '../user/user';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport { AlarmlogPage } from '../alarmlog/alarmlog';\r\nimport { UnitsPage } from '../units/units';\r\nimport { RolePage } from '../role/role';\r\nimport { UnitgroupPage } from '../unitgroup/unitgroup';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the UnitdetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar TrendlinePage = (function () {\r\n    function TrendlinePage(sanitizer, NP, navCtrl, navParams, nav) {\r\n        this.sanitizer = sanitizer;\r\n        this.NP = NP;\r\n        this.navCtrl = navCtrl;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        //private _inputpdf: string = '<iframe src=\"http://denyoappv2.stridecdev.com/2/1/unitdetails\" height=\"350\" frameborder=\"0\"></iframe>';\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userid = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    TrendlinePage.prototype.ionViewDidLoad = function () {\r\n        this.pageTitle = \"Trendline\";\r\n        console.log('ionViewDidLoad TrendlinePage');\r\n    };\r\n    TrendlinePage.prototype.ionViewWillEnter = function () {\r\n        console.log(\"Alaram Id\" + this.NP.get(\"alarmid\"));\r\n        var alarmID = this.NP.get(\"alarmid\");\r\n        this.iframeContent = \"<iframe id='filecontainer' src=\" + this.apiServiceURL + \"/\" + \"alarmlogtrendline?loginid=\" + this.userid + \"&alarm_id=\" + alarmID + \" height=350 width=100% frameborder=0></iframe > \";\r\n    };\r\n    TrendlinePage.prototype.clickcall = function () {\r\n        console.log('Enter kannan kris thibi1');\r\n    };\r\n    TrendlinePage.prototype.previous = function () {\r\n        this.nav.setRoot(AlarmlogPage);\r\n    };\r\n    TrendlinePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UserPage);\r\n    };\r\n    TrendlinePage.prototype.redirectToUnitGroup = function () {\r\n        this.nav.setRoot(UnitgroupPage);\r\n    };\r\n    TrendlinePage.prototype.redirectToCompanyGroup = function () {\r\n        this.nav.setRoot(CompanygroupPage);\r\n    };\r\n    TrendlinePage.prototype.redirectToUnits = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    TrendlinePage.prototype.redirectToMyAccount = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    TrendlinePage.prototype.redirectToRole = function () {\r\n        this.nav.setRoot(RolePage);\r\n    };\r\n    return TrendlinePage;\r\n}());\r\nTrendlinePage = __decorate([\r\n    Component({\r\n        selector: 'page-trendline',\r\n        templateUrl: 'trendline.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof NavController !== \"undefined\" && NavController) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object])\r\n], TrendlinePage);\r\nexport { TrendlinePage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=trendline.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/trendline/trendline.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { AlarmlistdetailPage } from '../alarmlistdetail/alarmlistdetail';\r\nimport { AddalarmlistPage } from '../addalarmlist/addalarmlist';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n//import { TabsPage } from '../tabs/tabs';\r\n//import { UserPage } from '../user/user';\r\n////import { CompanygroupPage } from '../companygroup/companygroup';\r\n//import { MyaccountPage } from '../myaccount/myaccount';\r\n//import { UnitsPage } from '../units/units';\r\n//import { RolePage } from '../role/role';\r\n/**\r\n * Generated class for the AlarmPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AlarmPage = (function () {\r\n    function AlarmPage(http, nav, toastCtrl, alertCtrl, NP, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'alarm_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.reportAllLists = [];\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"UNITS_ALARM_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"UNITS_ALARM_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"UNITS_ALARM_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"UNITS_ALARM_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    AlarmPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AlarmPage');\r\n    };\r\n    AlarmPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doAlarm();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    AlarmPage.prototype.doAlarm = function () {\r\n        var _this = this;\r\n        var editItem = this.NP.get(\"record\");\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"alarm_id\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/alarms?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&unitid=\" + localStorage.getItem(\"unitId\") + \"&type=alarm\";\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.alarms.length);\r\n            console.log(\"2\" + res.alarms);\r\n            if (res.alarms.length > 0) {\r\n                for (var alarm in res.alarms) {\r\n                    _this.reportAllLists.push({\r\n                        alarm_id: res.alarms[alarm].alarm_id,\r\n                        alarm_name: res.alarms[alarm].alarm_name,\r\n                        alarm_assginedby_name: res.alarms[alarm].alarm_assginedby_name,\r\n                        alarm_assginedto_name: res.alarms[alarm].alarm_assginedto_name,\r\n                        alarm_priority: res.alarms[alarm].alarm_priority\r\n                    });\r\n                }\r\n                //\"unitgroup_id\":1,\"unitgroup_name\":\"demo unit\",\"colorcode\":\"FBD75C\",\"remark\":\"nice\",\"favorite\":1,\"totalunits\":5\r\n                /*this.reportAllLists = res.unitgroups;\r\n               \r\n                console.log(\"Total Record:`\" + this.totalCount);\r\n                console.log(JSON.stringify(this.reportAllLists));*/\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:2\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    AlarmPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Alarm list page unit id is\" + this.unitDetailData.unit_id);\r\n        localStorage.setItem(\"unitId\", this.unitDetailData.unit_id);\r\n        localStorage.setItem(\"iframeunitId\", this.unitDetailData.unit_id);\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.pageTitle = \"Alarm\";\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"alarm_id\";\r\n        this.doAlarm();\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    AlarmPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doAlarm();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    AlarmPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AlarmPage.prototype.details = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AlarmlistdetailPage, {\r\n                record: item,\r\n                act: act,\r\n                from: 'alarm'\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    AlarmPage.prototype.doEdit = function (item, act) {\r\n        if (item.alarm_assginedby_name == '') {\r\n            if (act == 'edit') {\r\n                this.nav.setRoot(AddalarmlistPage, {\r\n                    record: item,\r\n                    act: act,\r\n                    from: 'alarm'\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.sendNotification(\"Already Assigned\");\r\n        }\r\n    };\r\n    AlarmPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AlarmPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AlarmPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AlarmPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AlarmPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AlarmPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AlarmPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AlarmPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AlarmPage;\r\n}());\r\nAlarmPage = __decorate([\r\n    Component({\r\n        selector: 'page-alarm',\r\n        templateUrl: 'alarm.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _g || Object])\r\n], AlarmPage);\r\nexport { AlarmPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=alarm.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/alarm/alarm.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { AddalarmlistPage } from '../addalarmlist/addalarmlist';\r\nimport { TrendlinePage } from '../trendline/trendline';\r\nimport { AlarmPage } from '../alarm/alarm';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n/**\r\n * Generated class for the AlarmlistdetailPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AlarmlistdetailPage = (function () {\r\n    function AlarmlistdetailPage(http, nav, toastCtrl, alertCtrl, NP) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.unitDetailData = {\r\n            hashtag: ''\r\n        };\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Units';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    AlarmlistdetailPage.prototype.trendlineInfo = function (alarmid) {\r\n        this.nav.setRoot(TrendlinePage, {\r\n            alarmid: alarmid\r\n        });\r\n    };\r\n    AlarmlistdetailPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AlarmlistdetailPage');\r\n    };\r\n    AlarmlistdetailPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Alarm Details\" + JSON.stringify(this.NP.get(\"record\")));\r\n            console.log(this.NP.get(\"record\").alarm_name);\r\n            this.alarmid = this.NP.get(\"record\").alarm_id;\r\n            this.alarm_name = this.NP.get(\"record\").alarm_name;\r\n            this.alarm_assginedby_name = this.NP.get(\"record\").alarm_assginedby_name;\r\n            this.alarm_assginedto_name = this.NP.get(\"record\").alarm_assginedto_name;\r\n            if (this.alarm_assginedby_name == \"\") {\r\n                this.estatus = 1;\r\n                console.log(\"!!!\" + this.estatus);\r\n            }\r\n            // this.selectEntry(this.NP.get(\"record\"));\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    AlarmlistdetailPage.prototype.selectEntry = function (item) {\r\n        this.alarm_name = item.alarm_name;\r\n        this.alarm_assginedby_name = item.alarm_assginedby_name;\r\n        this.alarm_assginedto_name = item.alarm_assginedto_name;\r\n    };\r\n    AlarmlistdetailPage.prototype.editalarm = function () {\r\n        this.nav.setRoot(AddalarmlistPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AlarmlistdetailPage.prototype.previous = function () {\r\n        if (this.NP.get(\"record\") == 'alarm') {\r\n            this.nav.setRoot(AlarmPage, {\r\n                record: this.NP.get(\"record\")\r\n            });\r\n        }\r\n        else {\r\n            this.nav.setRoot(CommentsinfoPage);\r\n        }\r\n    };\r\n    AlarmlistdetailPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AlarmlistdetailPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AlarmlistdetailPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AlarmlistdetailPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AlarmlistdetailPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AlarmlistdetailPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AlarmlistdetailPage;\r\n}());\r\nAlarmlistdetailPage = __decorate([\r\n    Component({\r\n        selector: 'page-alarmlistdetail',\r\n        templateUrl: 'alarmlistdetail.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object])\r\n], AlarmlistdetailPage);\r\nexport { AlarmlistdetailPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=alarmlistdetail.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/alarmlistdetail/alarmlistdetail.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AlarmlistdetailPage } from '../alarmlistdetail/alarmlistdetail';\r\nimport { AlarmPage } from '../alarm/alarm';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddalarmlistPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddalarmlistPage = (function () {\r\n    function AddalarmlistPage(nav, http, NP, fb, toastCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.userdata = [];\r\n        this.isSubmitted = false;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.unitDetailData = {\r\n            hashtag: ''\r\n        };\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"assigned_to\": [\"\", Validators.required],\r\n            \"remark\": [\"\", Validators.required],\r\n            \"subject\": [\"\", Validators.required],\r\n            \"assignedby\": [\"\", Validators.required]\r\n        });\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n        this.uname = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    AddalarmlistPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddalarmlistPage');\r\n    };\r\n    AddalarmlistPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.getUserListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            // this.pageTitle = 'Edit Company Group';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            //this.pageTitle = 'New  Org Chart';\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    AddalarmlistPage.prototype.selectEntry = function (item) {\r\n        this.subject = item.alarm_name;\r\n        this.assignedby = this.uname;\r\n        this.assigned_to = item.assigned_to;\r\n        this.recordID = item.alarm_id;\r\n    };\r\n    AddalarmlistPage.prototype.getUserListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getstaffs?loginid=\" + this.userId + \"&company_id=\" + this.companyid;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            // console.log(data.json);\r\n            _this.responseResultReportTo = res.staffslist;\r\n        });\r\n    };\r\n    AddalarmlistPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.unitDetailData.hashtag = hashtag;\r\n    };\r\n    AddalarmlistPage.prototype.saveEntry = function () {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1&alarmid=\" + this.recordID +\r\n            \"&alarm_assigned_by=\" + this.userId +\r\n            \"&alarm_assigned_to=\" + this.assigned_to +\r\n            \"&alarm_remark=\" + this.remark +\r\n            \"&alarm_assigned_date=\" + this.micro_timestamp, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/alarms/assignalarm\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"successfully Assigned\");\r\n                localStorage.setItem(\"userPhotoFile\", \"\");\r\n                if (_this.NP.get(\"record\") == 'alarm') {\r\n                    _this.nav.setRoot(AlarmPage, {\r\n                        record: _this.NP.get(\"record\")\r\n                    });\r\n                }\r\n                else {\r\n                    _this.nav.setRoot(CommentsinfoPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddalarmlistPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddalarmlistPage.prototype.previous = function () {\r\n        if (this.NP.get(\"from\") == 'alarm') {\r\n            this.nav.setRoot(AlarmlistdetailPage, {\r\n                record: this.NP.get(\"record\")\r\n            });\r\n        }\r\n        else {\r\n            this.nav.setRoot(CommentsinfoPage);\r\n        }\r\n    };\r\n    AddalarmlistPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddalarmlistPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddalarmlistPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddalarmlistPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddalarmlistPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddalarmlistPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddalarmlistPage;\r\n}());\r\nAddalarmlistPage = __decorate([\r\n    Component({\r\n        selector: 'page-addalarmlist',\r\n        templateUrl: 'addalarmlist.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddalarmlistPage);\r\nexport { AddalarmlistPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addalarmlist.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addalarmlist/addalarmlist.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { AlertController, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { RolePage } from '../role/role';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport 'rxjs/add/operator/map';\r\n/**\r\n * Generated class for the CommentdetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar CommentdetailsPage = (function () {\r\n    function CommentdetailsPage(http, alertCtrl, NP, nav, toastCtrl, navParams, viewCtrl, formBuilder) {\r\n        this.http = http;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.navParams = navParams;\r\n        this.viewCtrl = viewCtrl;\r\n        this.photoInfo = [];\r\n        this.addedImgListsArray = [];\r\n        this.addedImgLists = [];\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.hideActionButton = true;\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.service_priority_class1 = \"-outline\";\r\n        this.service_priority_class2 = \"-outline\";\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n        this.udetails = localStorage.getItem(\"unitdetails\");\r\n        console.log(JSON.stringify(this.udetails));\r\n        this.comment_priority = 0;\r\n        // Watch the form for changes, and\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n    }\r\n    CommentdetailsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad CommentdetailsPage');\r\n    };\r\n    CommentdetailsPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.getPrority(1);\r\n        this.udetails = localStorage.getItem(\"unitdetails\");\r\n        console.log(\"UD\" + JSON.stringify(this.udetails));\r\n        console.log(\"comment:\" + JSON.stringify(this.NP.get(\"record\")));\r\n        if (this.NP.get(\"record\")) {\r\n            if (this.NP.get(\"act\") != 'Push') {\r\n                this.selectEntry(this.NP.get(\"record\"));\r\n                this.comment_id = this.NP.get(\"record\").comment_id;\r\n                if (this.NP.get(\"act\") == 'Add') {\r\n                    this.isEdited = false;\r\n                    this.unitDetailData.pageTitle = 'Add Comments';\r\n                    this.comment_unitid = this.NP.get(\"unit_id\");\r\n                }\r\n                else {\r\n                    this.comment_unitid = this.NP.get(\"record\").comment_unit_id;\r\n                    this.unitDetailData.pageTitle = 'Edit Comments';\r\n                    this.isEdited = true;\r\n                }\r\n                console.log(\"Comment Unit Id:\" + this.comment_unitid);\r\n                localStorage.setItem(\"iframeunitId\", this.comment_unitid);\r\n                localStorage.setItem(\"unitId\", this.comment_unitid);\r\n            }\r\n            else {\r\n                /*console.log('Push');\r\n                let //body: string = \"loginid=\" + this.userId,\r\n                  type1: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n                  headers1: any = new Headers({ 'Content-Type': type1 }),\r\n                  options1: any = new RequestOptions({ headers: headers1 }),\r\n                  url1: any = this.apiServiceURL + \"getcommentdetails/\" + this.NP.get(\"record\");\r\n                console.log(url1);\r\n                this.http.get(url1, options1)\r\n                  .subscribe((data) => {\r\n                    console.log(\"getcommentdetails Response Success:\" + JSON.stringify(data.json()));\r\n                    console.log(\"comments Details:\" + data.json().comments);\r\n                    this.selectEntry(data.json().servicedetail);\r\n                  });*/\r\n                console.log('Push');\r\n                var body = \"commentid=\" + this.NP.get(\"record\"), type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/getcommentdetails\";\r\n                console.log(url1);\r\n                this.http.post(url1, body, options1)\r\n                    .subscribe(function (data) {\r\n                    console.log(\"servicebyid Response Success:\" + JSON.stringify(data.json()));\r\n                    console.log(\"Service Details:\" + data.json().comments[0]);\r\n                    _this.selectEntry(data.json().comments[0]);\r\n                });\r\n            }\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        //localStorage.setItem(\"iframeunitId\", this.comment_unitid);\r\n        // localStorage.setItem(\"unitId\", this.comment_unitid);\r\n    };\r\n    CommentdetailsPage.prototype.getPrority = function (val) {\r\n        this.comment_priority = val;\r\n    };\r\n    CommentdetailsPage.prototype.selectEntry = function (item) {\r\n        console.log(\"Comment Unit Id\" + JSON.stringify(item));\r\n        this.comments = item.comments;\r\n        this.comment_subject = item.comment_subject;\r\n        localStorage.setItem(\"unitId\", item.comment_unit_id);\r\n        localStorage.setItem(\"iframeunitId\", item.comment_unit_id);\r\n        this.comment_by_name = item.comment_by_name;\r\n        this.comment_priority = item.comment_priority;\r\n        this.comment_remark = item.comment_remark;\r\n        this.photo = item.user_photo;\r\n        this.cdate = item.comment_date + \"(\" + item.time_ago + \")\";\r\n        console.log(\"X\" + this.comment_priority);\r\n        if (this.comment_priority == \"1\") {\r\n            this.service_priority_class1 = '';\r\n            console.log(\"Y\");\r\n        }\r\n        else if (this.comment_priority == \"2\") {\r\n            this.service_priority_class2 = '';\r\n            console.log(\"Z\");\r\n        }\r\n        this.comment_resources = item.comment_resources;\r\n        this.unitDetailData.nextServiceDate = item.next_service_date;\r\n        this.comment_resources = item.comment_resources;\r\n        if (this.comment_resources != undefined && this.comment_resources != 'undefined' && this.comment_resources != '') {\r\n            var hashhypenhash = this.comment_resources.split(\"#-#\");\r\n            for (var i = 0; i < hashhypenhash.length; i++) {\r\n                var imgDataArr = hashhypenhash[i].split(\"|\");\r\n                var imgSrc = void 0;\r\n                imgSrc = this.apiServiceURL + \"/commentimages\" + '/' + imgDataArr[1];\r\n                this.addedImgLists.push({\r\n                    imgSrc: imgSrc,\r\n                    imgDateTime: new Date(),\r\n                    fileName: imgDataArr[1],\r\n                    resouce_id: imgDataArr[0]\r\n                });\r\n            }\r\n            if (this.addedImgLists.length > 9) {\r\n                this.isUploaded = false;\r\n            }\r\n        }\r\n    };\r\n    CommentdetailsPage.prototype.previous = function () {\r\n        this.nav.setRoot(CommentsinfoPage, {\r\n            record: this.udetails\r\n        });\r\n    };\r\n    CommentdetailsPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    CommentdetailsPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    CommentdetailsPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    CommentdetailsPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    CommentdetailsPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    CommentdetailsPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    CommentdetailsPage.prototype.redirectToRole = function () {\r\n        this.nav.setRoot(RolePage);\r\n    };\r\n    return CommentdetailsPage;\r\n}());\r\nCommentdetailsPage = __decorate([\r\n    Component({\r\n        selector: 'page-commentdetails',\r\n        templateUrl: 'commentdetails.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _g || Object, typeof (_h = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _h || Object])\r\n], CommentdetailsPage);\r\nexport { CommentdetailsPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\n//# sourceMappingURL=commentdetails.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/commentdetails/commentdetails.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { AlertController, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { UserPage } from '../user/user';\r\nimport { ServicinginfoPage } from '../servicinginfo/servicinginfo';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { UnitgroupPage } from '../unitgroup/unitgroup';\r\nimport { UnitsPage } from '../units/units';\r\nimport { RolePage } from '../role/role';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n//import { Http, Headers, RequestOptions } from '@angular/http';\r\n/**\r\n * Generated class for the ServicedetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar ServicedetailsPage = (function () {\r\n    function ServicedetailsPage(http, alertCtrl, NP, nav, toastCtrl, navParams, viewCtrl, formBuilder, camera) {\r\n        this.http = http;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.navParams = navParams;\r\n        this.viewCtrl = viewCtrl;\r\n        this.camera = camera;\r\n        this.photoInfo = [];\r\n        this.addedImgListsDetailsArray = [];\r\n        this.addedImgListsDetails = [];\r\n        this.colorListArr = [];\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgListsDetails1: '',\r\n            addedImgListsDetails2: ''\r\n        };\r\n        this.hideActionButton = true;\r\n        this.service_priority_class1 = \"-outline\";\r\n        this.service_priority_class2 = \"-outline\";\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n        this.unitDetailData.serviced_by = localStorage.getItem(\"userInfoName\");\r\n        this.service_priority = 0;\r\n        // Watch the form for changes, and\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n    }\r\n    ServicedetailsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad ServicedetailsPage');\r\n    };\r\n    ServicedetailsPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.getPrority(1);\r\n        this.is_request = false;\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        var editItem = this.NP.get(\"record\");\r\n        /* this.unitDetailData.unit_id = editItem.unit_id;\r\n         this.unitDetailData.unitname = editItem.unitname;\r\n         this.unitDetailData.location = editItem.location;\r\n         this.unitDetailData.projectname = editItem.projectname;\r\n         this.unitDetailData.runninghr = editItem.runninghr;\r\n         this.unitDetailData.gen_status = editItem.gen_status;\r\n         this.unitDetailData.nextservicedate = editItem.nextservicedate;*/\r\n        // Get Unit Details from API\r\n        if (this.NP.get(\"record\")) {\r\n            if (this.NP.get(\"act\") != 'Push') {\r\n                //this.selectEntry(this.NP.get(\"record\"));\r\n                this.service_id = this.NP.get(\"record\").service_id;\r\n                if (this.NP.get(\"act\") == 'Add') {\r\n                }\r\n                else {\r\n                    this.service_unitid = this.NP.get(\"record\").service_unitid;\r\n                    this.unitDetailData.pageTitle = 'Servicing Info Edit';\r\n                    this.isEdited = true;\r\n                }\r\n                console.log(\"Service Id:\" + this.service_id);\r\n                console.log(\"Service Unit Id:\" + this.service_unitid);\r\n                console.log('Not Push');\r\n                var body = \"serviceid=\" + this.service_id, type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/servicebyid\";\r\n                console.log(url1);\r\n                this.http.post(url1, body, options1)\r\n                    .subscribe(function (data) {\r\n                    console.log(\"servicebyid Response Success:\" + JSON.stringify(data.json()));\r\n                    console.log(\"Service Details:\" + data.json().servicedetail[0]);\r\n                    _this.selectEntry(data.json().servicedetail[0]);\r\n                });\r\n            }\r\n            else {\r\n                console.log('Push');\r\n                var body = \"serviceid=\" + this.NP.get(\"record\"), type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/servicebyid\";\r\n                console.log(url1);\r\n                this.http.post(url1, body, options1)\r\n                    .subscribe(function (data) {\r\n                    console.log(\"servicebyid Response Success:\" + JSON.stringify(data.json()));\r\n                    console.log(\"Service Details:\" + data.json().servicedetail[0]);\r\n                    _this.selectEntry(data.json().servicedetail[0]);\r\n                });\r\n            }\r\n            localStorage.setItem(\"iframeunitId\", this.service_unitid);\r\n        }\r\n        console.log('Push');\r\n        // if (this.NP.get(\"act\") != 'Push') {\r\n        /*let body: string = \"loginid=\" + localStorage.getItem(\"userInfoId\") + \"&unitid=\" + this.service_unitid,\r\n          type1: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n          headers1: any = new Headers({ 'Content-Type': type1 }),\r\n          options1: any = new RequestOptions({ headers: headers1 }),\r\n          url1: any = this.apiServiceURL + \"/getunitdetailsbyid\";\r\n        console.log(url1 + \"?\" + body);\r\n        this.http.post(url1, body, options1)\r\n          //this.http.get(url1, options1)\r\n          .subscribe((data) => {\r\n            console.log(\"servicebyid Response Success:\" + JSON.stringify(data.json()));\r\n            console.log(\"Service Details:\" + data.json().units[0]);\r\n            this.selectEntry(data.json().units[0]);\r\n          });*/\r\n        //}\r\n        // Get Unit Details from API\r\n    };\r\n    ServicedetailsPage.prototype.getPrority = function (val) {\r\n        this.service_priority = val;\r\n    };\r\n    ServicedetailsPage.prototype.selectEntry = function (item) {\r\n        this.serviced_by_name = item.serviced_by_name;\r\n        this.serviced_datetime = item.serviced_datetime;\r\n        this.service_subject = item.service_subject;\r\n        this.service_remark = item.service_remark;\r\n        this.photo = item.user_photo;\r\n        this.sdate = item.serviced_datetime + \"(\" + item.time_ago + \")\";\r\n        // this.requestbutton=1;\r\n        //this.next_service_date = item.next_service_date;\r\n        this.service_priority = item.service_priority;\r\n        console.log(\"X\" + this.service_priority);\r\n        if (this.service_priority == \"1\") {\r\n            this.service_priority_class1 = '';\r\n            console.log(\"Y\");\r\n        }\r\n        else if (this.service_priority == \"2\") {\r\n            this.service_priority_class2 = '';\r\n            console.log(\"Z\");\r\n        }\r\n        if (item.is_request > 0) {\r\n            this.is_request = true;\r\n        }\r\n        this.serviced_by_name = item.serviced_by_name;\r\n        this.service_resources = item.service_resources;\r\n        this.unitDetailData.nextServiceDate = item.next_service_date;\r\n        this.service_resources = item.service_resources;\r\n        this.service_priority = item.service_priority;\r\n        this.requestbutton = item.is_denyo_support;\r\n        console.log(\"RS\" + item.is_request);\r\n        // Unit Details from Push\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        var index = this.colorListArr.indexOf(item.colorcode); // 1\r\n        console.log(\"Color Index:\" + index);\r\n        var colorvalincrmentone = index + 1;\r\n        var colorcode;\r\n        colorcode = \"button\" + colorvalincrmentone;\r\n        console.log(\"Color is\" + colorcode);\r\n        this.unitDetailData.unit_id = item.service_unitid;\r\n        localStorage.setItem(\"unitId\", this.unitDetailData.unit_id);\r\n        // this.unitDetailData.unitname = item.unitname;\r\n        // this.unitDetailData.location = item.location;\r\n        // this.unitDetailData.projectname = item.projectname;\r\n        // this.unitDetailData.runninghr = item.runninghr;\r\n        // this.unitDetailData.gen_status = item.gen_status;\r\n        // this.unitDetailData.nextservicedate = item.nextservicedate;\r\n        // this.unitDetailData.lat = item.latitude;\r\n        // this.unitDetailData.lng = item.longtitude;\r\n        // this.unitDetailData.colorcodeindications = colorcode;\r\n        // // Unit Details from Push\r\n        console.log(\"RQ\" + this.is_request);\r\n        if (this.service_resources != undefined && this.service_resources != 'undefined' && this.service_resources != '') {\r\n            var hashhypenhash = this.service_resources.split(\"#-#\");\r\n            for (var i = 0; i < hashhypenhash.length; i++) {\r\n                var imgDataArr = hashhypenhash[i].split(\"|\");\r\n                var imgSrc = void 0;\r\n                imgSrc = this.apiServiceURL + \"/serviceimages\" + '/' + imgDataArr[1];\r\n                this.addedImgListsDetails.push({\r\n                    imgSrc: imgSrc,\r\n                    imgDateTime: new Date(),\r\n                    fileName: imgDataArr[1],\r\n                    resouce_id: imgDataArr[0]\r\n                });\r\n            }\r\n            if (this.addedImgListsDetails.length > 9) {\r\n                this.isUploaded = false;\r\n            }\r\n        }\r\n    };\r\n    ServicedetailsPage.prototype.previous = function () {\r\n        if (this.NP.get(\"from\") == 'service') {\r\n            this.nav.setRoot(ServicinginfoPage, {\r\n                record: this.NP.get(\"record\")\r\n            });\r\n        }\r\n        else {\r\n            this.nav.setRoot(CommentsinfoPage, {\r\n                record: this.NP.get(\"record\")\r\n            });\r\n        }\r\n    };\r\n    ServicedetailsPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UserPage);\r\n    };\r\n    ServicedetailsPage.prototype.redirectToUnitGroup = function () {\r\n        this.nav.setRoot(UnitgroupPage);\r\n    };\r\n    ServicedetailsPage.prototype.redirectToCompanyGroup = function () {\r\n        this.nav.setRoot(CompanygroupPage);\r\n    };\r\n    ServicedetailsPage.prototype.redirectToUnits = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    ServicedetailsPage.prototype.redirectToMyAccount = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    ServicedetailsPage.prototype.redirectToRole = function () {\r\n        this.nav.setRoot(RolePage);\r\n    };\r\n    return ServicedetailsPage;\r\n}());\r\nServicedetailsPage = __decorate([\r\n    Component({\r\n        selector: 'page-servicedetails',\r\n        templateUrl: 'servicedetails.html',\r\n        providers: [Camera,]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _g || Object, typeof (_h = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _h || Object, typeof (_j = typeof Camera !== \"undefined\" && Camera) === \"function\" && _j || Object])\r\n], ServicedetailsPage);\r\nexport { ServicedetailsPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n//# sourceMappingURL=servicedetails.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/servicedetails/servicedetails.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, AlertController } from 'ionic-angular';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { AddcommentsinfoPage } from '../addcommentsinfo/addcommentsinfo';\r\nimport { AddserviceinfoPage } from '../addserviceinfo/addserviceinfo';\r\nimport { AddalarmlistPage } from '../addalarmlist/addalarmlist';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { CommentdetailsPage } from '../commentdetails/commentdetails';\r\nimport { ServicedetailsPage } from '../servicedetails/servicedetails';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { AlarmlistdetailPage } from '../alarmlistdetail/alarmlistdetail';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the ServicinginfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar CommentsinfoPage = (function () {\r\n    function CommentsinfoPage(http, toastCtrl, alertCtrl, NP, navParams, nav, loadingCtrl) {\r\n        this.http = http;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.atMentionedInfo = [];\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'companygroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.reportAllLists = [];\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.addedImgLists = [];\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pageTitle = 'Comments';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.udetails = localStorage.getItem(\"unitdetails\");\r\n        this.VIEWACCESS = localStorage.getItem(\"UNITS_COMMENTS_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"UNITS_COMMENTS_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"UNITS_COMMENTS_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"UNITS_COMMENTS_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    CommentsinfoPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoadCommentsinfoPage');\r\n    };\r\n    CommentsinfoPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.unit_id = localStorage.getItem(\"unitId\");\r\n        console.log(\"NUD\" + localStorage.getItem(\"unitdetails\"));\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"comment_id\";\r\n        this.doService();\r\n        //this.unit_id = this.NP.get(\"record\").unit_id;\r\n        // Atmentioned Tag Storage\r\n    };\r\n    CommentsinfoPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    CommentsinfoPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doService();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    CommentsinfoPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doService();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    CommentsinfoPage.prototype.doService = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"comapny\";\r\n        }\r\n        var editItem = this.NP.get(\"record\");\r\n        var iframeunitid = localStorage.getItem(\"iframeunitId\");\r\n        console.log(\"iframeunitid:\" + iframeunitid);\r\n        if (iframeunitid == 'undefined') {\r\n            iframeunitid = '0';\r\n        }\r\n        if (iframeunitid == undefined) {\r\n            iframeunitid = '0';\r\n        }\r\n        if (iframeunitid != undefined && iframeunitid != 'undefined') {\r\n            this.unit_id = iframeunitid;\r\n        }\r\n        else {\r\n            this.unit_id = editItem.service_unitid;\r\n        }\r\n        //http://denyoappv2.stridecdev.com/companygroup?is_mobile=1\r\n        //http://denyoappv2.stridecdev.com/comments?is_mobile=1&startindex=0&results=8&sort=service_id&dir=asc&unitid=2\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/comments?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&unitid=\" + localStorage.getItem(\"unitId\");\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.comments.length);\r\n            console.log(\"2\" + res.comments);\r\n            if (res.comments.length > 0) {\r\n                _this.reportAllLists = res.comments;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n                _this.loadingMoreDataContent = 'Loading More Data';\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n                _this.loadingMoreDataContent = 'No More Data';\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    CommentsinfoPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    CommentsinfoPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    CommentsinfoPage.prototype.doAdd = function () {\r\n        this.service_subject = '';\r\n        this.comments = '';\r\n        this.addedImgLists = [];\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(AddcommentsinfoPage, {\r\n            record: this.NP.get(\"record\"),\r\n            act: 'Add',\r\n            unit_id: this.unit_id\r\n        });\r\n    };\r\n    CommentsinfoPage.prototype.doEdit = function (item, act, type) {\r\n        if (type.toLowerCase() == 'c') {\r\n            console.log(\"comment\");\r\n            localStorage.setItem(\"microtime\", \"\");\r\n            this.nav.setRoot(AddcommentsinfoPage, {\r\n                record: item,\r\n                act: 'Edit'\r\n            });\r\n        }\r\n        if (type.toLowerCase() == 's') {\r\n            console.log(\"service\");\r\n            localStorage.setItem(\"microtime\", \"\");\r\n            this.nav.setRoot(AddserviceinfoPage, {\r\n                record: item,\r\n                act: 'Edit', from: 'comment'\r\n            });\r\n        }\r\n        if (type.toLowerCase() == 'a') {\r\n            console.log(\"Alarm\");\r\n            // localStorage.setItem(\"microtime\", \"\");\r\n            if (item.alarm_assigned_to == '') {\r\n                this.nav.setRoot(AddalarmlistPage, {\r\n                    record: item,\r\n                    act: act,\r\n                    from: 'comment'\r\n                });\r\n            }\r\n            else {\r\n                this.sendNotification(\"Already Assigned\");\r\n            }\r\n        }\r\n        if (type.toLowerCase() == 'r') {\r\n            this.sendNotification(\"Not Applicable!!!\");\r\n        }\r\n    };\r\n    CommentsinfoPage.prototype.details = function (item, act, type) {\r\n        if (type.toLowerCase() == 'c') {\r\n            localStorage.setItem(\"microtime\", \"\");\r\n            this.nav.setRoot(CommentdetailsPage, {\r\n                record: item,\r\n                act: 'Edit'\r\n            });\r\n        }\r\n        if (type.toLowerCase() == 's') {\r\n            localStorage.setItem(\"microtime\", \"\");\r\n            this.nav.setRoot(ServicedetailsPage, {\r\n                record: item,\r\n                act: 'Edit',\r\n                from: 'comment'\r\n            });\r\n        }\r\n        if (type.toLowerCase() == 'r') {\r\n            localStorage.setItem(\"microtime\", \"\");\r\n            this.nav.setRoot(ServicedetailsPage, {\r\n                record: item,\r\n                act: 'Edit',\r\n                from: 'comment'\r\n            });\r\n        }\r\n        if (type.toLowerCase() == 'a') {\r\n            this.nav.setRoot(AlarmlistdetailPage, {\r\n                record: item,\r\n                act: act,\r\n                from: 'comment'\r\n            });\r\n        }\r\n    };\r\n    CommentsinfoPage.prototype.doConfirm = function (item, ty) {\r\n        var _this = this;\r\n        if (ty.toLowerCase() == 'c') {\r\n            console.log(\"Deleted Id\" + item.comment_id);\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'Are you sure you want to delete this comment?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(item.comment_id, item.event_type);\r\n                            for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                if (_this.reportAllLists[q] == item) {\r\n                                    _this.reportAllLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n        if (ty.toLowerCase() == 's') {\r\n            console.log(\"Deleted Id\" + item.service_id);\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'Are you sure you want to delete this Service?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(item.service_id, item.event_type);\r\n                            for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                if (_this.reportAllLists[q] == item) {\r\n                                    _this.reportAllLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n        if (ty.toLowerCase() == 'r') {\r\n            console.log(\"Deleted Id\" + item.service_id);\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'Are you sure you want to delete this Service?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(item.service_id, item.event_type);\r\n                            for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                if (_this.reportAllLists[q] == item) {\r\n                                    _this.reportAllLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n    };\r\n    CommentsinfoPage.prototype.deleteEntry = function (recordID, types) {\r\n        var _this = this;\r\n        if (types.toLowerCase() == 'c') {\r\n            var \r\n            //body: string = \"key=delete&recordID=\" + recordID,\r\n            type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/comments/\" + recordID + \"/1/delete\";\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    _this.sendNotification(\"Comments was successfully deleted\");\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n        if (types.toLowerCase() == 's') {\r\n            var \r\n            //body: string = \"key=delete&recordID=\" + recordID,\r\n            type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/\" + recordID + \"/1/delete\";\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    _this.sendNotification(\"Service was successfully deleted\");\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n        if (types.toLowerCase() == 'r') {\r\n            var \r\n            //body: string = \"key=delete&recordID=\" + recordID,\r\n            type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/\" + recordID + \"/1/delete\";\r\n            console.log(\"DURL\" + url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    _this.sendNotification(\"Service was successfully deleted\");\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    CommentsinfoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    CommentsinfoPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    CommentsinfoPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    CommentsinfoPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    CommentsinfoPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    CommentsinfoPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    CommentsinfoPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doService();\r\n    };\r\n    return CommentsinfoPage;\r\n}());\r\nCommentsinfoPage = __decorate([\r\n    Component({\r\n        selector: 'page-commentsinfo',\r\n        templateUrl: 'commentsinfo.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _b || Object, typeof (_c = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object, typeof (_g = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _g || Object])\r\n], CommentsinfoPage);\r\nexport { CommentsinfoPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=commentsinfo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/commentsinfo/commentsinfo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the EnginedetailviewPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar EnginedetailviewPage = (function () {\r\n    function EnginedetailviewPage(http, nav, sanitizer, toastCtrl, alertCtrl, NP, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.sanitizer = sanitizer;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unitgroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.reportAllLists = [];\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.unitid = localStorage.getItem(\"unitId\");\r\n    }\r\n    EnginedetailviewPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad EnginedetailviewPage');\r\n    };\r\n    EnginedetailviewPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    EnginedetailviewPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Service Info Record Param Value:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            var editItem = this.NP.get(\"record\");\r\n            //this.unitDetailData.unit_id = editItem.unit_id;\r\n            //this.unitDetailData.unitname = editItem.unitname;\r\n            //this.unitDetailData.location = editItem.location;\r\n            //this.unitDetailData.projectname = editItem.projectname;\r\n            this.unitDetailData.runninghr = editItem.runninghr;\r\n            this.unitDetailData.gen_status = editItem.gen_status;\r\n            this.unitDetailData.nextservicedate = editItem.nextservicedate;\r\n            var favorite = void 0;\r\n            if (this.NP.get(\"record\").favoriteindication == 'favorite') {\r\n                favorite = \"favorite\";\r\n            }\r\n            else {\r\n                favorite = \"unfavorite\";\r\n            }\r\n            this.unitDetailData.favoriteindication = favorite;\r\n            this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n            if (this.unitDetailData.unit_id == undefined) {\r\n                this.unitDetailData.unit_id = editItem.unit_id;\r\n            }\r\n            if (this.unitDetailData.unit_id == 'undefined') {\r\n                this.unitDetailData.unit_id = editItem.unit_id;\r\n            }\r\n            this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n            this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n            this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n            this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n            console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n            this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n            this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n            this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n            this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        // this.iframeContent =  \"<iframe id='filecontainer' src=\" + \"http://denyoappv2.stridecdev.com/orgchart?company_id=\"+this.companyId+\"&is_mobile=1&id=\"+this.userId+\" height=350 width=100% frameborder=0></iframe>\";\r\n        this.pageTitle = \"Org Chart\";\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"unitgroup_id\";\r\n        console.log(this.apiServiceURL + \"/orgchart?company_id=\" + this.companyId + \"&is_mobile=1\");\r\n        this.iframeContent = \"<iframe src=\" + \"http://denyoappv2.stridecdev.com/\" + this.unitid + \"/1/enginedetails height=350 frameborder=0></iframe>\";\r\n    };\r\n    EnginedetailviewPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    EnginedetailviewPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    EnginedetailviewPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    EnginedetailviewPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    EnginedetailviewPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    EnginedetailviewPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    EnginedetailviewPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    return EnginedetailviewPage;\r\n}());\r\nEnginedetailviewPage = __decorate([\r\n    Component({\r\n        selector: 'page-enginedetailview',\r\n        templateUrl: 'enginedetailview.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _c || Object, typeof (_d = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _d || Object, typeof (_e = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _g || Object, typeof (_h = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _h || Object])\r\n], EnginedetailviewPage);\r\nexport { EnginedetailviewPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\n//# sourceMappingURL=enginedetailview.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/enginedetailview/enginedetailview.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, AlertController } from 'ionic-angular';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n/**\r\n * Generated class for the ViewunitsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar ViewunitsPage = (function () {\r\n    function ViewunitsPage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Units';\r\n        this.str = '';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.ulist = localStorage.getItem(\"viewlist\");\r\n    }\r\n    ViewunitsPage.prototype.ionViewWillEnter = function () {\r\n        this.doUnit();\r\n        if (this.navParams.get(\"record\")) {\r\n            console.log(\"Service Info Record Param Value:\" + JSON.stringify(this.navParams.get(\"record\")));\r\n        }\r\n    };\r\n    ViewunitsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad ViewunitsPage');\r\n    };\r\n    ViewunitsPage.prototype.exit = function () {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: this.navParams.get(\"record\")\r\n        });\r\n    };\r\n    ViewunitsPage.prototype.doUnit = function () {\r\n        var _this = this;\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"vendor\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        //  http://denyoappv2.stridecdev.com/unitlistaction?action=view&unitid=1,2&is_mobile=1&loginid=4\r\n        url = this.apiServiceURL + \"/unitlistaction?action=view&unitid=\" + this.ulist + \"&is_mobile=1&loginid=\" + this.userId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.unitdetails.length);\r\n            console.log(\"2\" + res.unitdetails);\r\n            if (res.unitdetails.length > 0) {\r\n                for (var unit in res.unitdetails) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.unitdetails[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.unitdetails[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.unitdetails[unit].unit_id,\r\n                        unitname: res.unitdetails[unit].unitname,\r\n                        location: res.unitdetails[unit].location,\r\n                        projectname: res.unitdetails[unit].projectname,\r\n                        colorcode: res.unitdetails[unit].colorcode,\r\n                        contacts: res.unitdetails[unit].contacts,\r\n                        nextservicedate: res.unitdetails[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.unitdetails[unit].controllerid,\r\n                        neaplateno: res.unitdetails[unit].neaplateno,\r\n                        companys_id: res.unitdetails[unit].companys_id,\r\n                        unitgroups_id: res.unitdetails[unit].unitgroups_id,\r\n                        models_id: res.unitdetails[unit].models_id,\r\n                        alarmnotificationto: res.unitdetails[unit].alarmnotificationto,\r\n                        lat: res.unitdetails[unit].lat,\r\n                        lng: res.unitdetails[unit].lng,\r\n                        genstatus: res.unitdetails[unit].genstatus,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    ViewunitsPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUnit();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    ViewunitsPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    return ViewunitsPage;\r\n}());\r\nViewunitsPage = __decorate([\r\n    Component({\r\n        selector: 'page-viewunits',\r\n        templateUrl: 'viewunits.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], ViewunitsPage);\r\nexport { ViewunitsPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=viewunits.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/viewunits/viewunits.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { ServicinginfoPage } from '../servicinginfo/servicinginfo';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { EnginedetailviewPage } from '../enginedetailview/enginedetailview';\r\nimport { ViewunitsPage } from '../viewunits/viewunits';\r\n//import { AlarmPage } from '../alarm/alarm';\r\nimport { AlarmlogPage } from '../alarmlog/alarmlog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { AlarmPage } from '../alarm/alarm';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the UnitdetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar UnitdetailsPage = (function () {\r\n    function UnitdetailsPage(http, sanitizer, NP, navCtrl, navParams, nav) {\r\n        this.http = http;\r\n        this.sanitizer = sanitizer;\r\n        this.NP = NP;\r\n        this.navCtrl = navCtrl;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        //public userId: any;\r\n        this.item = [];\r\n        this.colorListArr = [];\r\n        //private _inputpdf: string = '<iframe src=\"http://denyoappv2.stridecdev.com/2/1/unitdetails\" height=\"350\" frameborder=\"0\"></iframe>';\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            unit_id: '',\r\n            unitname: '',\r\n            location: '',\r\n            projectname: '',\r\n            colorcode: '',\r\n            gen_status: '',\r\n            nextservicedate: '',\r\n            alarmnotificationto: '',\r\n            favoriteindication: '',\r\n            userId: '',\r\n            loginas: '',\r\n            htmlContent: '',\r\n            lat: '',\r\n            lng: '',\r\n            iframeURL: ''\r\n        };\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    UnitdetailsPage.prototype.ionViewDidLoad = function () {\r\n        var _this = this;\r\n        this.pageTitle = \"Unit Detail\";\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        var editItem = this.NP.get(\"record\");\r\n        /*if (this.NP.get(\"stopinterval\")) {\r\n            let stopinterval = this.NP.get(\"stopinterval\");\r\n            stopinterval.unsubscribe();\r\n        }*/\r\n        var iframeunitid = localStorage.getItem(\"iframeunitId\");\r\n        console.log(\"iframeunitid:\" + iframeunitid);\r\n        if (iframeunitid == 'undefined') {\r\n            iframeunitid = '0';\r\n        }\r\n        if (iframeunitid == undefined) {\r\n            iframeunitid = '0';\r\n        }\r\n        if (iframeunitid != '0') {\r\n            this.unitDetailData.unit_id = iframeunitid;\r\n        }\r\n        else {\r\n            if (this.NP.get(\"record\").unit_id > 0) {\r\n                this.unitDetailData.unit_id = this.NP.get(\"record\").unit_id;\r\n            }\r\n            else {\r\n                this.unitDetailData.unit_id = editItem.unit_id;\r\n            }\r\n        }\r\n        console.log('ionViewDidLoad UnitdetailsPage');\r\n        // UnitDetails Api Call\t\t\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getunitdetailsbyid?is_mobile=1&loginid=\" + this.unitDetailData.userId +\r\n            \"&unitid=\" + this.unitDetailData.unit_id;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            if (data.status === 200) {\r\n                _this.unitDetailData.unitname = data.json().units[0].unitname;\r\n                _this.unitDetailData.projectname = data.json().units[0].projectname;\r\n                _this.unitDetailData.location = data.json().units[0].location;\r\n                _this.unitDetailData.colorcodeindications = data.json().units[0].colorcode;\r\n                _this.unitDetailData.gen_status = data.json().units[0].genstatus;\r\n                _this.unitDetailData.nextservicedate = data.json().units[0].nextservicedate;\r\n                _this.unitDetailData.alarmnotificationto = data.json().units[0].nextservicedate;\r\n                _this.unitDetailData.lat = data.json().units[0].lat;\r\n                _this.unitDetailData.lng = data.json().units[0].lng;\r\n                var colorcode = void 0;\r\n                var index = _this.colorListArr.indexOf(_this.unitDetailData.colorcodeindications);\r\n                var colorvalincrmentone = index + 1;\r\n                colorcode = \"button\" + colorvalincrmentone;\r\n                _this.unitDetailData.colorcodeindications = colorcode;\r\n                var favorite = void 0;\r\n                if (data.json().units[0].favorite == '1') {\r\n                    favorite = \"favorite\";\r\n                }\r\n                else {\r\n                    favorite = \"unfavorite\";\r\n                }\r\n                _this.unitDetailData.favoriteindication = favorite;\r\n            }\r\n        });\r\n        // Unit Details API Call\t\r\n    };\r\n    UnitdetailsPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.chk = localStorage.getItem(\"viewlist\");\r\n        localStorage.setItem(\"unitdetailsclicked\", '');\r\n        this.iframeContent = \"<iframe id='filecontainer' src=\" + this.apiServiceURL + \"/\" + this.unitDetailData.unit_id + \"/1/unitdetails height=350 width=100% frameborder=0></iframe>\";\r\n        //http://denyoappv2.stridecdev.com/getcount?loginid=1&unitid=2\r\n        var body = \"is_mobile=1&loginid=\" + this.unitDetailData.userId +\r\n            \"&unitid=\" + this.unitDetailData.unit_id, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getcount\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            var res = data.json();\r\n            _this.serviceCount = res.servicecount;\r\n            _this.commentCount = res.commentcount;\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                //this.sendNotification(`Comment count successfully removed`);\r\n            }\r\n            else {\r\n                // this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.unitDetailData.userId;\r\n        console.log(url1);\r\n        // console.log(body);\r\n        this.http.get(url1, options1)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    UnitdetailsPage.prototype.servicingInfo = function (unitId) {\r\n        var body = \"is_mobile=1&userid=\" + this.unitDetailData.userId +\r\n            \"&unitid=\" + unitId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/removeservicecount\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            if (data.status === 200) {\r\n                console.log(\"Service count successfully removed\");\r\n            }\r\n            else {\r\n                console.log(\"Something went wrong!\");\r\n            }\r\n        });\r\n        this.nav.setRoot(ServicinginfoPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    UnitdetailsPage.prototype.alamInfo = function () {\r\n        this.nav.setRoot(AlarmPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    UnitdetailsPage.prototype.commentsInfo = function (unitId) {\r\n        var body = \"is_mobile=1&userid=\" + this.unitDetailData.userId +\r\n            \"&unitid=\" + unitId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/removecommentcount\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Comment count successfully removed\");\r\n            }\r\n            else {\r\n                console.log(\"Something went wrong!\");\r\n            }\r\n        });\r\n        this.nav.setRoot(CommentsinfoPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    UnitdetailsPage.prototype.alarm = function () {\r\n        this.nav.setRoot(AlarmlogPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    UnitdetailsPage.prototype.enginedetail = function () {\r\n        this.nav.setRoot(EnginedetailviewPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    UnitdetailsPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    UnitdetailsPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    UnitdetailsPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    UnitdetailsPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    UnitdetailsPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    UnitdetailsPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    UnitdetailsPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    UnitdetailsPage.prototype.viewunit = function () {\r\n        this.nav.setRoot(ViewunitsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    return UnitdetailsPage;\r\n}());\r\nUnitdetailsPage = __decorate([\r\n    Component({\r\n        selector: 'page-unitdetails',\r\n        templateUrl: 'unitdetails.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object])\r\n], UnitdetailsPage);\r\nexport { UnitdetailsPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=unitdetails.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/unitdetails/unitdetails.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n//import { AddunitgroupPage } from '../addunitgroup/addunitgroup';\r\nimport { AddalarmPage } from '../addalarm/addalarm';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { AlarmdetailsPage } from '../alarmdetails/alarmdetails';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AlarmlogPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AlarmlogPage = (function () {\r\n    function AlarmlogPage(http, nav, toastCtrl, alertCtrl, NP, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'alarm_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.reportAllLists = [];\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"UNITS_ALARM_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"UNITS_ALARM_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"UNITS_ALARM_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"UNITS_ALARM_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    AlarmlogPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AlarmlogPage');\r\n    };\r\n    AlarmlogPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doAlarm();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    AlarmlogPage.prototype.doAlarm = function () {\r\n        var _this = this;\r\n        var editItem = this.NP.get(\"record\");\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"alarm_id\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/alarms?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&unitid=\" + localStorage.getItem(\"unitId\") + \"&type=alarmlog\";\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.alarms.length);\r\n            console.log(\"2\" + res.alarms);\r\n            if (res.alarms.length > 0) {\r\n                for (var alarm in res.alarms) {\r\n                    _this.reportAllLists.push({\r\n                        alarm_id: res.alarms[alarm].alarm_id,\r\n                        alarm_name: res.alarms[alarm].alarm_name,\r\n                        alarm_assginedby_name: res.alarms[alarm].alarm_assginedby_name,\r\n                        alarm_assginedto_name: res.alarms[alarm].alarm_assginedto_name,\r\n                        alarm_priority: res.alarms[alarm].alarm_priority\r\n                    });\r\n                }\r\n                //\"unitgroup_id\":1,\"unitgroup_name\":\"demo unit\",\"colorcode\":\"FBD75C\",\"remark\":\"nice\",\"favorite\":1,\"totalunits\":5\r\n                /*this.reportAllLists = res.unitgroups;\r\n               \r\n                console.log(\"Total Record:`\" + this.totalCount);\r\n                console.log(JSON.stringify(this.reportAllLists));*/\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:2\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    AlarmlogPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        console.log(\"Alarm log page unit id is\" + this.unitDetailData.unit_id);\r\n        localStorage.setItem(\"unitId\", this.unitDetailData.unit_id);\r\n        localStorage.setItem(\"iframeunitId\", this.unitDetailData.unit_id);\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.pageTitle = \"Alarm\";\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"alarm_id\";\r\n        this.doAlarm();\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    AlarmlogPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doAlarm();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    AlarmlogPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AlarmlogPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AlarmlogPage.prototype.doEdit = function (item, act) {\r\n        if (item.alarm_assginedby_name == '') {\r\n            if (act == 'edit') {\r\n                this.nav.setRoot(AddalarmPage, {\r\n                    record: item,\r\n                    act: act\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.sendNotification(\"Already Assigned\");\r\n        }\r\n    };\r\n    AlarmlogPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AlarmlogPage.prototype.details = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AlarmdetailsPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    AlarmlogPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AlarmlogPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AlarmlogPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AlarmlogPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AlarmlogPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AlarmlogPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AlarmlogPage;\r\n}());\r\nAlarmlogPage = __decorate([\r\n    Component({\r\n        selector: 'page-alarmlog',\r\n        templateUrl: 'alarmlog.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _g || Object])\r\n], AlarmlogPage);\r\nexport { AlarmlogPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=alarmlog.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/alarmlog/alarmlog.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AlarmlogPage } from '../alarmlog/alarmlog';\r\nimport { AlarmdetailsPage } from '../alarmdetails/alarmdetails';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddalarmPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddalarmPage = (function () {\r\n    function AddalarmPage(nav, http, NP, fb, toastCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.userdata = [];\r\n        this.unitDetailData = {\r\n            hashtag: ''\r\n        };\r\n        this.isSubmitted = false;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"assigned_to\": [\"\", Validators.required],\r\n            \"remark\": [\"\", Validators.required],\r\n            \"subject\": [\"\", Validators.required],\r\n            \"assignedby\": [\"\", Validators.required]\r\n        });\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n        this.uname = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    AddalarmPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddalarmPage');\r\n    };\r\n    AddalarmPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        this.getUserListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            // this.pageTitle = 'Edit Company Group';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            //this.pageTitle = 'New  Org Chart';\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    AddalarmPage.prototype.selectEntry = function (item) {\r\n        this.subject = item.alarm_name;\r\n        this.assignedby = this.uname;\r\n        this.assigned_to = item.assigned_to;\r\n        this.recordID = item.alarm_id;\r\n    };\r\n    AddalarmPage.prototype.getUserListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getstaffs?loginid=\" + this.userId + \"&company_id=\" + this.companyid;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            // console.log(data.json);\r\n            _this.responseResultReportTo = res.staffslist;\r\n        });\r\n    };\r\n    AddalarmPage.prototype.saveEntry = function () {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1&alarmid=\" + this.recordID +\r\n            \"&alarm_assigned_by=\" + this.userId +\r\n            \"&alarm_assigned_to=\" + this.assigned_to +\r\n            \"&alarm_remark=\" + this.remark +\r\n            \"&alarm_assigned_date=\" + this.micro_timestamp, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/alarms/assignalarm\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"successfully Assigned\");\r\n                localStorage.setItem(\"userPhotoFile\", \"\");\r\n                _this.nav.setRoot(AlarmlogPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddalarmPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddalarmPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.unitDetailData.hashtag = hashtag;\r\n    };\r\n    AddalarmPage.prototype.previous = function () {\r\n        this.nav.setRoot(AlarmdetailsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddalarmPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddalarmPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddalarmPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddalarmPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddalarmPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddalarmPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddalarmPage;\r\n}());\r\nAddalarmPage = __decorate([\r\n    Component({\r\n        selector: 'page-addalarm',\r\n        templateUrl: 'addalarm.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddalarmPage);\r\nexport { AddalarmPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addalarm.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addalarm/addalarm.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { AddalarmPage } from '../addalarm/addalarm';\r\nimport { TrendlinePage } from '../trendline/trendline';\r\nimport { AlarmlogPage } from '../alarmlog/alarmlog';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n/**\r\n * Generated class for the AlarmdetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AlarmdetailsPage = (function () {\r\n    function AlarmdetailsPage(http, nav, toastCtrl, alertCtrl, NP) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.unitDetailData = {\r\n            hashtag: ''\r\n        };\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Units';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    AlarmdetailsPage.prototype.trendlineInfo = function (alarmid) {\r\n        this.nav.setRoot(TrendlinePage, {\r\n            alarmid: alarmid\r\n        });\r\n    };\r\n    AlarmdetailsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AlarmdetailsPage');\r\n    };\r\n    AlarmdetailsPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        if (this.NP.get(\"record\")) {\r\n            if (this.NP.get(\"act\") != 'Push') {\r\n                console.log(\"Alarm Details\" + JSON.stringify(this.NP.get(\"record\")));\r\n                console.log(this.NP.get(\"record\").alarm_name);\r\n                this.alarmid = this.NP.get(\"record\").alarm_id;\r\n                this.alarm_name = this.NP.get(\"record\").alarm_name;\r\n                this.alarm_unitid = this.NP.get(\"record\").alarm_name;\r\n                this.alarm_assginedby_name = this.NP.get(\"record\").alarm_assginedby_name;\r\n                this.alarm_assginedto_name = this.NP.get(\"record\").alarm_assginedto_name;\r\n                if (this.alarm_assginedby_name == \"\") {\r\n                    this.estatus = 1;\r\n                }\r\n            }\r\n            else {\r\n                console.log('Push');\r\n                var body = \"alarmid=\" + this.NP.get(\"record\"), type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/getalarmdetails\";\r\n                console.log(url1);\r\n                this.http.post(url1, body, options1)\r\n                    .subscribe(function (data) {\r\n                    console.log(\"servicebyid Response Success:\" + JSON.stringify(data.json()));\r\n                    console.log(\"Alarm Details:\" + data.json().alarms[0]);\r\n                    _this.selectEntry(data.json().alarms[0]);\r\n                });\r\n            }\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    AlarmdetailsPage.prototype.selectEntry = function (item) {\r\n        console.log(\"selectEntry Array\" + JSON.stringify(item.alarm_unit_id));\r\n        console.log(\"item.alarm_unit_id\" + item.alarm_unit_id);\r\n        localStorage.setItem(\"unitId\", item.alarm_unit_id);\r\n        localStorage.setItem(\"iframeunitId\", item.alarm_unit_id);\r\n        this.alarm_name = item.alarm_name;\r\n        this.alarm_assginedby_name = item.alarm_assginedby_name;\r\n        this.alarm_assginedto_name = item.alarm_assginedto_name;\r\n    };\r\n    AlarmdetailsPage.prototype.editalarm = function () {\r\n        this.nav.setRoot(AddalarmPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AlarmdetailsPage.prototype.previous = function () {\r\n        this.nav.setRoot(AlarmlogPage);\r\n    };\r\n    AlarmdetailsPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AlarmdetailsPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AlarmdetailsPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AlarmdetailsPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AlarmdetailsPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AlarmdetailsPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AlarmdetailsPage;\r\n}());\r\nAlarmdetailsPage = __decorate([\r\n    Component({\r\n        selector: 'page-alarmdetails',\r\n        templateUrl: 'alarmdetails.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object])\r\n], AlarmdetailsPage);\r\nexport { AlarmdetailsPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=alarmdetails.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/alarmdetails/alarmdetails.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { AddalarmPage } from '../addalarm/addalarm';\r\nimport { TrendlinePage } from '../trendline/trendline';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n/**\r\n * Generated class for the AlarmdetailsPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar CalendardetailPage = (function () {\r\n    function CalendardetailPage(http, nav, toastCtrl, alertCtrl, NP) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Units';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    CalendardetailPage.prototype.trendlineInfo = function (event_id) {\r\n        this.nav.setRoot(TrendlinePage, {\r\n            event_id: event_id\r\n        });\r\n    };\r\n    CalendardetailPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad CalendardetailPage');\r\n    };\r\n    CalendardetailPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        if (this.NP.get(\"event_id\")) {\r\n            console.log('Push');\r\n            var body = \"eventid=\" + this.NP.get(\"event_id\"), type1 = \"application/x-www-form-urlencoded; charset=UTF-8\", headers1 = new Headers({ 'Content-Type': type1 }), options1 = new RequestOptions({ headers: headers1 }), url1 = this.apiServiceURL + \"/eventdetailbyid\";\r\n            console.log(url1);\r\n            this.http.post(url1, body, options1)\r\n                .subscribe(function (data) {\r\n                console.log(\"eventdetailbyid Response Success:\" + JSON.stringify(data.json()));\r\n                console.log(\"Event Details:\" + data.json().eventslist[0]);\r\n                _this.selectEntry(data.json().eventslist[0]);\r\n            });\r\n        }\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        localStorage.setItem(\"iframeunitId\", this.event_location);\r\n    };\r\n    CalendardetailPage.prototype.selectEntry = function (item) {\r\n        localStorage.setItem(\"unitId\", item.alarm_unit_id);\r\n        this.event_title = item.event_title;\r\n        this.event_addedby_name = item.event_addedby_name;\r\n        this.event_remark = item.event_remark;\r\n        this.event_date = item.event_date;\r\n        this.event_time = item.event_time;\r\n    };\r\n    CalendardetailPage.prototype.editalarm = function () {\r\n        this.nav.setRoot(AddalarmPage, {\r\n            event_id: this.NP.get(\"event_id\")\r\n        });\r\n    };\r\n    CalendardetailPage.prototype.previous = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    CalendardetailPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    CalendardetailPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    CalendardetailPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    CalendardetailPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    CalendardetailPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    CalendardetailPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return CalendardetailPage;\r\n}());\r\nCalendardetailPage = __decorate([\r\n    Component({\r\n        selector: 'page-calendardetail',\r\n        templateUrl: 'calendardetail.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object])\r\n], CalendardetailPage);\r\nexport { CalendardetailPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=calendardetail.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calendardetail/calendardetail.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddcalendarPage = (function () {\r\n    function AddcalendarPage(datePicker, nav, http, NP, fb, toastCtrl) {\r\n        this.datePicker = datePicker;\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.isSubmitted = false;\r\n        this.responseResultType = [];\r\n        this.responseResultTime = [];\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        // let curDateStr = new Date();\r\n        // this.event_date = curDateStr.getMonth() + \"/\" + curDateStr.getDate() + \"/\" + curDateStr.getFullYear();\r\n        //console.log(\"Top Current Date:\"+this.event_date);\r\n        // this.event_date =\"07/17/2017\";\r\n        //this.event_date = \"2017-07-17\";\r\n        //console.log(\"Current Date is:\" + this.event_date);\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"event_location\": [\"\", Validators.required],\r\n            \"event_subject\": [\"\", Validators.required],\r\n            \"event_unitid\": [\"\"],\r\n            //  \"event_title\": [\"\", Validators.required],\r\n            \"event_project\": [\"\"],\r\n            \"event_date\": [\"\"],\r\n            \"event_type\": [\"\"],\r\n            \"event_notes\": [\"\", Validators.required],\r\n            \"event_time\": [\"\"]\r\n        });\r\n        this.disunit = false;\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        /*for (let am = 600; am <= 1145; am++) {\r\n          let am15plus=am+15;\r\n          this.responseResultTime.push({\r\n            id: am15plus+'AM',\r\n            time_name: am15plus+' AM',\r\n          });\r\n        }*/\r\n        this.responseResultTime.push({\r\n            id: '6.00AM',\r\n            time_name: '6:00 AM',\r\n        }, {\r\n            id: '6.15AM',\r\n            time_name: '6:15 am'\r\n        }, {\r\n            id: '6.30AM',\r\n            time_name: '6:30 AM'\r\n        }, {\r\n            id: '6.45AM',\r\n            time_name: '6:45 AM'\r\n        }, {\r\n            id: '7.00AM',\r\n            time_name: '7:00 AM'\r\n        }, {\r\n            id: '7.15AM',\r\n            time_name: '7:15 AM'\r\n        }, {\r\n            id: '7.30AM',\r\n            time_name: '7:30 AM'\r\n        }, {\r\n            id: '7.45AM',\r\n            time_name: '7:45 AM'\r\n        }, {\r\n            id: '8.00AM',\r\n            time_name: '8:00 AM'\r\n        }, {\r\n            id: '8.15AM',\r\n            time_name: '8:15 AM'\r\n        }, {\r\n            id: '8.30AM',\r\n            time_name: '8:30 AM'\r\n        }, {\r\n            id: '8.45AM',\r\n            time_name: '8:45 AM'\r\n        }, {\r\n            id: '9.00AM',\r\n            time_name: '9:00 AM'\r\n        }, {\r\n            id: '9.15AM',\r\n            time_name: '9:15 AM'\r\n        }, {\r\n            id: '9.30AM',\r\n            time_name: '9:30 AM'\r\n        }, {\r\n            id: '9.45AM',\r\n            time_name: '9:45 AM'\r\n        }, {\r\n            id: '10.00AM',\r\n            time_name: '10:00 AM'\r\n        }, {\r\n            id: '10.15AM',\r\n            time_name: '10:15 AM'\r\n        }, {\r\n            id: '10.30AM',\r\n            time_name: '10:30 AM'\r\n        }, {\r\n            id: '10.45AM',\r\n            time_name: '10:45 AM'\r\n        }, {\r\n            id: '11.00AM',\r\n            time_name: '11:00 AM'\r\n        }, {\r\n            id: '11.15AM',\r\n            time_name: '11:15 AM'\r\n        }, {\r\n            id: '11.30AM',\r\n            time_name: '11:30 AM'\r\n        }, {\r\n            id: '11.45AM',\r\n            time_name: '11:45 AM'\r\n        }, {\r\n            id: '11.00PM',\r\n            time_name: '11:00 PM'\r\n        }, {\r\n            id: '11.15PM',\r\n            time_name: '11:15 PM'\r\n        }, {\r\n            id: '11.30PM',\r\n            time_name: '11:30 PM'\r\n        }, {\r\n            id: '11.45PM',\r\n            time_name: '11:45 PM'\r\n        });\r\n        var dateStr = new Date();\r\n        this.month1 = dateStr.getUTCMonth() + 1;\r\n        if (this.getlength(this.month1) == 1) {\r\n            this.month1 = '0' + this.month1;\r\n        }\r\n        else {\r\n            this.month1 = this.month1;\r\n        }\r\n        this.date1 = dateStr.getDate();\r\n        if (this.getlength(this.date1) == 1) {\r\n            this.date1 = '0' + this.date1;\r\n        }\r\n        else {\r\n            this.date1 = this.date1;\r\n        }\r\n        this.event_date = dateStr.getFullYear() + \"-\" + this.month1 + \"-\" + this.date1;\r\n        console.log(\"Bottom UTC Format Current Date:\" + this.event_date);\r\n    }\r\n    AddcalendarPage.prototype.getlength = function (number) {\r\n        return number.toString().length;\r\n    };\r\n    AddcalendarPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad  AddcalendarPage');\r\n    };\r\n    AddcalendarPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.gethashtag = hashtag;\r\n    };\r\n    AddcalendarPage.prototype.getType = function (type) {\r\n        console.log(\"Event Type:\" + type);\r\n        if (type == \"Service\") {\r\n            this.unitfield = true;\r\n            this.disunit = true;\r\n        }\r\n        else {\r\n            this.unitfield = false;\r\n            this.disunit = false;\r\n        }\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddcalendarPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        //this.event_date=localStorage.getItem(\"sdate\");\r\n        this.getUnitListData();\r\n        this.resetFields();\r\n        if (this.NP.get(\"item\")) {\r\n            console.log(this.NP.get(\"type\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"item\"));\r\n            this.pageTitle = 'Edit Calendar';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            if (this.NP.get(\"type\").toLowerCase() == 'event') {\r\n                this.responseResultType.push({\r\n                    id: '1',\r\n                    type_name: 'Event',\r\n                });\r\n            }\r\n            else {\r\n                this.responseResultType.push({\r\n                    id: '1',\r\n                    type_name: 'Service',\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.responseResultType.push({\r\n                id: '1',\r\n                type_name: 'Service',\r\n            }, {\r\n                id: '2',\r\n                type_name: 'Event'\r\n            });\r\n            this.isEdited = false;\r\n            this.pageTitle = 'Add Calendar';\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddcalendarPage.prototype.selectEntry = function (item) {\r\n        console.log(\"Edit Select Entry Response\" + JSON.stringify(item));\r\n        this.event_subject = item.event_title;\r\n        console.log(\"Event Date:\" + item.event_date);\r\n        console.log(\"Event Date Substr:\" + item.event_date.substr(0, 10));\r\n        /*console.log(\"Event Date Split:\" + item.event_date.split(\"-\"));\r\n        console.log(\"Event Date Split:\" + item.event_date.split(\"-\"));*/\r\n        //this.event_date = item.event_date;\r\n        this.event_date = item.event_date.substr(0, 10);\r\n        this.event_time = item.event_time;\r\n        this.event_location = item.event_location;\r\n        this.event_notes = item.event_remark;\r\n        if (item.event_type == 'S') {\r\n            this.type_name = \"Service\";\r\n            this.event_type = 'Service';\r\n        }\r\n        if (item.event_type == 'E') {\r\n            this.type_name = \"Event\";\r\n            this.event_type = 'Event';\r\n        }\r\n        ///this.event_subject = item.event_subject;\r\n        this.event_unitid = item.event_unitid;\r\n        this.recordID = item.event_id;\r\n        this.getType(this.type_name);\r\n        if (this.event_unitid > 0) {\r\n            this.getProjectLocation(this.event_unitid);\r\n        }\r\n        this.address1get(this.event_notes);\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddcalendarPage.prototype.createEntry = function (type_name, event_project, event_subject, event_unitid, event_time, event_location, service_remark, createdby) {\r\n        var _this = this;\r\n        //let updatedby = createdby;\r\n        this.isSubmitted = true;\r\n        service_remark = localStorage.getItem(\"atMentionResult\");\r\n        var field;\r\n        if (type_name == 'Service') {\r\n            field = \"&event_title=\" + event_subject;\r\n        }\r\n        else {\r\n            field = \"&event_title=\" + event_subject;\r\n        }\r\n        var body = \"is_mobile=1&event_type=\"\r\n            + type_name + field + \"&event_date=\" + this.event_date + \"&event_time=\" + event_time + \"&service_unitid=\" + event_unitid + \"&event_location=\" + event_location + \"&service_remark=\" + service_remark + \"&event_added_by=\" + createdby + \"&serviced_by=\" + createdby, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/storeevent\";\r\n        console.log(url + \"?\" + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].result > 0) {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    localStorage.setItem(\"atMentionResult\", '');\r\n                    _this.nav.setRoot(CalendarPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    //http://denyoappv2.stridecdev.com/calendar/update?is_mobile=1&event_type=Event&event_title=sfd&event_location=london&event_date=2017-07-07&event_time=6:00 AM&ses_login_id=2&event_remark=@vignesh&id=1\r\n    AddcalendarPage.prototype.updateEntry = function (type_name, event_project, event_subject, event_unitid, event_time, event_location, service_remark, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            service_remark = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        var field;\r\n        if (type_name == 'Service') {\r\n            field = \"&event_title=\" + event_subject;\r\n        }\r\n        else {\r\n            field = \"&event_title=\" + event_subject;\r\n        }\r\n        var body = \"is_mobile=1&event_type=\"\r\n            + type_name + field + \"&event_date=\" + this.event_date + \"&event_time=\" + event_time + \"&service_unitid=\" + event_unitid + \"&event_location=\" + event_location + \"&event_remark=\" + service_remark + \"&ses_login_id=\" + createdby + \"&id=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/calendar/update\";\r\n        console.log(url + \"?\" + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(data.json());\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].result > 0) {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    localStorage.setItem(\"atMentionResult\", '');\r\n                }\r\n                else {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    _this.nav.setRoot(CalendarPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddcalendarPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        //http://denyoappv2.stridecdev.com/companygroup/8/1/delete\r\n        var type_name = this.form.controls[\"type_name\"].value, \r\n        //body: string = \"key=delete&recordID=\" + this.recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/\" + this.recordID + \"/1/delete\";\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + type_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddcalendarPage.prototype.saveEntry = function () {\r\n        var type_name = this.form.controls[\"event_type\"].value, event_project = this.form.controls[\"event_project\"].value, event_subject = this.form.controls[\"event_subject\"].value, event_unitid = this.form.controls[\"event_unitid\"].value, \r\n        // event_title: string = this.form.controls[\"event_title\"].value,\r\n        event_time = this.form.controls[\"event_time\"].value, event_location = this.form.controls[\"event_location\"].value, service_remark = this.form.controls[\"event_notes\"].value;\r\n        if (this.isEdited) {\r\n            this.updateEntry(type_name, event_project, event_subject, event_unitid, event_time, event_location, service_remark, this.userId);\r\n        }\r\n        else {\r\n            this.createEntry(type_name, event_project, event_subject, event_unitid, event_time, event_location, service_remark, this.userId);\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddcalendarPage.prototype.resetFields = function () {\r\n        this.type_name = \"\";\r\n        this.event_project = \"\";\r\n        this.event_subject = \"\";\r\n        this.event_unitid = \"\";\r\n    };\r\n    AddcalendarPage.prototype.getUnitListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/units?is_mobile=1&startindex=0&results=300&sort=unit_id&dir=asc&company_id=\" + this.companyId + \"&loginid=\" + this.userId;\r\n        var res;\r\n        console.log(\"URL\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            _this.responseResultCompany = res.units;\r\n        });\r\n    };\r\n    AddcalendarPage.prototype.getProjectLocation = function (unitid) {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/\" + unitid + \"/1/getunitdata\";\r\n        var res;\r\n        console.log(\"URL\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"Project Name:\" + res.unitdata[0].projectname);\r\n            console.log(\"Project Location:\" + res.unitdata[0].location);\r\n            _this.event_project = res.unitdata[0].projectname;\r\n            _this.event_location = res.unitdata[0].location;\r\n            //this.responseResultCompany = res.companies;\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddcalendarPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddcalendarPage.prototype.showDatePicker = function () {\r\n        var _this = this;\r\n        this.datePicker.show({\r\n            date: new Date(),\r\n            mode: 'date',\r\n            androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK\r\n        }).then(function (date) {\r\n            _this.event_date = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n            console.log('Got date: ', date);\r\n        }, function (err) { return console.log('Error occurred while getting date: ', err); });\r\n    };\r\n    AddcalendarPage.prototype.previous = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddcalendarPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddcalendarPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddcalendarPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddcalendarPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddcalendarPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddcalendarPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddcalendarPage;\r\n}());\r\nAddcalendarPage = __decorate([\r\n    Component({\r\n        selector: 'page-addcalendar',\r\n        templateUrl: 'addcalendar.html',\r\n        providers: [DatePicker]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof Http !== \"undefined\" && Http) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _e || Object, typeof (_f = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _f || Object])\r\n], AddcalendarPage);\r\nexport { AddcalendarPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=addcalendar.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addcalendar/addcalendar.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\r\nimport { Events, NavController, AlertController, ToastController } from 'ionic-angular';\r\nimport * as moment from 'moment';\r\n//import {DragulaModule , DragulaService} from \"../../../node_modules/ng2-dragula/ng2-dragula\"\r\nimport { DragulaService } from \"ng2-dragula/ng2-dragula\";\r\nimport * as shortid from 'shortid';\r\nimport { Http, Headers, RequestOptions } from \"@angular/http\";\r\nimport { AlarmdetailsPage } from '../../pages/alarmdetails/alarmdetails';\r\nimport { CalendardetailPage } from '../../pages/calendardetail/calendardetail';\r\nimport { AddcalendarPage } from '../../pages/addcalendar/addcalendar';\r\n/*@Component({\r\n  templateUrl: 'build/components/calendar/calendar.component.html',\r\n  selector: 'ionic2-calendar',\r\n  //styleUrls: ['build/components/calendar.component.css'], wait for: https://github.com/driftyco/ionic-cli/issues/1196\r\n  directives: [Dragula],\r\n  viewProviders: [DragulaService]\r\n})*/\r\nvar CalendarComponent = (function () {\r\n    function CalendarComponent(dragulaService, navCtrl, calendarElement, events, http, toastCtrl, alertCtrl) {\r\n        var _this = this;\r\n        this.dragulaService = dragulaService;\r\n        this.navCtrl = navCtrl;\r\n        this.calendarElement = calendarElement;\r\n        this.events = events;\r\n        this.http = http;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.pet = \"ALL\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.eventIdentify = [];\r\n        this.serviceIdentify = [];\r\n        this.alarmIdentity = [];\r\n        this.highlighteddata = [];\r\n        this.months = moment.months();\r\n        this.weekDays = moment.weekdays();\r\n        this.draggingItem = null;\r\n        this.afterEventMove = new EventEmitter();\r\n        this.onEventTap = new EventEmitter();\r\n        this.onEventDoubleTap = new EventEmitter();\r\n        this.onEventPress = new EventEmitter();\r\n        this.updateMainView = function () {\r\n            if (this.ctrl.viewMode === 'month') {\r\n                this.makeDaysInMonthViewList();\r\n            }\r\n            else if (this.ctrl.viewMode === 'week') {\r\n                this.makeDaysInWeekViewList();\r\n            }\r\n        };\r\n        this.plusMonth = function (amount) {\r\n            this.ctrl.dateSelection.add(amount, 'month');\r\n            this.ctrl.selectedMonth = this.monthNum2monthStr(this.ctrl.dateSelection.month());\r\n            console.log(\"Plus Month Function calling...\" + JSON.stringify(this.ctrl));\r\n            var currentDate = this.ctrl.selectedYear + \"-\" + moment().month() + \"-\" + this.ctrl.selectedDay;\r\n            this.monthTitle = this.ctrl.selectedMonth;\r\n            this.yearTitle = this.ctrl.selectedYear;\r\n            var monthstr = this.monthTitle + \"-\" + this.yearTitle;\r\n            this.defaultDevent(currentDate, monthstr);\r\n            this.updateMainView();\r\n        };\r\n        this.tmpTapCount = 0;\r\n        this.stopPressPropagation = false; // <-- Fix to stop mothDayGrid press event to\r\n        var currentDate = new Date();\r\n        this.currentDate = currentDate.getDate();\r\n        this.currentMonth = currentDate.getMonth() + 1;\r\n        if (this.getlength(this.currentMonth) == 1) {\r\n            this.currentMonth = '0' + this.currentMonth;\r\n        }\r\n        else {\r\n            this.currentMonth = this.currentMonth;\r\n        }\r\n        this.currentYear = currentDate.getFullYear();\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.EVENTVIEWACCESS = localStorage.getItem(\"CALENDAR_EVENTS_VIEW\");\r\n        this.EVENTCREATEACCESS = localStorage.getItem(\"CALENDAR_EVENTS_CREATE\");\r\n        this.EVENTEDITACCESS = localStorage.getItem(\"CALENDAR_EVENTS_EDIT\");\r\n        this.EVENTDELETEACCESS = localStorage.getItem(\"CALENDAR_EVENTS_DELETE\");\r\n        this.ALARMVIEWACCESS = localStorage.getItem(\"UNITS_ALARM_VIEW\");\r\n        this.ALARMDELETEACCESS = localStorage.getItem(\"UNITS_ALARM_DELETE\");\r\n        this.SERVICEVIEWACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_VIEW\");\r\n        this.SERVICECREATEACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_CREATE\");\r\n        this.SERVICEEDITACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_EDIT\");\r\n        this.SERVICEDELETEACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_DELETE\");\r\n        dragulaService.drag.subscribe(function (value) {\r\n            console.log(\"drag: \" + value[0]);\r\n            _this.onDrag(value.slice(1));\r\n        });\r\n        dragulaService.drop.subscribe(function (value) {\r\n            console.log(\"drop: \" + value[0]);\r\n            _this.onDrop(value.slice(1));\r\n        });\r\n        //    dragulaService.dropModel.subscribe((value) => {\r\n        //      console.log(`dropModel: ${value[0]}`);\r\n        //      this.onDropModel(value.slice(1));\r\n        //    });\r\n        //this.defaultDevent('2017-08-22');\r\n    }\r\n    // In Dragula documentation it says dropModel for Angular2 also gives the\r\n    // model on the controller, not just the HTML elements, but I see no\r\n    // difference to onDrop function arguments. TRY AGAIN LATER!!\r\n    //  private onDropModel(args) {\r\n    //    let [bagName, el, target] = args;\r\n    //    console.log('OnDropModel', bagName, el, target);\r\n    //  }\r\n    CalendarComponent.prototype.getlength = function (number) {\r\n        return number.toString().length;\r\n    };\r\n    CalendarComponent.prototype.onDrag = function (args) {\r\n        var e = args[0], el = args[1];\r\n        console.log('dragging', e, el);\r\n        this.itemCameFromBag = el;\r\n        this.draggingItem = e;\r\n        this.draggingItemId = e.id;\r\n        if (e.className.indexOf('is-continued') > 0 || e.className.indexOf('does-continue') > 0) {\r\n            var found = false, idx = 0, currentClassName;\r\n            while (!found && idx < e.classList.length) {\r\n                currentClassName = e.classList[idx++];\r\n                if (currentClassName.startsWith('multi-span-')) {\r\n                    this.activeDragGroup = currentClassName;\r\n                    //document.getElementsByClassName(currentClassName);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CalendarComponent.prototype.ionViewWillEnter = function () {\r\n        console.log(\"Ionview will enter function calling....\");\r\n        this.calEvents = [];\r\n    };\r\n    CalendarComponent.prototype.onDrop = function (args) {\r\n        var _this = this;\r\n        var e = args[0], el = args[1];\r\n        var droppedOnGridItem = el.parentElement.parentElement;\r\n        var droppedOnGridItemIdx = droppedOnGridItem.dataset.idx;\r\n        this.activeDragGroup = '';\r\n        // Move events date and Output event\r\n        // FOR isExtension events, move date moved by on all dates and move in grids!\r\n        var movedElement, daysMoved, isExtensionOffsetToStartDate = 0;\r\n        this.ctrl.monthView.days[droppedOnGridItemIdx].events.some(function (d) {\r\n            if (d.id === _this.draggingItemId) {\r\n                movedElement = d;\r\n                if (movedElement.isExtension) {\r\n                    var cameFromGridIdx = _this.itemCameFromBag.parentElement.parentElement.dataset.idx;\r\n                    console.log('moved element date', movedElement.startDate, 'grid item it came from date', _this.ctrl.monthView.days[cameFromGridIdx].date, '\\n\\ndays difference', _this.ctrl.monthView.days[cameFromGridIdx].date.diff(moment(movedElement.startDate).startOf('day'), 'days'));\r\n                    isExtensionOffsetToStartDate = _this.ctrl.monthView.days[cameFromGridIdx].date.diff(moment(movedElement.startDate).startOf('day'), 'days');\r\n                }\r\n                daysMoved = _this.ctrl.monthView.days[droppedOnGridItemIdx].date.diff(moment(d.startDate).startOf('day'), 'days');\r\n                d.startDate = _this.moveDateByDays(d.startDate, daysMoved - isExtensionOffsetToStartDate);\r\n                d.endDate = _this.moveDateByDays(d.endDate, daysMoved - isExtensionOffsetToStartDate);\r\n                // Now we need to move it into the correct order of events:\r\n                var movedElementCalEventsIdx = _this.calEvents.indexOf(movedElement);\r\n                // Splice it:\r\n                _this.calEvents.splice(movedElementCalEventsIdx, 1);\r\n                // Reinsert it at the correct position:\r\n                _this.insertDate(movedElement);\r\n                console.log('Changed d.startDate to', d.startDate, 'and end date', d.endDate, '{IDX}', movedElementCalEventsIdx);\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        });\r\n        if (movedElement.isExtension) {\r\n            // Remove all multi-span copies of moved item:\r\n            movedElement.extensionMonthViewDayIdxs.forEach(function (d) {\r\n                var indexOfExtendedItem = _this.ctrl.monthView.days[d].events.indexOf(movedElement);\r\n                console.log('index of moved element', indexOfExtendedItem);\r\n                if (indexOfExtendedItem >= 0) {\r\n                    _this.ctrl.monthView.days[d].events.splice(indexOfExtendedItem, 1);\r\n                }\r\n            });\r\n            // Now find first, create event there and extend: (SHOULD CHECK IF THERE IS OVERFLOW OR UNDERFLOW AFTER ADDING DAYS MOVED!!)\r\n            console.log('daysMoves', daysMoved, movedElement.extensionMonthViewDayIdxs[0]);\r\n            movedElement.isExtension = false;\r\n            var firstDayMovesTo = movedElement.extensionMonthViewDayIdxs[0] + (daysMoved - isExtensionOffsetToStartDate);\r\n            console.log('isExtensionOffsetToStartDate', isExtensionOffsetToStartDate);\r\n            // Only add the event if it is not the first one. If it is the fisrt,\r\n            // dragula will already add it, but after our code has finished, so we\r\n            // would have our element twice:\r\n            if (isExtensionOffsetToStartDate > 0) {\r\n                this.ctrl.monthView.days[Math.max(0, firstDayMovesTo)].events.push(movedElement);\r\n            }\r\n            // Make new multi-span copies for moved event:\r\n            this.makeExtensionEvents(this.ctrl.monthView.days[Math.max(0, firstDayMovesTo)], firstDayMovesTo);\r\n        }\r\n        // Emit event:\r\n        this.emitEventMoved({\r\n            element: movedElement,\r\n            // Need to change this to firstItemDate if multi-span is moved\r\n            movedToDate: this.ctrl.monthView.days[droppedOnGridItemIdx].date.toDate()\r\n        });\r\n        this.draggingItem = null;\r\n    };\r\n    /**\r\n     * Fires when a calendar event was moved on the calendar.\r\n     * The object this event fires contains the calendar event that moved (with\r\n     * the start and end date already adjusted and the a date object for the day\r\n     * the calendar event has moved to.\r\n     */\r\n    CalendarComponent.prototype.emitEventMoved = function (ev) {\r\n        this.afterEventMove.emit(ev);\r\n    };\r\n    CalendarComponent.prototype.moveDateByDays = function (date, days) {\r\n        var m = moment(date);\r\n        m.add(days, 'days');\r\n        return m.toDate();\r\n    };\r\n    CalendarComponent.prototype.ngOnInit = function () {\r\n        // this.defaultDevent('2017-08-22');\r\n        this.addMissingIds();\r\n        this.ctrl = {\r\n            viewMode: 'month',\r\n            dateSelection: moment(),\r\n            selectedYear: moment().year(),\r\n            selectedMonth: this.months[moment().month()],\r\n            selectedDay: moment().date(),\r\n            monthView: {\r\n                days: [],\r\n                numberOfDaysThisMonth: 0,\r\n                firstDayOfMonth: null,\r\n                lastDayOfMonth: null,\r\n                selectedDate: null\r\n            },\r\n            weekView: {\r\n                days: [],\r\n                firstDayOfWeek: null,\r\n                lastDayOfWeek: null,\r\n                selectedDate: null\r\n            }\r\n        };\r\n        console.log(\"ngOnInit\" + JSON.stringify(this.ctrl));\r\n        var currentDate = this.ctrl.selectedYear + \"-\" + moment().month() + \"-\" + this.ctrl.selectedDay;\r\n        this.monthTitle = this.ctrl.selectedMonth;\r\n        this.yearTitle = this.ctrl.selectedYear;\r\n        var monthstr = this.monthTitle + \"-\" + this.yearTitle;\r\n        this.defaultDevent(currentDate, monthstr);\r\n        this.makeDaysInMonthViewList();\r\n    };\r\n    CalendarComponent.prototype.ngAfterViewInit = function () {\r\n        // This returns 0 clientWidth for some reason at first??? That's why wrapped\r\n        // in timeout, UPDATE: only seems a problem when in phone emulation mode in chrome!!\r\n        //    setTimeout(() => {\r\n        this.updateSize();\r\n        //    }, 1500);\r\n    };\r\n    CalendarComponent.prototype.addMissingIds = function () {\r\n        this.calEvents.forEach(function (d) {\r\n            if (!d.id) {\r\n                d.id = shortid.generate();\r\n            }\r\n        });\r\n    };\r\n    CalendarComponent.prototype.selectDate = function (date) {\r\n        this.events.publish('calendar-event:month-grid-cell-tap', date);\r\n        this.ctrl.dateSelection = date.date;\r\n        this.ctrl.monthView.selectedDate = date;\r\n    };\r\n    CalendarComponent.prototype.monthNum2monthStr = function (monthNum) {\r\n        return this.months[monthNum];\r\n    };\r\n    ;\r\n    CalendarComponent.prototype.monthStr2monthNum = function (monthStr) {\r\n        return this.months.indexOf(monthStr);\r\n        //return this.months.indexOf([monthStr]);\r\n    };\r\n    CalendarComponent.prototype.setDateSelectionMonth = function ($event) {\r\n        console.log('Calling setDateSelectionMonth');\r\n        console.log('change A:', $event);\r\n        console.log('change B:', JSON.stringify($event));\r\n        this.makeDaysInMonthViewList();\r\n        console.log('setDateSelectionMonth function end');\r\n    };\r\n    CalendarComponent.prototype.makeDaysInMonthViewList = function () {\r\n        var _this = this;\r\n        console.log(\"calling makeDaysInMonthViewList function\");\r\n        // List is 6x7, first need to find which day of the week the first is and then prepend from previous:\r\n        // Must fill 42 cells, have n cells in this month...\r\n        console.log(\"A\");\r\n        this.ctrl.monthView.numberOfDaysThisMonth = this.ctrl.dateSelection.daysInMonth();\r\n        this.ctrl.monthView.firstDayOfMonth = moment(this.ctrl.dateSelection).startOf('month');\r\n        this.ctrl.monthView.lastDayOfMonth = moment(this.ctrl.dateSelection).endOf('month');\r\n        var firstDayOfMonthAsWeekday = this.ctrl.monthView.firstDayOfMonth.isoWeekday();\r\n        console.log(\"B\");\r\n        console.log(\"this.ctrl.dateSelection.daysInMonth()\" + this.ctrl.dateSelection.daysInMonth());\r\n        console.log(\"this.ctrl.monthView.firstDayOfMonth\" + this.ctrl.monthView.firstDayOfMonth);\r\n        console.log(\"this.ctrl.monthView.lastDayOfMonth \" + this.ctrl.monthView.lastDayOfMonth);\r\n        console.log(\"firstDayOfMonthAsWeekday \" + firstDayOfMonthAsWeekday);\r\n        console.log(\"C\");\r\n        //var lastDayOfMonthAsWeekday = this.ctrl.monthView.lastDayOfMonth.isoWeekday();\r\n        var firstDayInViewOfPreviousMonth = moment(this.ctrl.monthView.firstDayOfMonth).subtract(firstDayOfMonthAsWeekday - 1, 'days');\r\n        //    console.log('lastDayOfMonthAsWeekday', lastDayOfMonthAsWeekday, 'firstDayInViewOfPreviousMonth', firstDayInViewOfPreviousMonth);\r\n        // Now we have the first and last dates of the grid view, let's make the grid:\r\n        var currentDay = moment(firstDayInViewOfPreviousMonth);\r\n        var days = [];\r\n        var ctrlObj = {\r\n            idx: 0,\r\n            reachedEventListEnd: false,\r\n            pastMaxDate: false,\r\n            maxDate: moment(firstDayInViewOfPreviousMonth).add(42, 'days')\r\n        };\r\n        this.ctrl.monthView.days = [];\r\n        for (var i = 0; i < 42; i++) {\r\n            ctrlObj.currentDay = {\r\n                date: moment(currentDay),\r\n                events: []\r\n            };\r\n            if (!(ctrlObj.reachedEventListEnd || ctrlObj.pastMaxDate)) {\r\n                this.findNextEvent(ctrlObj);\r\n            }\r\n            this.ctrl.monthView.days.push(ctrlObj.currentDay);\r\n            currentDay.add(1, 'days');\r\n        }\r\n        // ALSO TO-DO: - Day, week and year view\r\n        //             - Styles and classes for item, icon and text\r\n        this.ctrl.monthView.days.forEach(function (d, idx) {\r\n            _this.makeExtensionEvents(d, idx);\r\n        });\r\n    };\r\n    CalendarComponent.prototype.eventFinishesOnDifferentDay = function (calEvent) {\r\n        return !moment(calEvent.startDate).isSame(calEvent.endDate, 'day');\r\n    };\r\n    CalendarComponent.prototype.insertDate = function (elem) {\r\n        var insertAt = null;\r\n        this.calEvents.some(function (ce, idx) {\r\n            console.log(ce.startDate.getTime(), elem.startDate.getTime());\r\n            if (ce.startDate.getTime() > elem.startDate.getTime()) {\r\n                insertAt = idx;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        console.log('Inser at', insertAt, this.calEvents);\r\n        if (insertAt !== null) {\r\n            this.calEvents.splice(insertAt, 0, elem);\r\n        }\r\n        else {\r\n            this.calEvents.push(elem);\r\n        }\r\n    };\r\n    CalendarComponent.prototype.makeExtensionEvents = function (d, idx) {\r\n        var _this = this;\r\n        if (d.events.length > 0) {\r\n            d.events.forEach(function (dd) {\r\n                if (dd.isExtension) {\r\n                    return;\r\n                }\r\n                dd.isExtension = _this.eventFinishesOnDifferentDay(dd);\r\n                dd.extensionMonthViewDayIdxs = [idx];\r\n                var startDateEndOfDay = moment(dd.startDate).endOf('day'), endDateEndOfDay = moment(dd.endDate).endOf('day'), newEvent, daysPlus = 0;\r\n                while (startDateEndOfDay.isBefore(endDateEndOfDay) && startDateEndOfDay.isBefore(_this.ctrl.monthView.days[_this.ctrl.monthView.days.length - 1].date)) {\r\n                    daysPlus++;\r\n                    dd.extensionMonthViewDayIdxs.push(idx + daysPlus);\r\n                    if (_this.ctrl.monthView.days[idx + daysPlus].events.indexOf(dd) < 0) {\r\n                        _this.ctrl.monthView.days[idx + daysPlus].events.push(dd);\r\n                    }\r\n                    startDateEndOfDay.add(1, 'days');\r\n                }\r\n                console.log('dd.extensionMonthViewDayIdxs', dd.extensionMonthViewDayIdxs);\r\n            });\r\n        }\r\n    };\r\n    CalendarComponent.prototype.findNextEvent = function (ctrlObj) {\r\n        if (typeof this.calEvents === 'undefined') {\r\n            return;\r\n        }\r\n        while (true) {\r\n            if (ctrlObj.idx >= this.calEvents.length) {\r\n                ctrlObj.reachedEventListEnd = true;\r\n                return;\r\n            }\r\n            var stDate = this.calEvents[ctrlObj.idx].startDate.getTime();\r\n            if (stDate > ctrlObj.maxDate.valueOf()) {\r\n                ctrlObj.pastMaxDate = true;\r\n                return;\r\n            }\r\n            if (ctrlObj.currentDay.date.valueOf() > stDate) {\r\n                ctrlObj.idx = ctrlObj.idx + 1;\r\n            }\r\n            else if (ctrlObj.currentDay.date.valueOf() < stDate) {\r\n                if (stDate > moment(ctrlObj.currentDay.date).add(1, 'days').valueOf()) {\r\n                    return;\r\n                }\r\n                // Reset isExtension, which could have been added previously:\r\n                this.calEvents[ctrlObj.idx].isExtension = false;\r\n                this.calEvents[ctrlObj.idx].extensionMonthViewDayIdxs = [];\r\n                ctrlObj.currentDay.events.push(this.calEvents[ctrlObj.idx]);\r\n                ctrlObj.idx = ctrlObj.idx + 1;\r\n            }\r\n        }\r\n    };\r\n    CalendarComponent.prototype.updateSize = function () {\r\n        var wkds;\r\n        //console.log('this.calendarElement.nativeElement.clientWidth', this.calendarElement.nativeElement.clientWidth);\r\n        if (this.calendarElement.nativeElement.clientWidth < 400) {\r\n            wkds = moment.weekdaysMin();\r\n            if (this.sizeClass !== 'extra-small') {\r\n                this.sizeClass = 'extra-small';\r\n                this.sizeClassChanged = true;\r\n            }\r\n            else {\r\n                this.sizeClassChanged = false;\r\n            }\r\n        }\r\n        else if (this.calendarElement.nativeElement.clientWidth < 600) {\r\n            wkds = moment.weekdaysShort();\r\n            if (this.sizeClass !== 'small') {\r\n                this.sizeClass = 'small';\r\n                this.sizeClassChanged = true;\r\n            }\r\n            else {\r\n                this.sizeClassChanged = false;\r\n            }\r\n        }\r\n        else {\r\n            wkds = moment.weekdays();\r\n            if (this.sizeClass !== '') {\r\n                this.sizeClass = '';\r\n                this.sizeClassChanged = true;\r\n            }\r\n            else {\r\n                this.sizeClassChanged = false;\r\n            }\r\n        }\r\n        if (this.sizeClassChanged) {\r\n            this.weekDays = wkds;\r\n        }\r\n    };\r\n    CalendarComponent.prototype.eventOnClick = function (item, $event) {\r\n        var _this = this;\r\n        $event.srcEvent.stopPropagation(); // <-- Doesn't seem to work\r\n        this.tmpTapCount = $event.tapCount;\r\n        setTimeout(function () {\r\n            if (_this.tmpTapCount === 1) {\r\n                if (_this.draggingItem === null) {\r\n                    _this.events.publish('calendar-event:item-tap', item);\r\n                    if (typeof item.ontap === 'function') {\r\n                        item.ontap(item);\r\n                    }\r\n                    else if (_this.onEventTap) {\r\n                        _this.onEventTap.emit(item);\r\n                    }\r\n                }\r\n            }\r\n            else if (_this.tmpTapCount === 2) {\r\n                _this.events.publish('calendar-event:item-doubletap', item);\r\n                if (typeof item.ondoubletap === 'function') {\r\n                    item.ondoubletap(item);\r\n                }\r\n                else if (_this.onEventDoubleTap) {\r\n                    _this.onEventDoubleTap.emit(item);\r\n                }\r\n            }\r\n            _this.tmpTapCount = 0;\r\n        }, 300);\r\n    };\r\n    //     get triggered too.\r\n    CalendarComponent.prototype.eventOnPress = function (item, $event) {\r\n        var _this = this;\r\n        $event.srcEvent.stopImmediatePropagation();\r\n        $event.srcEvent.stopPropagation();\r\n        this.stopPressPropagation = true;\r\n        setTimeout(function () {\r\n            _this.stopPressPropagation = false;\r\n        }, 100);\r\n        console.log('STOPPED PROPAGATION');\r\n        if (this.draggingItem === null) {\r\n            this.events.publish('calendar-event:item-press', item);\r\n            if (typeof item.onpress === 'function') {\r\n                item.onpress(item);\r\n            }\r\n            else if (this.onEventPress) {\r\n                this.onEventPress.emit(item);\r\n            }\r\n        }\r\n    };\r\n    CalendarComponent.prototype.monthDayGridCellOnPress = function (item, $event) {\r\n        $event.srcEvent.stopPropagation(); // <-- Doesn't seem to work\r\n        if (this.draggingItem === null && this.tmpTapCount === 0 && !this.stopPressPropagation) {\r\n            this.events.publish('calendar-event:month-grid-cell-press - calendar.components', item);\r\n        }\r\n    };\r\n    CalendarComponent.prototype.addCalendarEvent = function (calEvent) {\r\n        console.log('adding event', calEvent);\r\n        if (typeof calEvent.id !== 'string') {\r\n            calEvent.id = shortid.generate();\r\n        }\r\n        this.insertDate(calEvent);\r\n        this.ctrl.monthView.days.some(function (d) {\r\n            if (d.date.isSame(calEvent.startDate, 'day')) {\r\n                d.events.push(calEvent);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    CalendarComponent.prototype.defaultDevent = function (currentdate, monthstr) {\r\n        var _this = this;\r\n        this.highlighteddata = [];\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/calendar? is_mobile=1&loginid=\" + this.userId + \"&date=\" + currentdate + \"&month=\" + monthstr + \"&companyid=\" + this.companyId;\r\n        console.log(\"All Events calling API URL\" + url);\r\n        // console.log(url);\r\n        var colors = ['primary', 'warning', 'danger', 'success'];\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            _this.eventIdentify = res.allevents;\r\n            var highlightdots = res.highlightdots;\r\n            if (res.highlightdots.length > 0) {\r\n                for (var hlgts in res.highlightdots) {\r\n                    var splitdatehypen = res.highlightdots[hlgts].date.split(\"-\");\r\n                    _this.highlighteddata.push({\r\n                        date: res.highlightdots[hlgts].date,\r\n                        class: res.highlightdots[hlgts].class,\r\n                        dte: parseInt(splitdatehypen[2]),\r\n                        mne: parseInt(splitdatehypen[1]),\r\n                        yrd: splitdatehypen[0],\r\n                        cdate: _this.currentYear + \"-\" + _this.currentMonth + \"-\" + _this.currentDate\r\n                    });\r\n                }\r\n                console.log(\"Highlight data:\" + JSON.stringify(_this.highlighteddata));\r\n            }\r\n            /* this.highlightdots = [\r\n               { \"date\": \"2017-08-06\", \"class\": \"alarm_service\" },\r\n               { \"date\": \"2017-08-07\", \"class\": \"alarm_service\" },\r\n               { \"date\": \"2017-08-08\", \"class\": \"alarm_service\" },\r\n               { \"date\": \"2017-08-09\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-10\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-11\", \"class\": \"alarm_service_event\" },\r\n               { \"date\": \"2017-08-12\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-13\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-14\", \"class\": \"alarm_service\" },\r\n               { \"date\": \"2017-08-15\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-16\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-17\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-18\", \"class\": \"alarm_service\" },\r\n               { \"date\": \"2017-08-20\", \"class\": \"service\" },\r\n               { \"date\": \"2017-08-21\", \"class\": \"alarm_service\" },\r\n               { \"date\": \"2017-08-21\", \"class\": \"service\" },\r\n             ];*/\r\n            var eventcountindication;\r\n            for (var i = 0; i < _this.eventIdentify.length; i += 1) {\r\n                console.log('i increment:' + i);\r\n                if (i == 1) {\r\n                    eventcountindication++;\r\n                }\r\n                var startTime;\r\n                var endTime;\r\n                var event_date_array = _this.eventIdentify[i]['event_date'].split('-');\r\n                var yearstr = event_date_array[0];\r\n                var monthstr = parseInt(event_date_array[1], 10) - 1;\r\n                var datestr = parseInt(event_date_array[2], 10);\r\n                // var startMinute = Math.floor(Math.random() * 24 * 60);\r\n                // var endMinute = Math.floor(Math.random() * 1) + startMinute;\r\n                var startMinute = 20;\r\n                var endMinute = 10 + startMinute;\r\n                startTime = new Date(yearstr, monthstr, datestr, 10, 0 + startMinute);\r\n                endTime = new Date(yearstr, monthstr, datestr, 10, 0 + endMinute);\r\n                //console.log(\"TEST CALENDAR-1\"+startTime+\"//\"+endTime);\r\n                // startTime = new Date(event_date_array[0], event_date_array[1], event_date_array[2], 0, 0,0);\r\n                // endTime = new Date(event_date_array[0], event_date_array[1], event_date_array[2], 0, 0,0);\r\n                /*\r\n                data: {},\r\n                      icon: 'alarm',\r\n                      class: 'class',\r\n                      iconStyle: { color: 'green' },\r\n                      style: { color: 'red' },\r\n                      name: 'Item 1',\r\n                      type: 'event',\r\n                      startDate: new Date(),\r\n                      endDate: new Date(this.now + this.millisInHour * 1),\r\n                      allDay: false,\r\n                */\r\n                _this.calEvents.push({\r\n                    data: {},\r\n                    id: _this.eventIdentify[i]['event_id'],\r\n                    event_id: _this.eventIdentify[i]['event_id'],\r\n                    startDate: startTime,\r\n                    endDate: endTime,\r\n                    name: _this.eventIdentify[i]['event_title'],\r\n                    type: 'event',\r\n                    event_type: 'E',\r\n                    allDay: true,\r\n                    icon: 'clock',\r\n                    class: 'event',\r\n                    iconStyle: { color: 'green' },\r\n                    style: { color: 'red' },\r\n                    eventlength: _this.eventIdentify.length,\r\n                    //eventlength: eventcountindication,\r\n                    event_time: _this.eventIdentify[i]['event_time'],\r\n                    event_location: _this.eventIdentify[i]['event_location'],\r\n                    event_remark: _this.eventIdentify[i]['event_remark'],\r\n                    event_addedby_name: _this.eventIdentify[i]['event_addedby_name']\r\n                });\r\n            }\r\n            _this.serviceIdentify = res.allservices;\r\n            var servicecountindication = 0;\r\n            for (var j = 0; j < _this.serviceIdentify.length; j += 1) {\r\n                if (j == 1) {\r\n                    servicecountindication++;\r\n                }\r\n                var startTime;\r\n                var endTime;\r\n                var service_date_array;\r\n                if (_this.serviceIdentify[j]['serviced_datetime'] == '0000-00-00') {\r\n                    service_date_array = _this.serviceIdentify[j]['next_service_date'].split('-');\r\n                }\r\n                else {\r\n                    if (_this.serviceIdentify[j]['serviced_time'] == null) {\r\n                        service_date_array = _this.serviceIdentify[j]['next_service_date'].split('-');\r\n                    }\r\n                    else {\r\n                        service_date_array = _this.serviceIdentify[j]['serviced_datetime'].split('-');\r\n                    }\r\n                }\r\n                var yearstr = service_date_array[0];\r\n                var monthstr = parseInt(service_date_array[1], 10) - 1;\r\n                var datestr = parseInt(service_date_array[2], 10);\r\n                // var startMinute = Math.floor(Math.random() * 24 * 60);\r\n                // var endMinute = Math.floor(Math.random() * 1) + startMinute;\r\n                var startMinute = 20;\r\n                var endMinute = 10 + startMinute;\r\n                startTime = new Date(yearstr, monthstr, datestr, 10, 0 + startMinute);\r\n                endTime = new Date(yearstr, monthstr, datestr, 10, 0 + endMinute);\r\n                _this.calEvents.push({\r\n                    data: {},\r\n                    id: _this.serviceIdentify[j]['service_id'],\r\n                    event_id: _this.serviceIdentify[j]['service_id'],\r\n                    startDate: startTime,\r\n                    endDate: endTime,\r\n                    name: _this.serviceIdentify[j]['service_subject'],\r\n                    type: 'event',\r\n                    allDay: true,\r\n                    icon: 'camera',\r\n                    event_type: 'S',\r\n                    class: 'service',\r\n                    iconStyle: { color: 'green' },\r\n                    style: { color: 'green' },\r\n                    servicelength: _this.serviceIdentify.length,\r\n                    event_time: _this.serviceIdentify[j]['serviced_time'],\r\n                    event_remark: _this.serviceIdentify[j]['service_remark'],\r\n                    event_location: _this.serviceIdentify[j]['service_location'],\r\n                    event_addedby_name: _this.serviceIdentify[j]['serviced_by_name']\r\n                });\r\n            }\r\n            _this.alarmIdentity = res.allalarms;\r\n            var alarmcountindication = 0;\r\n            for (var k = 0; k < _this.alarmIdentity.length; k += 1) {\r\n                if (k == 1) {\r\n                    alarmcountindication++;\r\n                }\r\n                var startTime;\r\n                var endTime;\r\n                var substrdt = _this.alarmIdentity[k]['alarm_received_date']; //.substring(0, 10)'\r\n                console.log(\"DATE FORMAT\" + _this.alarmIdentity[k]['alarm_received_date']);\r\n                console.log(\"Date Substr result\" + substrdt);\r\n                var service_date_array = substrdt.split('-');\r\n                var yearstr = service_date_array[0];\r\n                var monthstr = parseInt(service_date_array[1], 10) - 1;\r\n                var datestr = parseInt(service_date_array[2], 10);\r\n                var startMinute = 20;\r\n                var endMinute = 10 + startMinute;\r\n                startTime = new Date(yearstr, monthstr, datestr, 10, 0 + startMinute);\r\n                endTime = new Date(yearstr, monthstr, datestr, 10, 0 + endMinute);\r\n                _this.calEvents.push({\r\n                    data: {},\r\n                    id: _this.alarmIdentity[k]['alarm_id'],\r\n                    event_id: _this.alarmIdentity[k]['alarm_id'],\r\n                    startDate: startTime,\r\n                    endDate: endTime,\r\n                    name: _this.alarmIdentity[k]['alarm_name'],\r\n                    type: 'event',\r\n                    allDay: true,\r\n                    event_type: 'A',\r\n                    icon: 'alarm',\r\n                    class: 'alarm',\r\n                    iconStyle: { color: 'orange' },\r\n                    style: { color: 'orange' },\r\n                    alarmlength: _this.alarmIdentity.length,\r\n                    event_remark: _this.alarmIdentity[k]['alarm_remark'],\r\n                    event_location: _this.alarmIdentity[k]['alarm_location'],\r\n                    event_addedby_name: _this.alarmIdentity[k]['alarm_assginedby_name']\r\n                });\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n            }\r\n            else {\r\n            }\r\n            _this.totalCountEventDateWise = _this.calEvents.length;\r\n            if (_this.totalCountEventDateWise == 0) {\r\n                _this.noeventtitle = 'There is no events';\r\n            }\r\n            _this.makeDaysInMonthViewList();\r\n            console.log(\"Calendar response:\" + JSON.stringify(_this.calEvents));\r\n        });\r\n    };\r\n    CalendarComponent.prototype.doAdd = function () {\r\n        this.navCtrl.setRoot(AddcalendarPage);\r\n    };\r\n    CalendarComponent.prototype.doCalendarDelete = function (item, action) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + item.event_id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(item.event_id, action);\r\n                        for (var q = 0; q < _this.calEvents.length; q++) {\r\n                            if (_this.calEvents[q] == item) {\r\n                                _this.calEvents.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    CalendarComponent.prototype.doCalendarEdit = function (item, type) {\r\n        this.navCtrl.setRoot(AddcalendarPage, {\r\n            item: item,\r\n            type: type\r\n        });\r\n    };\r\n    CalendarComponent.prototype.doCalendarView = function (event_id) {\r\n        this.navCtrl.setRoot(CalendardetailPage, {\r\n            event_id: event_id\r\n        });\r\n    };\r\n    CalendarComponent.prototype.doAlarmView = function (event_id) {\r\n        this.navCtrl.setRoot(AlarmdetailsPage, {\r\n            record: event_id,\r\n            act: 'Push'\r\n        });\r\n    };\r\n    CalendarComponent.prototype.deleteEntry = function (recordID, deltype) {\r\n        var _this = this;\r\n        var delactionurl;\r\n        if (deltype == 'Event') {\r\n            //http://denyoappv2.stridecdev.com/calendar/1/1/deleteevent\r\n            delactionurl = \"/calendar/\" + recordID + \"/1/deleteevent\";\r\n        }\r\n        else if (deltype == 'Service') {\r\n            //http://denyoappv2.stridecdev.com/calendar/2/1/deleteservice\r\n            delactionurl = \"/calendar/\" + recordID + \"/1/deleteservice\";\r\n        }\r\n        else if (deltype == 'Alarm') {\r\n            // http://denyoappv2.stridecdev.com/calendar/2/1/deletealarm\r\n            delactionurl = \"/calendar/\" + recordID + \"/1/deletealarm\";\r\n        }\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + delactionurl;\r\n        console.log(\"Event Deleted API Url:\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                if (deltype == 'Event') {\r\n                    _this.sendNotification(\"Event was successfully deleted\");\r\n                }\r\n                if (deltype == 'Service') {\r\n                    _this.sendNotification(\"Service was successfully deleted\");\r\n                }\r\n                if (deltype == 'Alarm') {\r\n                    _this.sendNotification(\"Alarm was successfully deleted\");\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    CalendarComponent.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    CalendarComponent.prototype.onTimeSelected = function (year, month, date, ev) {\r\n        var _this = this;\r\n        console.log(year + \"-\" + month + \"-\" + date);\r\n        this.currentCalendarDate = ev;\r\n        this.calendarResultAll = [];\r\n        this.calendarResultService = [];\r\n        this.calendarResultEvent = [];\r\n        this.calendarResultAlarm = [];\r\n        // this.createRandomEvents();\r\n        var dateStr;\r\n        if (ev != '') {\r\n            //this.pet = '';\r\n            this.petselection = '';\r\n            this.calendarResultAll = [];\r\n            this.calendarResultService = [];\r\n            this.calendarResultEvent = [];\r\n            this.calendarResultAlarm = [];\r\n            if (ev.selectedTime == undefined) {\r\n                month = month + 1;\r\n                year = year;\r\n                date = date;\r\n            }\r\n            else {\r\n                month = month + 1;\r\n                year = year;\r\n                date = date;\r\n            }\r\n            if (this.getlength(month) == 1) {\r\n                month = '0' + month;\r\n            }\r\n            else {\r\n                month = month;\r\n            }\r\n            if (this.getlength(date) == 1) {\r\n                date = '0' + date;\r\n            }\r\n            else {\r\n                date = date;\r\n            }\r\n            dateStr = \"&date=\" + year + \"-\" + month + \"-\" + date;\r\n        }\r\n        else {\r\n            dateStr = \"\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/calendar?is_mobile=1&loginid=\" + this.userId + \"&companyid=\" + this.companyId + \"\" + dateStr;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            var currentDateArr = new Date();\r\n            var cmonth = currentDateArr.getMonth() + 1;\r\n            var mnstr;\r\n            var dtstr;\r\n            console.log(\"cmonth.toLocaleString.length\" + cmonth.toLocaleString.length);\r\n            console.log(\"cmonth\" + cmonth);\r\n            if (cmonth > 9) {\r\n                cmonth = cmonth;\r\n                mnstr = '';\r\n                console.log(\"Less than 9 below 10\");\r\n            }\r\n            else {\r\n                console.log(\"Greater than 9 reach 10\");\r\n                cmonth = cmonth;\r\n                mnstr = '0';\r\n            }\r\n            if (currentDateArr.getDate().toLocaleString.length == 1) {\r\n                dtstr = '0';\r\n            }\r\n            else {\r\n                dtstr = '';\r\n            }\r\n            var curDate = currentDateArr.getFullYear() + \"-\" + mnstr + cmonth + \"-\" + dtstr + currentDateArr.getDate();\r\n            var months = { '01': 'January', '02': 'February', '03': 'March', '04': 'April', '05': 'May', '06': 'June', '07': 'July', '08': 'August', '09': 'September', '10': 'October', '11': 'November', '12': 'December' };\r\n            var selDate = year + \"-\" + month + \"-\" + date;\r\n            var selectdate = year + \"-\" + month + \"-\" + date;\r\n            if (year != undefined)\r\n                _this.dateHeaderTitle = months[month] + \" \" + year;\r\n            if (ev != '') {\r\n                console.log(\"curDate:\" + curDate);\r\n                console.log(\"selDate:\" + selDate);\r\n                localStorage.setItem(\"sdate\", selectdate);\r\n                if (curDate == selDate) {\r\n                    _this.daySession = 'Todays  Event';\r\n                    console.log(_this.daySession);\r\n                }\r\n                else {\r\n                    _this.daySession = selDate;\r\n                }\r\n            }\r\n            else {\r\n                _this.daySession = \"\";\r\n            }\r\n            console.log(\"Pet:======>\" + _this.petselection);\r\n            _this.calendarResultEvent = [];\r\n            if (_this.petselection == 'ALL') {\r\n                console.log('ALL');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'all');\r\n            }\r\n            else if (_this.petselection == 'SERVICE') {\r\n                console.log('SERVICE');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'service'); //JsonData,Event,Service,Alarm\r\n            }\r\n            else if (_this.petselection == 'EVENT') {\r\n                console.log('EVENT');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'event'); //JsonData,Event,Service,Alarm\r\n            }\r\n            else if (_this.petselection == 'ALARM') {\r\n                console.log('ALARM');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'alarm'); //JsonData,Event,Service,Alarm\r\n            }\r\n            else {\r\n                console.log('EV' + ev);\r\n                if (ev != '') {\r\n                    _this.doCalendarResult(data, 1, 1, 1, ''); //JsonData,Event,Service,Alarm\r\n                }\r\n            }\r\n        });\r\n    };\r\n    CalendarComponent.prototype.doCalendarResult = function (data, event, service, alarm, type) {\r\n        this.serviceIdentify = [];\r\n        this.eventIdentify = [];\r\n        this.alarmIdentity = [];\r\n        if (event > 0 && type == '') {\r\n            console.log(\"A\");\r\n            this.eventIdentify = data.json().events;\r\n        }\r\n        else {\r\n            console.log(\"B\");\r\n            if (type == 'event') {\r\n                console.log(\"C\");\r\n                this.eventIdentify = data.json().allevents;\r\n            }\r\n            if (type == 'all') {\r\n                console.log(\"D\");\r\n                this.eventIdentify = data.json().allevents;\r\n            }\r\n        }\r\n        for (var i = 0; i < this.eventIdentify.length; i += 1) {\r\n            //  $('.monthview-primary-with-event').removeClass('monthview-primary-with-event[_ngcontent-c1]');\r\n            // $('.monthview-primary-with-event').addClass('eventclass');\r\n            //let eventdate = this.eventIdentify[i]['event_date'] + \" \" + this.eventIdentify[i]['event_time'];// Check Date and Time\r\n            // let eventdate = this.eventIdentify[i]['event_date'];// Check Date only\r\n            this.calendarResultEvent.push({\r\n                event_id: this.eventIdentify[i]['event_id'],\r\n                event_title: this.eventIdentify[i]['event_title'],\r\n                event_date: this.eventIdentify[i]['event_date'],\r\n                event_time: this.eventIdentify[i]['event_time'],\r\n                event_location: this.eventIdentify[i]['event_location'],\r\n                event_remark: this.eventIdentify[i]['event_remark'],\r\n                event_addedby_name: this.eventIdentify[i]['event_addedby_name'],\r\n                event_type: 'E',\r\n                icon: 'alarm',\r\n                // calendar on small screens, as the name of the event will\r\n                // not be displayed in the month grid. It has to be a valid\r\n                // IonicIcons icon name.\r\n                class: 'eventclass',\r\n                iconStyle: { color: 'green' } // Style for the item's icon\r\n                //style: { color: 'red' }, // Style for the item\r\n            });\r\n        }\r\n        if (service > 0 && type == '') {\r\n            console.log(\"E\");\r\n            this.serviceIdentify = data.json().services;\r\n        }\r\n        else {\r\n            console.log(\"F\");\r\n            if (type == 'service') {\r\n                console.log(\"G\");\r\n                this.serviceIdentify = data.json().allservices;\r\n            }\r\n            if (type == 'all') {\r\n                console.log(\"H\");\r\n                this.serviceIdentify = data.json().allservices;\r\n            }\r\n        }\r\n        for (var j = 0; j < this.serviceIdentify.length; j += 1) {\r\n            var eventdate = void 0;\r\n            if (this.serviceIdentify[j]['serviced_datetime'] == '0000-00-00') {\r\n                //eventdate = this.serviceIdentify[j]['next_service_date'] + \" \" + this.serviceIdentify[j]['serviced_time'];// Check Date and Time\r\n                eventdate = this.serviceIdentify[j]['next_service_date']; // Check Date only\r\n            }\r\n            else {\r\n                if (this.serviceIdentify[j]['serviced_time'] == null) {\r\n                    eventdate = this.serviceIdentify[j]['next_service_date'];\r\n                }\r\n                else {\r\n                    eventdate = this.serviceIdentify[j]['serviced_datetime'];\r\n                }\r\n            }\r\n            this.calendarResultEvent.push({\r\n                event_id: this.serviceIdentify[j]['service_id'],\r\n                event_title: this.serviceIdentify[j]['service_subject'],\r\n                event_unitid: this.serviceIdentify[j]['service_unitid'],\r\n                event_date: this.serviceIdentify[j]['serviced_datetime'],\r\n                event_time: this.serviceIdentify[j]['serviced_time'],\r\n                event_remark: this.serviceIdentify[j]['service_remark'],\r\n                event_location: this.serviceIdentify[j]['service_location'],\r\n                event_addedby_name: this.serviceIdentify[j]['serviced_by_name'],\r\n                event_type: 'S',\r\n                icon: 'service',\r\n                class: 'service'\r\n            });\r\n        }\r\n        if (alarm > 0 && type == '') {\r\n            console.log(\"I\");\r\n            this.alarmIdentity = data.json().alarms;\r\n        }\r\n        else {\r\n            console.log(\"J\");\r\n            if (type == 'alarm') {\r\n                console.log(\"K\");\r\n                this.alarmIdentity = data.json().allalarms;\r\n            }\r\n            if (type == 'all') {\r\n                console.log(\"L\");\r\n                this.alarmIdentity = data.json().allalarms;\r\n            }\r\n        }\r\n        for (var k = 0; k < this.alarmIdentity.length; k += 1) {\r\n            this.calendarResultEvent.push({\r\n                event_id: this.alarmIdentity[k]['alarm_id'],\r\n                event_title: this.alarmIdentity[k]['alarm_name'],\r\n                event_unitid: this.alarmIdentity[k]['alarm_unit_id'],\r\n                event_date: this.alarmIdentity[k]['alarm_received_date'],\r\n                event_remark: this.alarmIdentity[k]['alarm_remark'],\r\n                event_location: this.alarmIdentity[k]['alarm_location'],\r\n                event_addedby_name: this.alarmIdentity[k]['alarm_assginedby_name'],\r\n                event_t: this.alarmIdentity[k]['date_time'],\r\n                event_type: 'A',\r\n                icon: 'event',\r\n                class: 'event'\r\n            });\r\n        }\r\n        this.totalCountEventDateWise = this.calendarResultEvent.length;\r\n        console.log(\"Date wise selection calendar response:\" + JSON.stringify(this.calendarResultEvent));\r\n        console.log(\"totalCountEventDateWise++\" + this.totalCountEventDateWise);\r\n        if (this.totalCountEventDateWise == 0) {\r\n            this.noeventtitle = 'There is no events';\r\n        }\r\n    };\r\n    /**********************************/\r\n    /* Dropdown Filter onchange event */\r\n    /**********************************/\r\n    CalendarComponent.prototype.onSegmentChanged = function (val) {\r\n        this.noeventtitle = '';\r\n        this.calendarResultEvent = [];\r\n        this.calendarResultAll = [];\r\n        this.calendarResultService = [];\r\n        this.calendarResultAlarm = [];\r\n        if (val == \"ALL\") {\r\n            // this.reportData.status = \"DRAFT\";\r\n            // this.reportData.startindex = 0;\r\n            this.calendarResultAll = [];\r\n            this.petselection = 'ALL';\r\n            this.allselected = true;\r\n            this.pet = 'ALL';\r\n        }\r\n        else if (val == \"SERVICE\") {\r\n            this.serviceselected = true;\r\n            //this.reportData.status = val;\r\n            //this.reportData.startindex = 0;\r\n            this.calendarResultService = [];\r\n            this.petselection = 'SERVICE';\r\n            this.pet = 'SERVICE';\r\n        }\r\n        else if (val == \"EVENT\") {\r\n            this.eventsselected = true;\r\n            //this.reportData.status = val;\r\n            //this.reportData.startindex = 0;\r\n            this.calendarResultEvent = [];\r\n            this.petselection = 'EVENT';\r\n            this.pet = 'EVENT';\r\n        }\r\n        else if (val == \"ALARM\") {\r\n            this.alarmselected = true;\r\n            //this.reportData.status = val;\r\n            //this.reportData.startindex = 0;\r\n            this.calendarResultAlarm = [];\r\n            this.petselection = 'ALARM';\r\n            this.pet = 'ALARM';\r\n        }\r\n        //this.doReport();\r\n        this.onTimeSelected('', '', '', '');\r\n    };\r\n    return CalendarComponent;\r\n}());\r\n__decorate([\r\n    Input('calEvents'),\r\n    __metadata(\"design:type\", Array)\r\n], CalendarComponent.prototype, \"calEvents\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], CalendarComponent.prototype, \"afterEventMove\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], CalendarComponent.prototype, \"onEventTap\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], CalendarComponent.prototype, \"onEventDoubleTap\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], CalendarComponent.prototype, \"onEventPress\", void 0);\r\n__decorate([\r\n    HostListener('window:resize'),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", []),\r\n    __metadata(\"design:returntype\", void 0)\r\n], CalendarComponent.prototype, \"updateSize\", null);\r\nCalendarComponent = __decorate([\r\n    Component({\r\n        selector: 'ionic2-calendar',\r\n        templateUrl: 'calendar.component.html',\r\n        providers: [DragulaService]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof DragulaService !== \"undefined\" && DragulaService) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" && _c || Object, typeof (_d = typeof Events !== \"undefined\" && Events) === \"function\" && _d || Object, typeof (_e = typeof Http !== \"undefined\" && Http) === \"function\" && _e || Object, typeof (_f = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object])\r\n], CalendarComponent);\r\nexport { CalendarComponent };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=calendar.component.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/components/calendar/calendar.component.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { CalendarComponent } from '../../components/calendar/calendar.component';\r\nimport { NavController, Events } from 'ionic-angular';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { EmailPage } from '../email/email';\r\nimport { Http, Headers, RequestOptions } from \"@angular/http\";\r\nimport { HomePage } from '../home/home';\r\nvar CalendarPage = CalendarPage_1 = (function () {\r\n    function CalendarPage(nav, events, http, navCtrl) {\r\n        var _this = this;\r\n        this.nav = nav;\r\n        this.events = events;\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.eventIdentify = [];\r\n        this.serviceIdentify = [];\r\n        this.alarmIdentity = [];\r\n        this.pet = \"ALL\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.now = Date.now();\r\n        this.millisInHour = 1000 * 60 * 60;\r\n        this.millisInDay = this.millisInHour * 24;\r\n        this.calEvents = [];\r\n        console.log(\"Static Events:-\" + JSON.stringify(this.calEvents));\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.pageTitle = \"Calendar\";\r\n        events.subscribe('calendar-event:item-press', function (event) {\r\n            console.log('calendar-event:item-press', event);\r\n            _this.onEventPressed(event[0]);\r\n        });\r\n        events.subscribe('calendar-event:month-grid-cell-press', function (event) {\r\n            console.log('calendar-event:month-grid-cell-press - calendar', event);\r\n            _this.onMonthGridPressed(event[0]);\r\n        });\r\n        // this.calEvents = [];\r\n        //console.log($event.date.toDate())\r\n    }\r\n    CalendarPage.prototype.ionViewWillEnter = function () {\r\n    };\r\n    /**********************************/\r\n    /* Dropdown Filter onchange event */\r\n    /**********************************/\r\n    CalendarPage.prototype.onSegmentChanged = function (val) {\r\n        this.noeventtitle = '';\r\n        this.calendarResultEvent = [];\r\n        this.calendarResultAll = [];\r\n        this.calendarResultService = [];\r\n        this.calendarResultAlarm = [];\r\n        if (val == \"ALL\") {\r\n            // this.reportData.status = \"DRAFT\";\r\n            // this.reportData.startindex = 0;\r\n            this.calendarResultAll = [];\r\n            this.petselection = 'ALL';\r\n            this.allselected = true;\r\n            this.pet = 'ALL';\r\n        }\r\n        else if (val == \"SERVICE\") {\r\n            this.serviceselected = true;\r\n            //this.reportData.status = val;\r\n            //this.reportData.startindex = 0;\r\n            this.calendarResultService = [];\r\n            this.petselection = 'SERVICE';\r\n            this.pet = 'SERVICE';\r\n        }\r\n        else if (val == \"EVENT\") {\r\n            this.eventsselected = true;\r\n            //this.reportData.status = val;\r\n            //this.reportData.startindex = 0;\r\n            this.calendarResultEvent = [];\r\n            this.petselection = 'EVENT';\r\n            this.pet = 'EVENT';\r\n        }\r\n        else if (val == \"ALARM\") {\r\n            this.alarmselected = true;\r\n            //this.reportData.status = val;\r\n            //this.reportData.startindex = 0;\r\n            this.calendarResultAlarm = [];\r\n            this.petselection = 'ALARM';\r\n            this.pet = 'ALARM';\r\n        }\r\n        //this.doReport();\r\n        this.onTimeSelected('');\r\n    };\r\n    CalendarPage.prototype.onTimeSelected = function (ev) {\r\n        var _this = this;\r\n        this.currentCalendarDate = ev;\r\n        this.calendarResultAll = [];\r\n        this.calendarResultService = [];\r\n        this.calendarResultEvent = [];\r\n        this.calendarResultAlarm = [];\r\n        // this.createRandomEvents();\r\n        var dateStr;\r\n        var month;\r\n        var year;\r\n        var date;\r\n        if (ev != '') {\r\n            //this.pet = '';\r\n            this.petselection = '';\r\n            this.calendarResultAll = [];\r\n            this.calendarResultService = [];\r\n            this.calendarResultEvent = [];\r\n            this.calendarResultAlarm = [];\r\n            if (ev.selectedTime == undefined) {\r\n                month = ev.getUTCMonth() + 1;\r\n                year = ev.getFullYear();\r\n                date = ev.getDate();\r\n            }\r\n            else {\r\n                month = ev.selectedTime.getUTCMonth() + 1;\r\n                year = ev.selectedTime.getFullYear();\r\n                date = ev.selectedTime.getDate();\r\n            }\r\n            console.log(\"Month Vlue\" + month);\r\n            console.log(\"Month Length\" + month.length);\r\n            if (this.getlength(month) == 1) {\r\n                month = '0' + month;\r\n            }\r\n            else {\r\n                month = month;\r\n            }\r\n            console.log(\"Date Length\" + date.length);\r\n            if (this.getlength(date) == 1) {\r\n                date = '0' + date;\r\n            }\r\n            else {\r\n                date = date;\r\n            }\r\n            dateStr = \"&date=\" + year + \"-\" + month + \"-\" + date;\r\n        }\r\n        else {\r\n            dateStr = \"\";\r\n        }\r\n        console.log(\"Date Selection:\" + dateStr);\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/calendar?is_mobile=1&loginid=\" + this.userId + \"&companyid=\" + this.companyId + \"\" + dateStr;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            var currentDateArr = new Date();\r\n            var cmonth = currentDateArr.getMonth() + 1;\r\n            var mnstr;\r\n            var dtstr;\r\n            console.log(\"cmonth.toLocaleString.length\" + cmonth.toLocaleString.length);\r\n            console.log(\"cmonth\" + cmonth);\r\n            if (cmonth > 9) {\r\n                cmonth = cmonth;\r\n                mnstr = '';\r\n                console.log(\"Less than 9 below 10\");\r\n            }\r\n            else {\r\n                console.log(\"Greater than 9 reach 10\");\r\n                cmonth = cmonth;\r\n                mnstr = '0';\r\n            }\r\n            if (currentDateArr.getDate().toLocaleString.length == 1) {\r\n                dtstr = '0';\r\n            }\r\n            else {\r\n                dtstr = '';\r\n            }\r\n            var curDate = currentDateArr.getFullYear() + \"-\" + mnstr + cmonth + \"-\" + dtstr + currentDateArr.getDate();\r\n            var months = { '01': 'January', '02': 'February', '03': 'March', '04': 'April', '05': 'May', '06': 'June', '07': 'July', '08': 'August', '09': 'September', '10': 'October', '11': 'November', '12': 'December' };\r\n            var selDate = year + \"-\" + month + \"-\" + date;\r\n            var selectdate = year + \"-\" + month + \"-\" + date;\r\n            if (year != undefined)\r\n                _this.dateHeaderTitle = months[month] + \" \" + year;\r\n            if (ev != '') {\r\n                console.log(\"curDate:\" + curDate);\r\n                console.log(\"selDate:\" + selDate);\r\n                localStorage.setItem(\"sdate\", selectdate);\r\n                if (curDate == selDate) {\r\n                    _this.daySession = 'Todays  Event';\r\n                    console.log(_this.daySession);\r\n                }\r\n                else {\r\n                    _this.daySession = selDate;\r\n                }\r\n            }\r\n            else {\r\n                _this.daySession = \"\";\r\n            }\r\n            console.log(\"Pet:======>\" + _this.petselection);\r\n            _this.calendarResultEvent = [];\r\n            if (_this.petselection == 'ALL') {\r\n                console.log('ALL');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'all');\r\n            }\r\n            else if (_this.petselection == 'SERVICE') {\r\n                console.log('SERVICE');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'service'); //JsonData,Event,Service,Alarm\r\n            }\r\n            else if (_this.petselection == 'EVENT') {\r\n                console.log('EVENT');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'event'); //JsonData,Event,Service,Alarm\r\n            }\r\n            else if (_this.petselection == 'ALARM') {\r\n                console.log('ALARM');\r\n                _this.doCalendarResult(data, 0, 0, 0, 'alarm'); //JsonData,Event,Service,Alarm\r\n            }\r\n            else {\r\n                console.log('EV' + ev);\r\n                if (ev != '') {\r\n                    _this.doCalendarResult(data, 1, 1, 1, ''); //JsonData,Event,Service,Alarm\r\n                }\r\n            }\r\n        });\r\n    };\r\n    CalendarPage.prototype.getlength = function (number) {\r\n        return number.toString().length;\r\n    };\r\n    CalendarPage.prototype.doCalendarResult = function (data, event, service, alarm, type) {\r\n        this.serviceIdentify = [];\r\n        this.eventIdentify = [];\r\n        this.alarmIdentity = [];\r\n        if (event > 0 && type == '') {\r\n            console.log(\"A\");\r\n            this.eventIdentify = data.json().events;\r\n        }\r\n        else {\r\n            console.log(\"B\");\r\n            if (type == 'event') {\r\n                console.log(\"C\");\r\n                this.eventIdentify = data.json().allevents;\r\n            }\r\n            if (type == 'all') {\r\n                console.log(\"D\");\r\n                this.eventIdentify = data.json().allevents;\r\n            }\r\n        }\r\n        for (var i = 0; i < this.eventIdentify.length; i += 1) {\r\n            $('.monthview-primary-with-event').removeClass('monthview-primary-with-event[_ngcontent-c1]');\r\n            $('.monthview-primary-with-event').addClass('eventclass');\r\n            //let eventdate = this.eventIdentify[i]['event_date'] + \" \" + this.eventIdentify[i]['event_time'];// Check Date and Time\r\n            // let eventdate = this.eventIdentify[i]['event_date'];// Check Date only\r\n            this.calendarResultEvent.push({\r\n                event_id: this.eventIdentify[i]['event_id'],\r\n                event_title: this.eventIdentify[i]['event_title'],\r\n                event_date: this.eventIdentify[i]['event_date'],\r\n                event_time: this.eventIdentify[i]['event_time'],\r\n                event_location: this.eventIdentify[i]['event_location'],\r\n                event_remark: this.eventIdentify[i]['event_remark'],\r\n                event_addedby_name: this.eventIdentify[i]['event_addedby_name'],\r\n                event_type: 'E',\r\n                icon: 'alarm',\r\n                // calendar on small screens, as the name of the event will\r\n                // not be displayed in the month grid. It has to be a valid\r\n                // IonicIcons icon name.\r\n                class: 'eventclass',\r\n                iconStyle: { color: 'green' } // Style for the item's icon\r\n                //style: { color: 'red' }, // Style for the item\r\n            });\r\n        }\r\n        if (service > 0 && type == '') {\r\n            console.log(\"E\");\r\n            this.serviceIdentify = data.json().services;\r\n        }\r\n        else {\r\n            console.log(\"F\");\r\n            if (type == 'service') {\r\n                console.log(\"G\");\r\n                this.serviceIdentify = data.json().allservices;\r\n            }\r\n            if (type == 'all') {\r\n                console.log(\"H\");\r\n                this.serviceIdentify = data.json().allservices;\r\n            }\r\n        }\r\n        for (var j = 0; j < this.serviceIdentify.length; j += 1) {\r\n            var eventdate = void 0;\r\n            if (this.serviceIdentify[j]['serviced_datetime'] == '0000-00-00') {\r\n                //eventdate = this.serviceIdentify[j]['next_service_date'] + \" \" + this.serviceIdentify[j]['serviced_time'];// Check Date and Time\r\n                eventdate = this.serviceIdentify[j]['next_service_date']; // Check Date only\r\n            }\r\n            else {\r\n                if (this.serviceIdentify[j]['serviced_time'] == null) {\r\n                    eventdate = this.serviceIdentify[j]['next_service_date'];\r\n                }\r\n                else {\r\n                    eventdate = this.serviceIdentify[j]['serviced_datetime'];\r\n                }\r\n            }\r\n            this.calendarResultEvent.push({\r\n                event_id: this.serviceIdentify[j]['service_id'],\r\n                event_title: this.serviceIdentify[j]['service_subject'],\r\n                event_unitid: this.serviceIdentify[j]['service_unitid'],\r\n                event_date: this.serviceIdentify[j]['serviced_datetime'],\r\n                event_time: this.serviceIdentify[j]['serviced_time'],\r\n                event_remark: this.serviceIdentify[j]['service_remark'],\r\n                event_location: this.serviceIdentify[j]['service_location'],\r\n                event_addedby_name: this.serviceIdentify[j]['serviced_by_name'],\r\n                event_type: 'S',\r\n                icon: 'service',\r\n                class: 'service'\r\n            });\r\n        }\r\n        if (alarm > 0 && type == '') {\r\n            console.log(\"I\");\r\n            this.alarmIdentity = data.json().alarms;\r\n        }\r\n        else {\r\n            console.log(\"J\");\r\n            if (type == 'alarm') {\r\n                console.log(\"K\");\r\n                this.alarmIdentity = data.json().allalarms;\r\n            }\r\n            if (type == 'all') {\r\n                console.log(\"L\");\r\n                this.alarmIdentity = data.json().allalarms;\r\n            }\r\n        }\r\n        for (var k = 0; k < this.alarmIdentity.length; k += 1) {\r\n            this.calendarResultEvent.push({\r\n                event_id: this.alarmIdentity[k]['alarm_id'],\r\n                event_title: this.alarmIdentity[k]['alarm_name'],\r\n                event_unitid: this.alarmIdentity[k]['alarm_unit_id'],\r\n                event_date: this.alarmIdentity[k]['alarm_received_date'],\r\n                event_remark: this.alarmIdentity[k]['alarm_remark'],\r\n                event_location: this.alarmIdentity[k]['alarm_location'],\r\n                event_addedby_name: this.alarmIdentity[k]['alarm_assginedby_name'],\r\n                event_t: this.alarmIdentity[k]['date_time'],\r\n                event_type: 'A',\r\n                icon: 'event',\r\n                class: 'event'\r\n            });\r\n        }\r\n        this.totalCountEventDateWise = this.calendarResultEvent.length;\r\n        console.log(\"Date wise selection calendar response:\" + JSON.stringify(this.calendarResultEvent));\r\n        console.log(\"totalCountEventDateWise++\" + this.totalCountEventDateWise);\r\n        if (this.totalCountEventDateWise == 0) {\r\n            this.noeventtitle = 'There is no events';\r\n        }\r\n    };\r\n    CalendarPage.prototype.createRandomEvents = function () {\r\n        var _this = this;\r\n        var today = new Date();\r\n        console.log(\"Today is \" + today);\r\n        console.log(\"Month wise Current Date:-\" + this.currentCalendarDate);\r\n        // let currentdateArr=this.currentCalendarDate.split(\" \");\r\n        //Sun Oct 01 2017\r\n        var curdate = this.currentCalendarDate.getDate();\r\n        var curmonth = this.currentCalendarDate.getMonth() + 1;\r\n        var mnstr;\r\n        if (curmonth > 9) {\r\n            curmonth = curmonth;\r\n            mnstr = '';\r\n            console.log(\"Less than 9 below 10\");\r\n        }\r\n        else {\r\n            console.log(\"Greater than 9 reach 10\");\r\n            curmonth = curmonth;\r\n            mnstr = '0';\r\n        }\r\n        var curyear = this.currentCalendarDate.getFullYear();\r\n        var currentdate = curyear + \"-\" + mnstr + curmonth + \"-\" + curdate;\r\n        var events = [];\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/calendar? is_mobile=1&loginid=\" + this.userId + \"&date=\" + currentdate + \"&companyid=\" + this.companyId;\r\n        console.log(\"All Events calling API URL\" + url);\r\n        // console.log(url);\r\n        var colors = ['primary', 'warning', 'danger', 'success'];\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            _this.eventIdentify = res.allevents;\r\n            for (var i = 0; i < _this.eventIdentify.length; i += 1) {\r\n                var startTime;\r\n                var endTime;\r\n                var event_date_array = _this.eventIdentify[i]['event_date'].split('-');\r\n                console.log(\"DATE FORMAT\" + _this.eventIdentify[i]['event_date']);\r\n                var yearstr = event_date_array[0];\r\n                var monthstr = parseInt(event_date_array[1], 10) - 1;\r\n                var datestr = parseInt(event_date_array[2], 10);\r\n                console.log(\"Month String:-\" + monthstr);\r\n                console.log(\"Date String:-\" + datestr);\r\n                // var startMinute = Math.floor(Math.random() * 24 * 60);\r\n                // var endMinute = Math.floor(Math.random() * 1) + startMinute;\r\n                var startMinute = 20;\r\n                var endMinute = 10 + startMinute;\r\n                startTime = new Date(yearstr, monthstr, datestr, 10, 0 + startMinute);\r\n                endTime = new Date(yearstr, monthstr, datestr, 10, 0 + endMinute);\r\n                //console.log(\"TEST CALENDAR-1\"+startTime+\"//\"+endTime);\r\n                // startTime = new Date(event_date_array[0], event_date_array[1], event_date_array[2], 0, 0,0);\r\n                // endTime = new Date(event_date_array[0], event_date_array[1], event_date_array[2], 0, 0,0);\r\n                /*events.push({\r\n                  title: this.eventIdentify[i]['event_title'],\r\n                  startTime: startTime,\r\n                  endTime: endTime,\r\n                  allDay: true,\r\n                  icon: 'event',\r\n                  class: 'event'\r\n                });*/\r\n                events.push({\r\n                    \"data\": {},\r\n                    \"icon\": \"clock\",\r\n                    \"class\": \"event\",\r\n                    \"iconStyle\": { \"color\": \"green\" },\r\n                    \"style\": { \"color\": \"red\" },\r\n                    \"name\": _this.eventIdentify[i]['event_title'],\r\n                    \"type\": \"event\",\r\n                    \"startDate\": startTime,\r\n                    \"endDate\": endTime,\r\n                    \"allDay\": false\r\n                });\r\n                // \"data\":{},\"icon\":\"alarm\",\"class\":\"class\",\"iconStyle\":{\"color\":\"green\"},\"style\":{\"color\":\"red\"},\"name\":\"Item 1\",\"type\":\"event\",\"startDate\":\"2017-08-27T12:22:34.252Z\",\"endDate\":\"2017-08-27T13:22:34.252Z\",\"allDay\":false\r\n            }\r\n            _this.serviceIdentify = res.allservices;\r\n            for (var j = 0; j < _this.serviceIdentify.length; j += 1) {\r\n                var startTime;\r\n                var endTime;\r\n                var service_date_array;\r\n                if (_this.serviceIdentify[j]['serviced_datetime'] == '0000-00-00') {\r\n                    service_date_array = _this.serviceIdentify[j]['next_service_date'].split('-');\r\n                }\r\n                else {\r\n                    if (_this.serviceIdentify[j]['serviced_time'] == null) {\r\n                        service_date_array = _this.serviceIdentify[j]['next_service_date'].split('-');\r\n                    }\r\n                    else {\r\n                        service_date_array = _this.serviceIdentify[j]['serviced_datetime'].split('-');\r\n                    }\r\n                }\r\n                console.log(\"DATE FORMAT\" + _this.serviceIdentify[j]['serviced_datetime']);\r\n                var yearstr = service_date_array[0];\r\n                var monthstr = parseInt(service_date_array[1], 10) - 1;\r\n                var datestr = parseInt(service_date_array[2], 10);\r\n                // var startMinute = Math.floor(Math.random() * 24 * 60);\r\n                // var endMinute = Math.floor(Math.random() * 1) + startMinute;\r\n                var startMinute = 20;\r\n                var endMinute = 10 + startMinute;\r\n                startTime = new Date(yearstr, monthstr, datestr, 10, 0 + startMinute);\r\n                endTime = new Date(yearstr, monthstr, datestr, 10, 0 + endMinute);\r\n                // console.log(\"TEST CALENDAR-2\"+startTime+\"//\"+endTime);\r\n                // startTime = new Date(service_date_array[0], service_date_array[1], service_date_array[2], 0, 0,0);\r\n                //endTime = new Date(service_date_array[0], service_date_array[1], service_date_array[2], 0, 0,0);\r\n                /*events.push({\r\n                  title: this.serviceIdentify[j]['service_subject'],\r\n                  startTime: startTime,\r\n                  endTime: endTime,\r\n                  allDay: true,\r\n                  icon: 'service',\r\n                  class: 'service'\r\n                });*/\r\n                events.push({\r\n                    \"data\": {},\r\n                    \"icon\": \"camera\",\r\n                    \"class\": \"event\",\r\n                    \"iconStyle\": { \"color\": \"green\" },\r\n                    \"style\": { \"color\": \"green\" },\r\n                    \"name\": _this.serviceIdentify[j]['service_subject'],\r\n                    \"type\": \"event\",\r\n                    \"startDate\": startTime,\r\n                    \"endDate\": endTime,\r\n                    \"allDay\": false\r\n                });\r\n            }\r\n            _this.alarmIdentity = res.allalarms;\r\n            for (var k = 0; k < _this.alarmIdentity.length; k += 1) {\r\n                // $('.monthview-primary-with-event').removeClass('monthview-primary-with-event[_ngcontent-c1]');\r\n                //$('.monthview-primary-with-event').addClass('eventclass');\r\n                var startTime;\r\n                var endTime;\r\n                var substrdt = _this.alarmIdentity[k]['alarm_received_date']; //.substring(0, 10)'\r\n                console.log(\"DATE FORMAT\" + _this.alarmIdentity[k]['alarm_received_date']);\r\n                console.log(\"Date Substr result\" + substrdt);\r\n                var service_date_array = substrdt.split('-');\r\n                var yearstr = service_date_array[0];\r\n                var monthstr = parseInt(service_date_array[1], 10) - 1;\r\n                var datestr = parseInt(service_date_array[2], 10);\r\n                //var startMinute = Math.floor(Math.random() * 24 * 60);\r\n                var startMinute = 20;\r\n                var endMinute = 10 + startMinute;\r\n                startTime = new Date(yearstr, monthstr, datestr, 10, 0 + startMinute);\r\n                endTime = new Date(yearstr, monthstr, datestr, 10, 0 + endMinute);\r\n                ///console.log(\"TEST CALENDAR-3\"+startTime+\"//\"+endTime);\r\n                // startTime = new Date(service_date_array[0], service_date_array[1], service_date_array[2], 0, 0,0);\r\n                // endTime = new Date(service_date_array[0], service_date_array[1], service_date_array[2], 0, 0,0);\r\n                /*events.push({\r\n                  title: this.alarmIdentity[k]['alarm_name'],\r\n                  startTime: startTime,\r\n                  endTime: endTime,\r\n                  allDay: true,\r\n                  icon: 'alarm',\r\n                  class: 'alarm'\r\n                });\r\n                */\r\n                events.push({\r\n                    \"data\": {},\r\n                    \"icon\": \"alarm\",\r\n                    \"class\": \"event\",\r\n                    \"iconStyle\": { \"color\": \"orange\" },\r\n                    \"style\": { \"color\": \"orange\" },\r\n                    \"name\": _this.alarmIdentity[k]['alarm_name'],\r\n                    \"type\": \"event\",\r\n                    \"startDate\": startTime,\r\n                    \"endDate\": endTime,\r\n                    \"allDay\": false\r\n                });\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n            }\r\n            else {\r\n            }\r\n            _this.eventSource = events;\r\n            console.log(\"Calendar response new collection:\" + JSON.stringify(_this.eventSource));\r\n        });\r\n    };\r\n    /*viewTitle;\r\n    isToday: boolean;\r\n    calendar = {\r\n      mode: 'month',\r\n      currentDate: new Date()\r\n    };*/\r\n    CalendarPage.prototype.splitDate = function (curdate) {\r\n        //var splitDt = curdate.split(\"@\");\r\n        var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        var monthYear = monthNames[curdate.getMonth()] + \" \" + curdate.getUTCFullYear();\r\n        return monthYear;\r\n    };\r\n    CalendarPage.prototype.callingSwipe = function ($event) {\r\n        console.log('swiped callendar' + JSON.stringify($event));\r\n        console.log(\"offsetDirection Left is 4 is from left to right=\" + $event.offsetDirection);\r\n        console.log(\"offsetDirection Left is 2 is right to left=\" + $event.offsetDirection);\r\n        if ($event.offsetDirection == 2) {\r\n            this.calendarComponent.plusMonth(1);\r\n        }\r\n        if ($event.offsetDirection == 4) {\r\n            this.calendarComponent.plusMonth(-1);\r\n        }\r\n    };\r\n    CalendarPage.prototype.onEventPress = function ($event) {\r\n        console.log('event moved parent', $event);\r\n    };\r\n    CalendarPage.prototype.onEventDoubletap = function ($event) {\r\n        console.log('on event double tab', $event);\r\n    };\r\n    CalendarPage.prototype.afterEventMoved = function ($event) {\r\n        console.log('event moved parent', $event);\r\n        /*this.nav.present(Toast.create({\r\n          message: `Moved ${$event.element.name} to ${moment($event.element.startDate).format('MMM Do')}`,\r\n          duration: 3000,\r\n          position: 'top'\r\n        }));\r\n        */\r\n        // alert(`Moved ${$event.element.name} to ${moment($event.element.startDate).format('MMM Do')}`)\r\n    };\r\n    CalendarPage.prototype.onEventTap = function ($event) {\r\n        console.log('GENERIC ON EVENT TAP', $event);\r\n        /* this.nav.present(Alert.create({\r\n           title: `Clicked: ${$event.name}`,\r\n           message: `From ${moment($event.startDate).calendar()} to ${moment($event.endDate).calendar()}`,\r\n           buttons: ['Ok']\r\n         }));\r\n         */\r\n        //alert(`From ${moment($event.startDate).calendar()} to ${moment($event.endDate).calendar()}`);\r\n    };\r\n    CalendarPage.prototype.onEventPressed = function ($event) {\r\n        console.log('GENERIC ON EVENT PRESS', $event);\r\n    };\r\n    CalendarPage.prototype.onMonthGridPressed = function ($event) {\r\n        console.log('GENERIC ON MONTHGRID PRESS', $event);\r\n        this.showNewEventModal($event.date.toDate());\r\n    };\r\n    CalendarPage.prototype.showNewEventModal = function (date) {\r\n        if (!date) {\r\n            date = new Date();\r\n        }\r\n        //console.log('Date is ' + date);\r\n        /* let newEventModal = Modal.create(CalendarNewEventModal, { date: date });\r\n         newEventModal.onDismiss(data => {\r\n           if (data) {\r\n             this.calendarComponent.addCalendarEvent(data);\r\n           }\r\n         });\r\n         this.nav.present(newEventModal);\r\n         */\r\n    };\r\n    CalendarPage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(HomePage);\r\n    };\r\n    CalendarPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    CalendarPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    CalendarPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    CalendarPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage_1);\r\n    };\r\n    CalendarPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    CalendarPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    return CalendarPage;\r\n}());\r\n__decorate([\r\n    ViewChild(CalendarComponent),\r\n    __metadata(\"design:type\", typeof (_a = typeof CalendarComponent !== \"undefined\" && CalendarComponent) === \"function\" && _a || Object)\r\n], CalendarPage.prototype, \"calendarComponent\", void 0);\r\nCalendarPage = CalendarPage_1 = __decorate([\r\n    Component({\r\n        //templateUrl: 'build/pages/calendar/calendar.html',\r\n        // directives: [CalendarComponent]\r\n        //Static Events:-[{\"data\":{},\"icon\":\"alarm\",\"class\":\"class\",\"iconStyle\":{\"color\":\"green\"},\"style\":{\"color\":\"red\"},\"name\":\"Item 1\",\"type\":\"event\",\"startDate\":\"2017-08-22T22:41:26.675Z\",\"endDate\":\"2017-08-22T23:41:26.675Z\",\"allDay\":false},{\"data\":{},\"class\":\"class\",\"icon\":\"jet\",\"name\":\"Item 2\",\"type\":\"event\",\"startDate\":\"2017-08-23T01:41:26.675Z\",\"endDate\":\"2017-08-26T02:41:26.675Z\",\"allDay\":false},{\"data\":{},\"class\":\"class\",\"icon\":\"globe\",\"name\":\"Item 3\",\"type\":\"event\",\"startDate\":\"2017-08-23T22:41:26.675Z\",\"endDate\":\"2017-08-25T01:41:26.675Z\",\"allDay\":false}]\r\n        selector: 'page-calendar',\r\n        templateUrl: 'calendar.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof Events !== \"undefined\" && Events) === \"function\" && _c || Object, typeof (_d = typeof Http !== \"undefined\" && Http) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object])\r\n], CalendarPage);\r\nexport { CalendarPage };\r\nvar CalendarPage_1, _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=calendar.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/calendar/calendar.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the ViewcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar ViewcompanygroupPage = (function () {\r\n    function ViewcompanygroupPage(navCtrl, navParams, NP) {\r\n        this.navCtrl = navCtrl;\r\n        this.navParams = navParams;\r\n        this.NP = NP;\r\n        this.recordID = null;\r\n    }\r\n    ViewcompanygroupPage.prototype.ionViewWillEnter = function () {\r\n        console.log(this.NP.get(\"record\"));\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'View Company Group';\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    ViewcompanygroupPage.prototype.selectEntry = function (item) {\r\n        this.companygroup_name = item.companygroup_name;\r\n        this.address = item.address;\r\n        this.country = item.country;\r\n        this.contact = item.contact;\r\n        this.totaluser = item.totaluser;\r\n        this.totalunit = item.totalunit;\r\n        this.recordID = item.companygroup_id;\r\n    };\r\n    ViewcompanygroupPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    ViewcompanygroupPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    ViewcompanygroupPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    ViewcompanygroupPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    ViewcompanygroupPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    ViewcompanygroupPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    return ViewcompanygroupPage;\r\n}());\r\nViewcompanygroupPage = __decorate([\r\n    Component({\r\n        selector: 'page-viewcompanygroup',\r\n        templateUrl: 'viewcompanygroup.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object])\r\n], ViewcompanygroupPage);\r\nexport { ViewcompanygroupPage };\r\nvar _a, _b, _c;\r\n//# sourceMappingURL=viewcompanygroup.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/viewcompanygroup/viewcompanygroup.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams, Platform } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddunitsonePage } from '../addunitsone/addunitsone';\r\nimport { ViewcompanygroupPage } from '../viewcompanygroup/viewcompanygroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { UnitgroupPage } from '../unitgroup/unitgroup';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport { RolePage } from '../role/role';\r\nimport { HomePage } from '../home/home';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { GoogleMaps, GoogleMapsEvent } from '@ionic-native/google-maps';\r\nvar MapsPage = MapsPage_1 = (function () {\r\n    function MapsPage(platform, googleMaps, http, navCtrl, toastCtrl, sanitizer, alertCtrl, navParams, loadingCtrl) {\r\n        var _this = this;\r\n        this.platform = platform;\r\n        this.googleMaps = googleMaps;\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.toastCtrl = toastCtrl;\r\n        this.sanitizer = sanitizer;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.addressData = [];\r\n        this.timeri = 0;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        /* Role Authority Start */\r\n        this.VIEWACCESS = localStorage.getItem(\"DASHBOARD_MAP_VIEW\");\r\n        this.HIDEACCESS = localStorage.getItem(\"DASHBOARD_MAP_HIDE\");\r\n        console.log(\"Role Authority for Map View\" + this.VIEWACCESS);\r\n        console.log(\"Role Authority for Map Hide\" + this.HIDEACCESS);\r\n        /* Role Authority End */\r\n        this.pageTitle = 'Maps';\r\n        this.str = '';\r\n        this.str1 = '';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userid = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.platform.ready().then(function () {\r\n            _this.loadMap(0);\r\n        });\r\n    }\r\n    MapsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad MapsPage');\r\n        this.pageLoad();\r\n        this.loadMap(0);\r\n    };\r\n    MapsPage.prototype.ionViewWillEnter = function () {\r\n        console.log('ionViewWillEnter MapsPage');\r\n        this.pageLoad();\r\n    };\r\n    MapsPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUser();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /****************************/\r\n    /*@doUser calling on report */\r\n    /****************************/\r\n    MapsPage.prototype.doUser = function () {\r\n        var _this = this;\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        //this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"vendor\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/dashboard?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&loginid=\" + this.userid + \"&company_id=\" + this.companyid;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            res = data.json();\r\n            /* if (res.msg[0].Error > 0) {\r\n               res.units = [];\r\n             }*/\r\n            if (res.totalCount > 0) {\r\n                for (var unit in res.units) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.units[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.units[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.units[unit].unit_id,\r\n                        unitname: res.units[unit].unitname,\r\n                        location: res.units[unit].location,\r\n                        projectname: res.units[unit].projectname,\r\n                        colorcode: res.units[unit].colorcode,\r\n                        contacts: res.units[unit].contacts,\r\n                        nextservicedate: res.units[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.units[unit].controllerid,\r\n                        neaplateno: res.units[unit].neaplateno,\r\n                        companys_id: res.units[unit].companys_id,\r\n                        unitgroups_id: res.units[unit].unitgroups_id,\r\n                        runninghr: res.units[unit].runninghr,\r\n                        models_id: res.units[unit].models_id,\r\n                        alarmnotificationto: res.units[unit].alarmnotificationto,\r\n                        viewonid: res.units[unit].viewonid,\r\n                        genstatus: res.units[unit].genstatus,\r\n                        favoriteindication: favorite,\r\n                        latitude: res.units[unit].latitude,\r\n                        longtitude: res.units[unit].longtitude\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        // this.presentLoading(0);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    MapsPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doUser();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    MapsPage.prototype.mapunitdetail = function (item) {\r\n        this.navCtrl.setRoot(UnitdetailsPage, {\r\n            record: item\r\n        });\r\n    };\r\n    MapsPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userid;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        if (this.VIEWACCESS > 0) {\r\n            this.reportData.startindex = 0;\r\n            this.reportData.sort = \"unit_id\";\r\n            this.doUser();\r\n        }\r\n        // console.log(this.apiServiceURL + \"/api/webview/map.php?is_mobile=1&loginid=1&startindex=0&results=8&sort=unit_id&dir=desc\");\r\n        this.loadMap(0);\r\n    };\r\n    /*loadMap(val) {\r\n      console.log(\"A\" + JSON.stringify(val));\r\n      console.log(\"B\" + val.length);\r\n      if (JSON.stringify(val).length > 0) {\r\n        this.reportData.startindex = 0;\r\n        this.reportData.results = 8;\r\n      }\r\n      var typestr: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        headersstr: any = new Headers({ 'Content-Type': typestr }),\r\n        optionsstr: any = new RequestOptions({ headers: headersstr }),\r\n        urlstr: any = this.apiServiceURL + \"/dashboard?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&loginid=\" + this.userid + \"&company_id=\" + this.companyid;\r\n      console.log(\"Map Marker api url:\" + urlstr);\r\n      var res;\r\n      var latLng\r\n      this.http.get(urlstr, optionsstr)\r\n        .subscribe(data => {\r\n          res = data.json();\r\n  \r\n          if (res.totalCount > 0) {\r\n            for (var unit in res.units) {\r\n              if (val == 0) {\r\n                var labeldata = '<div class=\"info_content\">' +\r\n                  '<h3>' + res.units[unit].unitname + '</h3>' +\r\n                  '<h4>' + res.units[unit].projectname + '</h4>' +\r\n                  '<p>Running Hours:' + res.units[unit].runninghr + ' Hours</p>' + '</div>';\r\n                this.addressData.push({\r\n                  title: labeldata\r\n                });\r\n                latLng = new google.maps.LatLng(res.units[unit].latitude, res.units[unit].longtitude);\r\n  \r\n                // Creating a marker and putting it on the map\r\n                var marker = new google.maps.Marker({\r\n                  position: latLng,\r\n                  map: map,\r\n                  title: res.units[unit].unitname,\r\n                  infoContent: labeldata,\r\n                  icon: this.apiServiceURL + \"/images/completed.png\"\r\n                });\r\n                var infoWindow = new google.maps.InfoWindow();\r\n                (function (marker, data, unit, addressData) {\r\n                  // Attaching a click event to the current marker\r\n                  google.maps.event.addListener(marker, \"click\", function (e) {\r\n                    console.log(e);\r\n                    //this.startTheIterations();\r\n                    infoWindow.setContent(addressData[unit].title);\r\n                    infoWindow.open(map, marker);\r\n  \r\n                  });\r\n                })(marker, data, unit, this.addressData);\r\n  \r\n                google.maps.event.addListener(infoWindow, \"**domready**\", function () {\r\n                  var Cancel = document.getElementById(\"Cancel\");\r\n                  var Ok = document.getElementById(\"Ok\");\r\n  \r\n                  google.maps.event.addDomListener(Cancel, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n                  });\r\n  \r\n                  google.maps.event.addDomListener(Ok, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n  \r\n                  });\r\n                });\r\n  \r\n                google.maps.event.addListener(infoWindow, \"domready\", function () {\r\n                  var Cancel = document.getElementById(\"Cancel\");\r\n                  var Ok = document.getElementById(\"Ok\");\r\n  \r\n                  google.maps.event.addDomListener(Cancel, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n                  });\r\n  \r\n                  google.maps.event.addDomListener(Ok, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n  \r\n                  });\r\n                });\r\n  \r\n              } else {\r\n                var labeldata = '<div class=\"info_content\">' +\r\n                  '<h3>' + val.unitname + '</h3>' +\r\n                  '<h4>' + val.projectname + '</h4>' +\r\n                  '<p>Running Hours:' + val.runninghr + ' Hours</p>' + '</div>';\r\n                latLng = new google.maps.LatLng(val.latitude, val.longtitude);\r\n                // Creating a marker and putting it on the map\r\n                var marker = new google.maps.Marker({\r\n                  position: latLng,\r\n                  map: map,\r\n                  title: val.unitname,\r\n                  infoContent: labeldata,\r\n                  //  icon: iconBase + 'parking_lot_maps.png'\r\n  \r\n                  icon: this.apiServiceURL + \"/images/completed.png\"\r\n                });\r\n                var infoWindow = new google.maps.InfoWindow();\r\n                (function (marker, data, addressData) {\r\n                  // Attaching a click event to the current marker\r\n                  google.maps.event.addListener(marker, \"click\", function (e) {\r\n                    //this.startTheIterations();\r\n                    infoWindow.setContent(addressData);\r\n                    infoWindow.open(map, marker);\r\n                  });\r\n  \r\n                })(marker, data, labeldata);\r\n  \r\n                google.maps.event.addListener(infoWindow, \"**domready**\", function () {\r\n                  var Cancel = document.getElementById(\"Cancel\");\r\n                  var Ok = document.getElementById(\"Ok\");\r\n  \r\n                  google.maps.event.addDomListener(Cancel, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n                  });\r\n  \r\n                  google.maps.event.addDomListener(Ok, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n  \r\n                  });\r\n                });\r\n  \r\n                google.maps.event.addListener(infoWindow, \"domready\", function () {\r\n                  var Cancel = document.getElementById(\"Cancel\");\r\n                  var Ok = document.getElementById(\"Ok\");\r\n  \r\n                  google.maps.event.addDomListener(Cancel, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n                  });\r\n  \r\n                  google.maps.event.addDomListener(Ok, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n  \r\n                  });\r\n                });\r\n              }\r\n  \r\n              // Copied from below\r\n              if (val != 0) {\r\n                console.log(\"Selected unit id is:\" + JSON.stringify(val));\r\n                console.log('From zero for popup' + JSON.stringify(res.units))\r\n                let unitcontent;\r\n                unitcontent = '<div class=\"info_content\">' +\r\n                  '<h3>' + val.unitname + '</h3>' +\r\n                  '<h4>' + val.projectname + '</h4>' +\r\n                  '<p>Running Hours:' + val.runninghr + ' Hours</p>' + '</div>';\r\n                //this.startTheIterations();\r\n                infoWindow.setContent(unitcontent);\r\n                infoWindow.open(map, marker);\r\n  \r\n  \r\n  \r\n  \r\n  \r\n                google.maps.event.addListener(infoWindow, \"**domready**\", function () {\r\n                  var Cancel = document.getElementById(\"Cancel\");\r\n                  var Ok = document.getElementById(\"Ok\");\r\n  \r\n                  google.maps.event.addDomListener(Cancel, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n                  });\r\n  \r\n                  google.maps.event.addDomListener(Ok, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n  \r\n                  });\r\n                });\r\n  \r\n                google.maps.event.addListener(infoWindow, \"domready\", function () {\r\n                  var Cancel = document.getElementById(\"Cancel\");\r\n                  var Ok = document.getElementById(\"Ok\");\r\n  \r\n                  google.maps.event.addDomListener(Cancel, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n                  });\r\n  \r\n                  google.maps.event.addDomListener(Ok, \"click\", function () {\r\n                    this.mapunitdetail(val);\r\n                    infoWindow.close();\r\n  \r\n                  });\r\n                });\r\n              }\r\n              // Copied from below\r\n            }\r\n          }\r\n        },\r\n        err => {\r\n          console.log(\"Map error:-\" + JSON.stringify(err));\r\n        });\r\n  \r\n      // Creating a new map\r\n  \r\n      if (val == 0) {\r\n        console.log(\"Default Loading...\");\r\n        var map = new google.maps.Map(document.getElementById(\"map\"), {\r\n          center: new google.maps.LatLng(1.3249773, 103.70307100000002),\r\n          zoom: 11,\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP\r\n        });\r\n      } else {\r\n  \r\n        console.log(\"Selected Unit...\");\r\n        var map = new google.maps.Map(document.getElementById(\"map\"), {\r\n          center: new google.maps.LatLng(val.latitude, val.longtitude),\r\n          zoom: 16,\r\n          mapTypeId: google.maps.MapTypeId.ROADMAP\r\n        });\r\n  \r\n      }\r\n    }\r\n  */\r\n    /* loadMap(val) {\r\n   \r\n       this.mapElement = document.getElementById('map');\r\n   \r\n       let mapOptions: GoogleMapOptions = {\r\n         camera: {\r\n           target: {\r\n             lat: 43.0741904,\r\n             lng: -89.3809802\r\n           },\r\n           zoom: 18,\r\n           tilt: 30\r\n         }\r\n       };\r\n   \r\n       this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n   \r\n       // Wait the MAP_READY before using any methods.\r\n       this.map.one(GoogleMapsEvent.MAP_READY)\r\n         .then(() => {\r\n           console.log('Map is ready!');\r\n   \r\n           // Now you can use all methods safely.\r\n           this.map.addMarker({\r\n             title: 'Contact',\r\n             icon: 'blue',\r\n             animation: 'DROP',\r\n             position: {\r\n               lat: 43.0741904,\r\n               lng: -89.3809802\r\n             }\r\n           })\r\n             .then(marker => {\r\n               marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                 .subscribe((data) => {\r\n                   console.log(JSON.stringify(data));\r\n                   //alert('marker clicked');\r\n                 });\r\n   \r\n               marker.on(GoogleMapsEvent.INFO_CLICK)\r\n                 .subscribe((data) => {\r\n                   console.log(JSON.stringify(data));\r\n                   this.goAboutPage();\r\n                 });\r\n   \r\n             });\r\n         });\r\n   \r\n     }\r\n   */\r\n    /* loadMap(val) {\r\n    \r\n    \r\n        // Now you can use all methods safely.\r\n    \r\n    \r\n    \r\n    \r\n        console.log(\"A\" + JSON.stringify(val));\r\n        console.log(\"B\" + val.length);\r\n        if (JSON.stringify(val).length > 0) {\r\n          this.reportData.startindex = 0;\r\n          this.reportData.results = 8;\r\n        }\r\n        let typestr: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n          headersstr: any = new Headers({ 'Content-Type': typestr }),\r\n          optionsstr: any = new RequestOptions({ headers: headersstr }),\r\n          urlstr: any = this.apiServiceURL + \"/dashboard?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&loginid=\" + this.userid + \"&company_id=\" + this.companyid;\r\n        console.log(\"Map Marker api url:\" + urlstr);\r\n        let res;\r\n        let latLng\r\n        this.http.get(urlstr, optionsstr)\r\n          .subscribe(data => {\r\n    \r\n            this.mapElement = document.getElementById('map');\r\n    \r\n           \r\n    \r\n    \r\n            // Creating a new map\r\n    \r\n            if (val == 0) {\r\n              console.log(\"Default Loading...\");\r\n            \r\n    \r\n              let mapOptions: GoogleMapOptions = {\r\n                camera: {\r\n                  target: {\r\n                    lat: 1.3249773,\r\n                    lng: 103.70307100000002\r\n                  },\r\n                  zoom: 16,\r\n                  tilt: 30\r\n                }\r\n              };\r\n              this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n            } else {\r\n    \r\n              console.log(\"Selected Unit...\");\r\n          \r\n              let mapOptions: GoogleMapOptions = {\r\n                camera: {\r\n                  target: {\r\n                    lat: val.latitude,\r\n                    lng: val.longtitude\r\n                  },\r\n                  zoom: 18,\r\n                  tilt: 30\r\n                }\r\n              };\r\n              this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n            }\r\n    \r\n    \r\n    \r\n            // Wait the MAP_READY before using any methods.\r\n    \r\n            res = data.json();\r\n    \r\n            if (res.totalCount > 0) {\r\n              for (var unit in res.units) {\r\n                if (val == 0) {\r\n                  //Google Map Start\r\n                  this.map.one(GoogleMapsEvent.MAP_READY)\r\n                    .then(() => {\r\n                      console.log('Map is ready!');\r\n                      //Google Map Start\r\n    \r\n                      console.log('P');\r\n                    \r\n    \r\n                      let labeldata = '<div class=\"info_content\">' +\r\n                        '<h3>' + res.units[unit].unitname + '</h3>' +\r\n                        '<h4>' + res.units[unit].projectname + '</h4>' +\r\n                        '<p>Running Hours:' + res.units[unit].runninghr + ' Hours</p>' + '</div>';\r\n    \r\n    \r\n                      // this.addMarkerList(labeldata, res.units[unit].latitude, res.units[unit].longtitude, res.units[unit]);\r\n                      console.log(\"Title:\" + res.units[unit].unitname);\r\n                      console.log(\"Lat:\" + res.units[unit].latitude);\r\n                      console.log(\"Long:\" + res.units[unit].longtitude);\r\n                      console.log(\"Marker Data:\" + JSON.stringify(res.units[unit]));\r\n                     // let htmlcontent=this.map.GoogleMapsEvent.HtmlInfoWindow\r\n                      this.map.addMarker({\r\n                        title: labeldata,\r\n                        icon: this.apiServiceURL + \"/images/completed.png\",\r\n                        animation: 'DROP',\r\n                        position: {\r\n                          lat: res.units[unit].latitude,\r\n                          lng: res.units[unit].longtitude\r\n                        }\r\n                      })\r\n                        .then(marker => {\r\n                          marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                            .subscribe((data) => {\r\n                              console.log(JSON.stringify(data));\r\n                              //alert('marker clicked');\r\n                            });\r\n    \r\n                          marker.on(GoogleMapsEvent.INFO_CLICK)\r\n                            .subscribe((data) => {\r\n                              console.log(JSON.stringify(data));\r\n                              this.mapunitdetail(res.units[unit]);\r\n                            });\r\n    \r\n                        });\r\n                      // Google Map End\r\n                    \r\n                    });\r\n                  // Google Map End\r\n                } else {\r\n                  //Google Map Start\r\n                  this.map.one(GoogleMapsEvent.MAP_READY)\r\n                    .then(() => {\r\n                      console.log('Map is ready!');\r\n                      //Google Map Start\r\n    \r\n                      console.log('Q');\r\n                     \r\n    \r\n                      let labeldata = '<div class=\"info_content\">' +\r\n                        '<h3>' + val.unitname + '</h3>' +\r\n                        '<h4>' + val.projectname + '</h4>' +\r\n                        '<p>Running Hours:' + val.runninghr + ' Hours</p>' + '</div>';\r\n    \r\n                      //this.addMarkerList(labeldata, val.lat, val.lng, val);\r\n                      console.log(\"Title:\" + val.unit_name);\r\n                      console.log(\"Lat:\" + val.latitude);\r\n                      console.log(\"Long:\" + val.longtitude);\r\n                      console.log(\"Marker Data:\" + JSON.stringify(val));\r\n                      this.map.addMarker({\r\n                        title: labeldata,\r\n                        icon: this.apiServiceURL + \"/images/completed.png\",\r\n                        animation: 'DROP',\r\n                        position: {\r\n                          lat: val.latitude,\r\n                          lng: val.longtitude\r\n                        }\r\n                      })\r\n                        .then(marker => {\r\n                          marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                            .subscribe((data) => {\r\n                              console.log(JSON.stringify(data));\r\n                              //alert('marker clicked');\r\n                            });\r\n    \r\n                          marker.on(GoogleMapsEvent.INFO_CLICK)\r\n                            .subscribe((data) => {\r\n                              console.log(JSON.stringify(data));\r\n                              this.mapunitdetail(val);\r\n                            });\r\n    \r\n                        });\r\n                      // Google Map End\r\n                    });\r\n                  // Google Map End\r\n                }\r\n    \r\n                // Copied from below\r\n                if (val != 0) {\r\n                  //Google Map Start\r\n                  this.map.one(GoogleMapsEvent.MAP_READY)\r\n                    .then(() => {\r\n                      console.log('Map is ready!');\r\n                      //Google Map Start\r\n                      console.log('R');\r\n                     \r\n    \r\n                      let unitcontent;\r\n                      unitcontent = '<div class=\"info_content\">' +\r\n                        '<h3>' + val.unitname + '</h3>' +\r\n                        '<h4>' + val.projectname + '</h4>' +\r\n                        '<p>Running Hours:' + val.runninghr + ' Hours</p>' + '</div>';\r\n    \r\n                      //this.addMarkerList(unitcontent, val.lat, val.lng, val);\r\n    \r\n                      console.log(\"Title:\" + val.unit_name);\r\n                      console.log(\"Lat:\" + val.latitude);\r\n                      console.log(\"Long:\" + val.longtitude);\r\n                      console.log(\"Marker Data:\" + JSON.stringify(val));\r\n                      this.map.addMarker({\r\n                        title: unitcontent,\r\n                        icon:this.apiServiceURL + \"/images/completed.png\",\r\n                        animation: 'DROP',\r\n                        position: {\r\n                          lat: val.latitude,\r\n                          lng: val.longtitude\r\n                        }\r\n                      })\r\n                        .then(marker => {\r\n                          marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                            .subscribe((data) => {\r\n                              console.log(JSON.stringify(data));\r\n                              //alert('marker clicked');\r\n                            });\r\n    \r\n                          marker.on(GoogleMapsEvent.INFO_CLICK)\r\n                            .subscribe((data) => {\r\n                              console.log(JSON.stringify(data));\r\n                              this.mapunitdetail(val);\r\n                            });\r\n    \r\n                        });\r\n    \r\n    \r\n    \r\n    \r\n                      // Google Map End\r\n                    });\r\n                  // Google Map End\r\n    \r\n                }\r\n                // Copied from below\r\n              }\r\n            }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          },\r\n          err => {\r\n            console.log(\"Map error:-\" + JSON.stringify(err));\r\n          });\r\n      }\r\n      */\r\n    /*loadMap(val) {\r\n      this.mapElement = document.getElementById('map');\r\n  \r\n      let mapOptions: GoogleMapOptions = {\r\n        camera: {\r\n          target: {\r\n            lat: 1.3249773,\r\n            lng: 103.70307100000002\r\n          },\r\n          zoom: 11,\r\n          tilt: 30\r\n        }\r\n      };\r\n  \r\n      this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n  \r\n      // Wait the MAP_READY before using any methods.\r\n      this.map.one(GoogleMapsEvent.MAP_READY)\r\n        .then(() => {\r\n          console.log('Map is ready!');\r\n          this.addMarkerList('Generator 1', 1.3249695, 103.70373829999994, '');\r\n          this.addMarkerList('Generator 2', 1.3249689, 103.7037382675, '');\r\n          this.addMarkerList('Generator 10', 35.6894875, 139.69170639999993, '');\r\n          this.addMarkerList('Gen 85868', 1.32497, 103.703738, '');\r\n          this.addMarkerList('Geylang Serial Market', 1.3209146, 103.703738, '');\r\n          this.addMarkerList('Seng Kee Black Chicken Herbal Sou', 1.3207001, 103.888853, '');\r\n          // Loop End Here\r\n        });\r\n  \r\n  \r\n    }*/\r\n    MapsPage.prototype.loadMap = function (val) {\r\n        var _this = this;\r\n        this.mapElement = document.getElementById('map');\r\n        var mapOptions = {\r\n            camera: {\r\n                target: {\r\n                    lat: 43.0741904,\r\n                    lng: -89.3809802\r\n                },\r\n                zoom: 18,\r\n                tilt: 30\r\n            }\r\n        };\r\n        this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n        // Wait the MAP_READY before using any methods.\r\n        this.map.one(GoogleMapsEvent.MAP_READY)\r\n            .then(function () {\r\n            console.log('Map is ready!');\r\n            // Now you can use all methods safely.\r\n            _this.map.addMarker({\r\n                title: 'Ionic',\r\n                icon: 'blue',\r\n                animation: 'DROP',\r\n                position: {\r\n                    lat: 43.0741904,\r\n                    lng: -89.3809802\r\n                }\r\n            })\r\n                .then(function (marker) {\r\n                marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                    .subscribe(function () {\r\n                    alert('clicked');\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /*\r\n      loadMap(val) {\r\n     \r\n     \r\n        // Now you can use all methods safely.\r\n     \r\n     \r\n     \r\n     \r\n        console.log(\"A\" + JSON.stringify(val));\r\n        console.log(\"B\" + val.length);\r\n        if (JSON.stringify(val).length > 0) {\r\n          this.reportData.startindex = 0;\r\n          this.reportData.results = 8;\r\n        }\r\n        let typestr: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n          headersstr: any = new Headers({ 'Content-Type': typestr }),\r\n          optionsstr: any = new RequestOptions({ headers: headersstr }),\r\n          urlstr: any = this.apiServiceURL + \"/dashboard?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&loginid=\" + this.userid + \"&company_id=\" + this.companyid;\r\n        console.log(\"Map Marker api url:\" + urlstr);\r\n        let res;\r\n        let latLng\r\n        this.http.get(urlstr, optionsstr)\r\n          .subscribe(data => {\r\n     \r\n            this.mapElement = document.getElementById('map');\r\n     \r\n     \r\n     \r\n     \r\n            // Creating a new map\r\n     \r\n            if (val == 0) {\r\n              console.log(\"Default Loading...\");\r\n     \r\n     \r\n              let mapOptions: GoogleMapOptions = {\r\n                camera: {\r\n                  target: {\r\n                    lat: 1.3249773,\r\n                    lng: 103.70307100000002\r\n                  },\r\n                  zoom: 18,\r\n                  tilt: 30\r\n                }\r\n              };\r\n              this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n            } else {\r\n     \r\n              console.log(\"Selected Unit...\");\r\n     \r\n              let mapOptions: GoogleMapOptions = {\r\n                camera: {\r\n                  target: {\r\n                    lat: val.latitude,\r\n                    lng: val.longtitude\r\n                  },\r\n                  zoom: 18,\r\n                  tilt: 30\r\n                }\r\n              };\r\n              this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n            }\r\n     \r\n     \r\n     \r\n            // Wait the MAP_READY before using any methods.\r\n     \r\n            res = data.json();\r\n     \r\n            if (res.totalCount > 0) {\r\n              for (var unit in res.units) {\r\n                if (val == 0) {\r\n                  //Google Map Start\r\n                  this.map.one(GoogleMapsEvent.MAP_READY)\r\n                    .then(() => {\r\n                      console.log('Map is ready!');\r\n                      //Google Map Start\r\n     \r\n                      console.log('P');\r\n     \r\n     \r\n                      let labeldata = '<div class=\"info_content\">' +\r\n                        '<h3>' + res.units[unit].unitname + '</h3>' +\r\n                        '<h4>' + res.units[unit].projectname + '</h4>' +\r\n                        '<p>Running Hours:' + res.units[unit].runninghr + ' Hours</p>' + '</div>';\r\n     \r\n     \r\n                      this.addMarkerList(labeldata, res.units[unit].latitude, res.units[unit].longtitude, res.units[unit]);\r\n     \r\n                      // Google Map End\r\n     \r\n                    });\r\n                  // Google Map End\r\n                } else {\r\n                  //Google Map Start\r\n                  this.map.one(GoogleMapsEvent.MAP_READY)\r\n                    .then(() => {\r\n                      console.log('Map is ready!');\r\n                      //Google Map Start\r\n     \r\n                      console.log('Q');\r\n     \r\n     \r\n                      let labeldata = '<div class=\"info_content\">' +\r\n                        '<h3>' + val.unitname + '</h3>' +\r\n                        '<h4>' + val.projectname + '</h4>' +\r\n                        '<p>Running Hours:' + val.runninghr + ' Hours</p>' + '</div>';\r\n     \r\n                      this.addMarkerList(labeldata, val.lat, val.lng, val);\r\n     \r\n                      // Google Map End\r\n                    });\r\n                  // Google Map End\r\n                }\r\n     \r\n                // Copied from below\r\n                if (val != 0) {\r\n                  //Google Map Start\r\n                  this.map.one(GoogleMapsEvent.MAP_READY)\r\n                    .then(() => {\r\n                      console.log('Map is ready!');\r\n                      //Google Map Start\r\n                      console.log('R');\r\n     \r\n     \r\n                      let unitcontent;\r\n                      unitcontent = '<div class=\"info_content\">' +\r\n                        '<h3>' + val.unitname + '</h3>' +\r\n                        '<h4>' + val.projectname + '</h4>' +\r\n                        '<p>Running Hours:' + val.runninghr + ' Hours</p>' + '</div>';\r\n     \r\n                      this.addMarkerList(unitcontent, val.lat, val.lng, val);\r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n                      // Google Map End\r\n                    });\r\n                  // Google Map End\r\n     \r\n                }\r\n                // Copied from below\r\n              }\r\n            }\r\n          },\r\n          err => {\r\n            console.log(\"Map error:-\" + JSON.stringify(err));\r\n          });\r\n      }\r\n      */\r\n    MapsPage.prototype.addMarkerList = function (title, lat, lng, dataunit) {\r\n        var _this = this;\r\n        console.log(\"Calling.... Marker Display Function\");\r\n        console.log(\"Title:\" + title);\r\n        console.log(\"Latitude:\" + lat);\r\n        console.log(\"Longtitude:\" + lng);\r\n        console.log(\"Unit Data:\" + dataunit);\r\n        var labeldata = 'Unit Name:' + dataunit.unitname + '-' +\r\n            'Project Name:' + dataunit.projectname + '-' +\r\n            'Running Hours:' + dataunit.runninghr + ' Hour';\r\n        this.map.addMarker({\r\n            //title: labeldata,\r\n            title: title,\r\n            icon: this.apiServiceURL + \"/images/completed.png\",\r\n            //icon: 'blue',\r\n            animation: 'DROP',\r\n            position: {\r\n                lat: lat,\r\n                lng: lng\r\n            }\r\n        })\r\n            .then(function (marker) {\r\n            marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                .subscribe(function () {\r\n                //this.mapunitdetail(data);\r\n            });\r\n            marker.on(GoogleMapsEvent.INFO_CLICK)\r\n                .subscribe(function (data) {\r\n                console.log(JSON.stringify(data));\r\n                _this.mapunitdetail(dataunit);\r\n            });\r\n        });\r\n    };\r\n    MapsPage.prototype.doAdd = function () {\r\n        this.navCtrl.setRoot(AddunitsonePage);\r\n    };\r\n    MapsPage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.navCtrl.setRoot(AddunitsonePage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n        else if (act == 'detail') {\r\n            this.navCtrl.setRoot(UnitdetailsPage, {\r\n                record: item\r\n            });\r\n            return false;\r\n        }\r\n        else {\r\n            this.navCtrl.setRoot(ViewcompanygroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    /******************************************/\r\n    /* @doConfirm called for alert dialog box **/\r\n    /******************************************/\r\n    MapsPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this user?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    MapsPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    MapsPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUser();\r\n    };\r\n    /********************/\r\n    /* Sorting function */\r\n    /********************/\r\n    MapsPage.prototype.doSort = function (val) {\r\n        console.log('1');\r\n        this.reportAllLists = [];\r\n        this.reportData.startindex = 0;\r\n        console.log('2');\r\n        this.sortby = 1;\r\n        if (this.vendorsort == \"asc\") {\r\n            this.reportData.sortascdesc = \"desc\";\r\n            this.vendorsort = \"desc\";\r\n            this.ascending = false;\r\n            console.log('3');\r\n        }\r\n        else {\r\n            console.log('4');\r\n            this.reportData.sortascdesc = \"asc\";\r\n            this.vendorsort = \"asc\";\r\n            this.ascending = true;\r\n        }\r\n        console.log('5');\r\n        this.reportData.sort = val;\r\n        this.doUser();\r\n        console.log('6');\r\n    };\r\n    /*presentLoading(parm) {\r\n      let loader;\r\n      loader = this.loadingCtrl.create({\r\n        content: \"Please wait...\",\r\n        duration: 3000\r\n      });\r\n      if (parm > 0) {\r\n        loader.present();\r\n      } else {\r\n        loader.dismiss();\r\n      }\r\n    }*/\r\n    MapsPage.prototype.redirectToUnitGroup = function () {\r\n        this.navCtrl.setRoot(UnitgroupPage);\r\n    };\r\n    MapsPage.prototype.redirectToCompanyGroup = function () {\r\n        this.navCtrl.setRoot(CompanygroupPage);\r\n    };\r\n    MapsPage.prototype.redirectToUnits = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    MapsPage.prototype.redirectToMyAccount = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    MapsPage.prototype.redirectToRole = function () {\r\n        this.navCtrl.setRoot(RolePage);\r\n    };\r\n    MapsPage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(HomePage);\r\n    };\r\n    MapsPage.prototype.favorite = function (unit_id) {\r\n        var _this = this;\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        var body = \"unitid=\" + unit_id + \"&is_mobile=1\" + \"&loginid=\" + this.userid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/setunitfavorite\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            var res = data.json();\r\n            console.log(res.msg[0].Error);\r\n            console.log(res.msg[0].result);\r\n            if (res.msg[0] == 0) {\r\n                console.log(\"Favorite\");\r\n            }\r\n            else {\r\n                console.log(\"Un Favorite\");\r\n            }\r\n            if (res.units.length > 0) {\r\n                for (var unit in res.units) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.units[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.units[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.units[unit].unit_id,\r\n                        unitname: res.units[unit].unitname,\r\n                        location: res.units[unit].location,\r\n                        contacts: res.units[unit].contacts,\r\n                        projectname: res.units[unit].projectname,\r\n                        colorcode: res.units[unit].colorcode,\r\n                        nextservicedate: res.units[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.units[unit].controllerid,\r\n                        neaplateno: res.units[unit].neaplateno,\r\n                        companys_id: res.units[unit].companys_id,\r\n                        unitgroups_id: res.units[unit].unitgroups_id,\r\n                        models_id: res.units[unit].models_id,\r\n                        alarmnotificationto: res.units[unit].alarmnotificationto,\r\n                        viewonid: res.units[unit].viewonid,\r\n                        favoriteindication: favorite,\r\n                        latitude: res.units[unit].latitude,\r\n                        longtitude: res.units[unit].longtitude\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(res.msg[0].result);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        this.doUser();\r\n    };\r\n    MapsPage.prototype.getCheckBoxValue = function (item, val, val1) {\r\n        /*console.log(\"Available data\" + val);\r\n        this.getCheckboxData.push({\r\n          availabledata: val\r\n        })*/\r\n        /*console.log(\"Available data\" + name);\r\n      this.selectedAction.push({\r\n      availabledata: name\r\n      })\r\n      console.log(JSON.stringify(this.selectedAction));*/\r\n        if (val != '') {\r\n            if (this.str == '') {\r\n                this.str = val;\r\n            }\r\n            else {\r\n                this.str = this.str + \",\" + val;\r\n            }\r\n        }\r\n        if (val1 != '') {\r\n            if (this.str1 == '') {\r\n                this.str1 = val1;\r\n            }\r\n            else {\r\n                this.str1 = this.str1 + \",\" + val1;\r\n            }\r\n        }\r\n        console.log(this.str + \"//\" + this.str1);\r\n        this.detailvalue = item;\r\n        localStorage.setItem(\"unitunitname\", item.unitname);\r\n        localStorage.setItem(\"unitlocation\", item.location);\r\n        localStorage.setItem(\"unitprojectname\", item.projectname);\r\n        localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n        localStorage.setItem(\"unitlat\", item.lat);\r\n        localStorage.setItem(\"unitlng\", item.lng);\r\n        localStorage.setItem(\"runninghr\", item.runninghr);\r\n        localStorage.setItem(\"nsd\", item.nextservicedate);\r\n        console.log(this.str + \"//\" + JSON.stringify(this.detailvalue));\r\n        localStorage.setItem(\"viewlist\", this.str);\r\n    };\r\n    MapsPage.prototype.onAction = function (act) {\r\n        var _this = this;\r\n        var urlstr;\r\n        if (act == 'view') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                var item = void 0;\r\n                item = this.detailvalue;\r\n                localStorage.setItem(\"unitId\", item.unit_id);\r\n                localStorage.setItem(\"iframeunitId\", item.unit_id);\r\n                localStorage.setItem(\"unitunitname\", item.unitname);\r\n                localStorage.setItem(\"unitlocation\", item.location);\r\n                localStorage.setItem(\"unitprojectname\", item.projectname);\r\n                localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n                localStorage.setItem(\"unitlat\", item.lat);\r\n                localStorage.setItem(\"unitlng\", item.lng);\r\n                localStorage.setItem(\"runninghr\", item.runninghr);\r\n                localStorage.setItem(\"nsd\", item.nextservicedate);\r\n                this.navCtrl.setRoot(UnitdetailsPage, {\r\n                    record: this.detailvalue\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (act == 'hide') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                urlstr = \"/dashboardaction?id=\" + this.str1 + \"&action=hide&is_mobile=1&loginid=\" + this.userid;\r\n            }\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + urlstr;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            if (act == 'hide') {\r\n                _this.sendNotification(\"Dashboard hide action successfully updated\");\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                //this.loadMap(0);\r\n                _this.reportData.startindex = 0;\r\n                _this.reportData.sort = \"unit_id\";\r\n                //this.doUser();\r\n                _this.pageLoad();\r\n                _this.navCtrl.setRoot(_this.navCtrl.getActive().component);\r\n            }\r\n            else {\r\n                // this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    MapsPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    MapsPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    MapsPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    MapsPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    MapsPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage_1);\r\n    };\r\n    MapsPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    MapsPage.prototype.goAboutPage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    return MapsPage;\r\n}());\r\nMapsPage = MapsPage_1 = __decorate([\r\n    Component({\r\n        selector: 'page-maps',\r\n        templateUrl: 'maps.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Platform !== \"undefined\" && Platform) === \"function\" && _a || Object, typeof (_b = typeof GoogleMaps !== \"undefined\" && GoogleMaps) === \"function\" && _b || Object, typeof (_c = typeof Http !== \"undefined\" && Http) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _f || Object, typeof (_g = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _g || Object, typeof (_h = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _h || Object, typeof (_j = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _j || Object])\r\n], MapsPage);\r\nexport { MapsPage };\r\nvar MapsPage_1, _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n//# sourceMappingURL=maps.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maps/maps.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport 'rxjs/add/operator/map';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddcompanygroupPage = (function () {\r\n    function AddcompanygroupPage(nav, http, NP, fb, toastCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.isSubmitted = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"companygroup_name\": [\"\", Validators.required],\r\n            \"country\": [\"\", Validators.required],\r\n            \"contact\": [\"\", Validators.required],\r\n            \"primary\": [\"\", Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(5)])],\r\n            \"address\": [\"\"]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddcompanygroupPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddcompanygroupPage');\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddcompanygroupPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.borderbottomredvalidation = '';\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getJsonCountryListData();\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit Company Group';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New Company Group';\r\n        }\r\n        this.currencyList = [\r\n            'INR',\r\n            'GBP',\r\n            'USD',\r\n            'NZD'\r\n        ];\r\n        this.selectedCountry = [];\r\n        this.countries = [{\r\n                name: \"United States\",\r\n                dial_code: \"+1\",\r\n                code: \"US\"\r\n            }, {\r\n                name: \"Israel\",\r\n                dial_code: \"+972\",\r\n                code: \"IL\"\r\n            }, {\r\n                name: \"Afghanistan\",\r\n                dial_code: \"+93\",\r\n                code: \"AF\"\r\n            }, {\r\n                name: \"Albania\",\r\n                dial_code: \"+355\",\r\n                code: \"AL\"\r\n            }, {\r\n                name: \"Algeria\",\r\n                dial_code: \"+213\",\r\n                code: \"DZ\"\r\n            }, {\r\n                name: \"AmericanSamoa\",\r\n                dial_code: \"+1 684\",\r\n                code: \"AS\"\r\n            }, {\r\n                name: \"Andorra\",\r\n                dial_code: \"+376\",\r\n                code: \"AD\"\r\n            }, {\r\n                name: \"Angola\",\r\n                dial_code: \"+244\",\r\n                code: \"AO\"\r\n            }, {\r\n                name: \"Anguilla\",\r\n                dial_code: \"+1 264\",\r\n                code: \"AI\"\r\n            }, {\r\n                name: \"Antigua and Barbuda\",\r\n                dial_code: \"+1268\",\r\n                code: \"AG\"\r\n            }, {\r\n                name: \"Argentina\",\r\n                dial_code: \"+54\",\r\n                code: \"AR\"\r\n            }, {\r\n                name: \"Armenia\",\r\n                dial_code: \"+374\",\r\n                code: \"AM\"\r\n            }, {\r\n                name: \"Aruba\",\r\n                dial_code: \"+297\",\r\n                code: \"AW\"\r\n            }, {\r\n                name: \"Australia\",\r\n                dial_code: \"+61\",\r\n                code: \"AU\"\r\n            }, {\r\n                name: \"Austria\",\r\n                dial_code: \"+43\",\r\n                code: \"AT\"\r\n            }, {\r\n                name: \"Azerbaijan\",\r\n                dial_code: \"+994\",\r\n                code: \"AZ\"\r\n            }, {\r\n                name: \"Bahamas\",\r\n                dial_code: \"+1 242\",\r\n                code: \"BS\"\r\n            }, {\r\n                name: \"Bahrain\",\r\n                dial_code: \"+973\",\r\n                code: \"BH\"\r\n            }, {\r\n                name: \"Bangladesh\",\r\n                dial_code: \"+880\",\r\n                code: \"BD\"\r\n            }, {\r\n                name: \"Barbados\",\r\n                dial_code: \"+1 246\",\r\n                code: \"BB\"\r\n            }, {\r\n                name: \"Belarus\",\r\n                dial_code: \"+375\",\r\n                code: \"BY\"\r\n            }, {\r\n                name: \"Belgium\",\r\n                dial_code: \"+32\",\r\n                code: \"BE\"\r\n            }, {\r\n                name: \"Belize\",\r\n                dial_code: \"+501\",\r\n                code: \"BZ\"\r\n            }, {\r\n                name: \"Benin\",\r\n                dial_code: \"+229\",\r\n                code: \"BJ\"\r\n            }, {\r\n                name: \"Bermuda\",\r\n                dial_code: \"+1 441\",\r\n                code: \"BM\"\r\n            }, {\r\n                name: \"Bhutan\",\r\n                dial_code: \"+975\",\r\n                code: \"BT\"\r\n            }, {\r\n                name: \"Bosnia and Herzegovina\",\r\n                dial_code: \"+387\",\r\n                code: \"BA\"\r\n            }, {\r\n                name: \"Botswana\",\r\n                dial_code: \"+267\",\r\n                code: \"BW\"\r\n            }, {\r\n                name: \"Brazil\",\r\n                dial_code: \"+55\",\r\n                code: \"BR\"\r\n            }, {\r\n                name: \"British Indian Ocean Territory\",\r\n                dial_code: \"+246\",\r\n                code: \"IO\"\r\n            }, {\r\n                name: \"Bulgaria\",\r\n                dial_code: \"+359\",\r\n                code: \"BG\"\r\n            }, {\r\n                name: \"Burkina Faso\",\r\n                dial_code: \"+226\",\r\n                code: \"BF\"\r\n            }, {\r\n                name: \"Burundi\",\r\n                dial_code: \"+257\",\r\n                code: \"BI\"\r\n            }, {\r\n                name: \"Cambodia\",\r\n                dial_code: \"+855\",\r\n                code: \"KH\"\r\n            }, {\r\n                name: \"Cameroon\",\r\n                dial_code: \"+237\",\r\n                code: \"CM\"\r\n            }, {\r\n                name: \"Canada\",\r\n                dial_code: \"+1\",\r\n                code: \"CA\"\r\n            }, {\r\n                name: \"Cape Verde\",\r\n                dial_code: \"+238\",\r\n                code: \"CV\"\r\n            }, {\r\n                name: \"Cayman Islands\",\r\n                dial_code: \"+ 345\",\r\n                code: \"KY\"\r\n            }, {\r\n                name: \"Central African Republic\",\r\n                dial_code: \"+236\",\r\n                code: \"CF\"\r\n            }, {\r\n                name: \"Chad\",\r\n                dial_code: \"+235\",\r\n                code: \"TD\"\r\n            }, {\r\n                name: \"Chile\",\r\n                dial_code: \"+56\",\r\n                code: \"CL\"\r\n            }, {\r\n                name: \"China\",\r\n                dial_code: \"+86\",\r\n                code: \"CN\"\r\n            }, {\r\n                name: \"Christmas Island\",\r\n                dial_code: \"+61\",\r\n                code: \"CX\"\r\n            }, {\r\n                name: \"Colombia\",\r\n                dial_code: \"+57\",\r\n                code: \"CO\"\r\n            }, {\r\n                name: \"Comoros\",\r\n                dial_code: \"+269\",\r\n                code: \"KM\"\r\n            }, {\r\n                name: \"Congo\",\r\n                dial_code: \"+242\",\r\n                code: \"CG\"\r\n            }, {\r\n                name: \"Cook Islands\",\r\n                dial_code: \"+682\",\r\n                code: \"CK\"\r\n            }, {\r\n                name: \"Costa Rica\",\r\n                dial_code: \"+506\",\r\n                code: \"CR\"\r\n            }, {\r\n                name: \"Croatia\",\r\n                dial_code: \"+385\",\r\n                code: \"HR\"\r\n            }, {\r\n                name: \"Cuba\",\r\n                dial_code: \"+53\",\r\n                code: \"CU\"\r\n            }, {\r\n                name: \"Cyprus\",\r\n                dial_code: \"+537\",\r\n                code: \"CY\"\r\n            }, {\r\n                name: \"Czech Republic\",\r\n                dial_code: \"+420\",\r\n                code: \"CZ\"\r\n            }, {\r\n                name: \"Denmark\",\r\n                dial_code: \"+45\",\r\n                code: \"DK\"\r\n            }, {\r\n                name: \"Djibouti\",\r\n                dial_code: \"+253\",\r\n                code: \"DJ\"\r\n            }, {\r\n                name: \"Dominica\",\r\n                dial_code: \"+1 767\",\r\n                code: \"DM\"\r\n            }, {\r\n                name: \"Dominican Republic\",\r\n                dial_code: \"+1 849\",\r\n                code: \"DO\"\r\n            }, {\r\n                name: \"Ecuador\",\r\n                dial_code: \"+593\",\r\n                code: \"EC\"\r\n            }, {\r\n                name: \"Egypt\",\r\n                dial_code: \"+20\",\r\n                code: \"EG\"\r\n            }, {\r\n                name: \"El Salvador\",\r\n                dial_code: \"+503\",\r\n                code: \"SV\"\r\n            }, {\r\n                name: \"Equatorial Guinea\",\r\n                dial_code: \"+240\",\r\n                code: \"GQ\"\r\n            }, {\r\n                name: \"Eritrea\",\r\n                dial_code: \"+291\",\r\n                code: \"ER\"\r\n            }, {\r\n                name: \"Estonia\",\r\n                dial_code: \"+372\",\r\n                code: \"EE\"\r\n            }, {\r\n                name: \"Ethiopia\",\r\n                dial_code: \"+251\",\r\n                code: \"ET\"\r\n            }, {\r\n                name: \"Faroe Islands\",\r\n                dial_code: \"+298\",\r\n                code: \"FO\"\r\n            }, {\r\n                name: \"Fiji\",\r\n                dial_code: \"+679\",\r\n                code: \"FJ\"\r\n            }, {\r\n                name: \"Finland\",\r\n                dial_code: \"+358\",\r\n                code: \"FI\"\r\n            }, {\r\n                name: \"France\",\r\n                dial_code: \"+33\",\r\n                code: \"FR\"\r\n            }, {\r\n                name: \"French Guiana\",\r\n                dial_code: \"+594\",\r\n                code: \"GF\"\r\n            }, {\r\n                name: \"French Polynesia\",\r\n                dial_code: \"+689\",\r\n                code: \"PF\"\r\n            }, {\r\n                name: \"Gabon\",\r\n                dial_code: \"+241\",\r\n                code: \"GA\"\r\n            }, {\r\n                name: \"Gambia\",\r\n                dial_code: \"+220\",\r\n                code: \"GM\"\r\n            }, {\r\n                name: \"Georgia\",\r\n                dial_code: \"+995\",\r\n                code: \"GE\"\r\n            }, {\r\n                name: \"Germany\",\r\n                dial_code: \"+49\",\r\n                code: \"DE\"\r\n            }, {\r\n                name: \"Ghana\",\r\n                dial_code: \"+233\",\r\n                code: \"GH\"\r\n            }, {\r\n                name: \"Gibraltar\",\r\n                dial_code: \"+350\",\r\n                code: \"GI\"\r\n            }, {\r\n                name: \"Greece\",\r\n                dial_code: \"+30\",\r\n                code: \"GR\"\r\n            }, {\r\n                name: \"Greenland\",\r\n                dial_code: \"+299\",\r\n                code: \"GL\"\r\n            }, {\r\n                name: \"Grenada\",\r\n                dial_code: \"+1 473\",\r\n                code: \"GD\"\r\n            }, {\r\n                name: \"Guadeloupe\",\r\n                dial_code: \"+590\",\r\n                code: \"GP\"\r\n            }, {\r\n                name: \"Guam\",\r\n                dial_code: \"+1 671\",\r\n                code: \"GU\"\r\n            }, {\r\n                name: \"Guatemala\",\r\n                dial_code: \"+502\",\r\n                code: \"GT\"\r\n            }, {\r\n                name: \"Guinea\",\r\n                dial_code: \"+224\",\r\n                code: \"GN\"\r\n            }, {\r\n                name: \"Guinea-Bissau\",\r\n                dial_code: \"+245\",\r\n                code: \"GW\"\r\n            }, {\r\n                name: \"Guyana\",\r\n                dial_code: \"+595\",\r\n                code: \"GY\"\r\n            }, {\r\n                name: \"Haiti\",\r\n                dial_code: \"+509\",\r\n                code: \"HT\"\r\n            }, {\r\n                name: \"Honduras\",\r\n                dial_code: \"+504\",\r\n                code: \"HN\"\r\n            }, {\r\n                name: \"Hungary\",\r\n                dial_code: \"+36\",\r\n                code: \"HU\"\r\n            }, {\r\n                name: \"Iceland\",\r\n                dial_code: \"+354\",\r\n                code: \"IS\"\r\n            }, {\r\n                name: \"India\",\r\n                dial_code: \"+91\",\r\n                code: \"IN\"\r\n            }, {\r\n                name: \"Indonesia\",\r\n                dial_code: \"+62\",\r\n                code: \"ID\"\r\n            }, {\r\n                name: \"Iraq\",\r\n                dial_code: \"+964\",\r\n                code: \"IQ\"\r\n            }, {\r\n                name: \"Ireland\",\r\n                dial_code: \"+353\",\r\n                code: \"IE\"\r\n            }, {\r\n                name: \"Israel\",\r\n                dial_code: \"+972\",\r\n                code: \"IL\"\r\n            }, {\r\n                name: \"Italy\",\r\n                dial_code: \"+39\",\r\n                code: \"IT\"\r\n            }, {\r\n                name: \"Jamaica\",\r\n                dial_code: \"+1 876\",\r\n                code: \"JM\"\r\n            }, {\r\n                name: \"Japan\",\r\n                dial_code: \"+81\",\r\n                code: \"JP\"\r\n            }, {\r\n                name: \"Jordan\",\r\n                dial_code: \"+962\",\r\n                code: \"JO\"\r\n            }, {\r\n                name: \"Kazakhstan\",\r\n                dial_code: \"+7 7\",\r\n                code: \"KZ\"\r\n            }, {\r\n                name: \"Kenya\",\r\n                dial_code: \"+254\",\r\n                code: \"KE\"\r\n            }, {\r\n                name: \"Kiribati\",\r\n                dial_code: \"+686\",\r\n                code: \"KI\"\r\n            }, {\r\n                name: \"Kuwait\",\r\n                dial_code: \"+965\",\r\n                code: \"KW\"\r\n            }, {\r\n                name: \"Kyrgyzstan\",\r\n                dial_code: \"+996\",\r\n                code: \"KG\"\r\n            }, {\r\n                name: \"Latvia\",\r\n                dial_code: \"+371\",\r\n                code: \"LV\"\r\n            }, {\r\n                name: \"Lebanon\",\r\n                dial_code: \"+961\",\r\n                code: \"LB\"\r\n            }, {\r\n                name: \"Lesotho\",\r\n                dial_code: \"+266\",\r\n                code: \"LS\"\r\n            }, {\r\n                name: \"Liberia\",\r\n                dial_code: \"+231\",\r\n                code: \"LR\"\r\n            }, {\r\n                name: \"Liechtenstein\",\r\n                dial_code: \"+423\",\r\n                code: \"LI\"\r\n            }, {\r\n                name: \"Lithuania\",\r\n                dial_code: \"+370\",\r\n                code: \"LT\"\r\n            }, {\r\n                name: \"Luxembourg\",\r\n                dial_code: \"+352\",\r\n                code: \"LU\"\r\n            }, {\r\n                name: \"Madagascar\",\r\n                dial_code: \"+261\",\r\n                code: \"MG\"\r\n            }, {\r\n                name: \"Malawi\",\r\n                dial_code: \"+265\",\r\n                code: \"MW\"\r\n            }, {\r\n                name: \"Malaysia\",\r\n                dial_code: \"+60\",\r\n                code: \"MY\"\r\n            }, {\r\n                name: \"Maldives\",\r\n                dial_code: \"+960\",\r\n                code: \"MV\"\r\n            }, {\r\n                name: \"Mali\",\r\n                dial_code: \"+223\",\r\n                code: \"ML\"\r\n            }, {\r\n                name: \"Malta\",\r\n                dial_code: \"+356\",\r\n                code: \"MT\"\r\n            }, {\r\n                name: \"Marshall Islands\",\r\n                dial_code: \"+692\",\r\n                code: \"MH\"\r\n            }, {\r\n                name: \"Martinique\",\r\n                dial_code: \"+596\",\r\n                code: \"MQ\"\r\n            }, {\r\n                name: \"Mauritania\",\r\n                dial_code: \"+222\",\r\n                code: \"MR\"\r\n            }, {\r\n                name: \"Mauritius\",\r\n                dial_code: \"+230\",\r\n                code: \"MU\"\r\n            }, {\r\n                name: \"Mayotte\",\r\n                dial_code: \"+262\",\r\n                code: \"YT\"\r\n            }, {\r\n                name: \"Mexico\",\r\n                dial_code: \"+52\",\r\n                code: \"MX\"\r\n            }, {\r\n                name: \"Monaco\",\r\n                dial_code: \"+377\",\r\n                code: \"MC\"\r\n            }, {\r\n                name: \"Mongolia\",\r\n                dial_code: \"+976\",\r\n                code: \"MN\"\r\n            }, {\r\n                name: \"Montenegro\",\r\n                dial_code: \"+382\",\r\n                code: \"ME\"\r\n            }, {\r\n                name: \"Montserrat\",\r\n                dial_code: \"+1664\",\r\n                code: \"MS\"\r\n            }, {\r\n                name: \"Morocco\",\r\n                dial_code: \"+212\",\r\n                code: \"MA\"\r\n            }, {\r\n                name: \"Myanmar\",\r\n                dial_code: \"+95\",\r\n                code: \"MM\"\r\n            }, {\r\n                name: \"Namibia\",\r\n                dial_code: \"+264\",\r\n                code: \"NA\"\r\n            }, {\r\n                name: \"Nauru\",\r\n                dial_code: \"+674\",\r\n                code: \"NR\"\r\n            }, {\r\n                name: \"Nepal\",\r\n                dial_code: \"+977\",\r\n                code: \"NP\"\r\n            }, {\r\n                name: \"Netherlands\",\r\n                dial_code: \"+31\",\r\n                code: \"NL\"\r\n            }, {\r\n                name: \"Netherlands Antilles\",\r\n                dial_code: \"+599\",\r\n                code: \"AN\"\r\n            }, {\r\n                name: \"New Caledonia\",\r\n                dial_code: \"+687\",\r\n                code: \"NC\"\r\n            }, {\r\n                name: \"New Zealand\",\r\n                dial_code: \"+64\",\r\n                code: \"NZ\"\r\n            }, {\r\n                name: \"Nicaragua\",\r\n                dial_code: \"+505\",\r\n                code: \"NI\"\r\n            }, {\r\n                name: \"Niger\",\r\n                dial_code: \"+227\",\r\n                code: \"NE\"\r\n            }, {\r\n                name: \"Nigeria\",\r\n                dial_code: \"+234\",\r\n                code: \"NG\"\r\n            }, {\r\n                name: \"Niue\",\r\n                dial_code: \"+683\",\r\n                code: \"NU\"\r\n            }, {\r\n                name: \"Norfolk Island\",\r\n                dial_code: \"+672\",\r\n                code: \"NF\"\r\n            }, {\r\n                name: \"Northern Mariana Islands\",\r\n                dial_code: \"+1 670\",\r\n                code: \"MP\"\r\n            }, {\r\n                name: \"Norway\",\r\n                dial_code: \"+47\",\r\n                code: \"NO\"\r\n            }, {\r\n                name: \"Oman\",\r\n                dial_code: \"+968\",\r\n                code: \"OM\"\r\n            }, {\r\n                name: \"Pakistan\",\r\n                dial_code: \"+92\",\r\n                code: \"PK\"\r\n            }, {\r\n                name: \"Palau\",\r\n                dial_code: \"+680\",\r\n                code: \"PW\"\r\n            }, {\r\n                name: \"Panama\",\r\n                dial_code: \"+507\",\r\n                code: \"PA\"\r\n            }, {\r\n                name: \"Papua New Guinea\",\r\n                dial_code: \"+675\",\r\n                code: \"PG\"\r\n            }, {\r\n                name: \"Paraguay\",\r\n                dial_code: \"+595\",\r\n                code: \"PY\"\r\n            }, {\r\n                name: \"Peru\",\r\n                dial_code: \"+51\",\r\n                code: \"PE\"\r\n            }, {\r\n                name: \"Philippines\",\r\n                dial_code: \"+63\",\r\n                code: \"PH\"\r\n            }, {\r\n                name: \"Poland\",\r\n                dial_code: \"+48\",\r\n                code: \"PL\"\r\n            }, {\r\n                name: \"Portugal\",\r\n                dial_code: \"+351\",\r\n                code: \"PT\"\r\n            }, {\r\n                name: \"Puerto Rico\",\r\n                dial_code: \"+1 939\",\r\n                code: \"PR\"\r\n            }, {\r\n                name: \"Qatar\",\r\n                dial_code: \"+974\",\r\n                code: \"QA\"\r\n            }, {\r\n                name: \"Romania\",\r\n                dial_code: \"+40\",\r\n                code: \"RO\"\r\n            }, {\r\n                name: \"Rwanda\",\r\n                dial_code: \"+250\",\r\n                code: \"RW\"\r\n            }, {\r\n                name: \"Samoa\",\r\n                dial_code: \"+685\",\r\n                code: \"WS\"\r\n            }, {\r\n                name: \"San Marino\",\r\n                dial_code: \"+378\",\r\n                code: \"SM\"\r\n            }, {\r\n                name: \"Saudi Arabia\",\r\n                dial_code: \"+966\",\r\n                code: \"SA\"\r\n            }, {\r\n                name: \"Senegal\",\r\n                dial_code: \"+221\",\r\n                code: \"SN\"\r\n            }, {\r\n                name: \"Serbia\",\r\n                dial_code: \"+381\",\r\n                code: \"RS\"\r\n            }, {\r\n                name: \"Seychelles\",\r\n                dial_code: \"+248\",\r\n                code: \"SC\"\r\n            }, {\r\n                name: \"Sierra Leone\",\r\n                dial_code: \"+232\",\r\n                code: \"SL\"\r\n            }, {\r\n                name: \"Singapore\",\r\n                dial_code: \"+65\",\r\n                code: \"SG\"\r\n            }, {\r\n                name: \"Slovakia\",\r\n                dial_code: \"+421\",\r\n                code: \"SK\"\r\n            }, {\r\n                name: \"Slovenia\",\r\n                dial_code: \"+386\",\r\n                code: \"SI\"\r\n            }, {\r\n                name: \"Solomon Islands\",\r\n                dial_code: \"+677\",\r\n                code: \"SB\"\r\n            }, {\r\n                name: \"South Africa\",\r\n                dial_code: \"+27\",\r\n                code: \"ZA\"\r\n            }, {\r\n                name: \"South Georgia and the South Sandwich Islands\",\r\n                dial_code: \"+500\",\r\n                code: \"GS\"\r\n            }, {\r\n                name: \"Spain\",\r\n                dial_code: \"+34\",\r\n                code: \"ES\"\r\n            }, {\r\n                name: \"Sri Lanka\",\r\n                dial_code: \"+94\",\r\n                code: \"LK\"\r\n            }, {\r\n                name: \"Sudan\",\r\n                dial_code: \"+249\",\r\n                code: \"SD\"\r\n            }, {\r\n                name: \"Suriname\",\r\n                dial_code: \"+597\",\r\n                code: \"SR\"\r\n            }, {\r\n                name: \"Swaziland\",\r\n                dial_code: \"+268\",\r\n                code: \"SZ\"\r\n            }, {\r\n                name: \"Sweden\",\r\n                dial_code: \"+46\",\r\n                code: \"SE\"\r\n            }, {\r\n                name: \"Switzerland\",\r\n                dial_code: \"+41\",\r\n                code: \"CH\"\r\n            }, {\r\n                name: \"Tajikistan\",\r\n                dial_code: \"+992\",\r\n                code: \"TJ\"\r\n            }, {\r\n                name: \"Thailand\",\r\n                dial_code: \"+66\",\r\n                code: \"TH\"\r\n            }, {\r\n                name: \"Togo\",\r\n                dial_code: \"+228\",\r\n                code: \"TG\"\r\n            }, {\r\n                name: \"Tokelau\",\r\n                dial_code: \"+690\",\r\n                code: \"TK\"\r\n            }, {\r\n                name: \"Tonga\",\r\n                dial_code: \"+676\",\r\n                code: \"TO\"\r\n            }, {\r\n                name: \"Trinidad and Tobago\",\r\n                dial_code: \"+1 868\",\r\n                code: \"TT\"\r\n            }, {\r\n                name: \"Tunisia\",\r\n                dial_code: \"+216\",\r\n                code: \"TN\"\r\n            }, {\r\n                name: \"Turkey\",\r\n                dial_code: \"+90\",\r\n                code: \"TR\"\r\n            }, {\r\n                name: \"Turkmenistan\",\r\n                dial_code: \"+993\",\r\n                code: \"TM\"\r\n            }, {\r\n                name: \"Turks and Caicos Islands\",\r\n                dial_code: \"+1 649\",\r\n                code: \"TC\"\r\n            }, {\r\n                name: \"Tuvalu\",\r\n                dial_code: \"+688\",\r\n                code: \"TV\"\r\n            }, {\r\n                name: \"Uganda\",\r\n                dial_code: \"+256\",\r\n                code: \"UG\"\r\n            }, {\r\n                name: \"Ukraine\",\r\n                dial_code: \"+380\",\r\n                code: \"UA\"\r\n            }, {\r\n                name: \"United Arab Emirates\",\r\n                dial_code: \"+971\",\r\n                code: \"AE\"\r\n            }, {\r\n                name: \"United Kingdom\",\r\n                dial_code: \"+44\",\r\n                code: \"GB\"\r\n            }, {\r\n                name: \"Uruguay\",\r\n                dial_code: \"+598\",\r\n                code: \"UY\"\r\n            }, {\r\n                name: \"Uzbekistan\",\r\n                dial_code: \"+998\",\r\n                code: \"UZ\"\r\n            }, {\r\n                name: \"Vanuatu\",\r\n                dial_code: \"+678\",\r\n                code: \"VU\"\r\n            }, {\r\n                name: \"Wallis and Futuna\",\r\n                dial_code: \"+681\",\r\n                code: \"WF\"\r\n            }, {\r\n                name: \"Yemen\",\r\n                dial_code: \"+967\",\r\n                code: \"YE\"\r\n            }, {\r\n                name: \"Zambia\",\r\n                dial_code: \"+260\",\r\n                code: \"ZM\"\r\n            }, {\r\n                name: \"Zimbabwe\",\r\n                dial_code: \"+263\",\r\n                code: \"ZW\"\r\n            }, {\r\n                name: \"land Islands\",\r\n                dial_code: \"\",\r\n                code: \"AX\"\r\n            }, {\r\n                name: \"Antarctica\",\r\n                dial_code: null,\r\n                code: \"AQ\"\r\n            }, {\r\n                name: \"Bolivia, Plurinational State of\",\r\n                dial_code: \"+591\",\r\n                code: \"BO\"\r\n            }, {\r\n                name: \"Brunei Darussalam\",\r\n                dial_code: \"+673\",\r\n                code: \"BN\"\r\n            }, {\r\n                name: \"Cocos (Keeling) Islands\",\r\n                dial_code: \"+61\",\r\n                code: \"CC\"\r\n            }, {\r\n                name: \"Congo, The Democratic Republic of the\",\r\n                dial_code: \"+243\",\r\n                code: \"CD\"\r\n            }, {\r\n                name: \"Cote d'Ivoire\",\r\n                dial_code: \"+225\",\r\n                code: \"CI\"\r\n            }, {\r\n                name: \"Falkland Islands (Malvinas)\",\r\n                dial_code: \"+500\",\r\n                code: \"FK\"\r\n            }, {\r\n                name: \"Guernsey\",\r\n                dial_code: \"+44\",\r\n                code: \"GG\"\r\n            }, {\r\n                name: \"Holy See (Vatican City State)\",\r\n                dial_code: \"+379\",\r\n                code: \"VA\"\r\n            }, {\r\n                name: \"Hong Kong\",\r\n                dial_code: \"+852\",\r\n                code: \"HK\"\r\n            }, {\r\n                name: \"Iran, Islamic Republic of\",\r\n                dial_code: \"+98\",\r\n                code: \"IR\"\r\n            }, {\r\n                name: \"Isle of Man\",\r\n                dial_code: \"+44\",\r\n                code: \"IM\"\r\n            }, {\r\n                name: \"Jersey\",\r\n                dial_code: \"+44\",\r\n                code: \"JE\"\r\n            }, {\r\n                name: \"Korea, Democratic People's Republic of\",\r\n                dial_code: \"+850\",\r\n                code: \"KP\"\r\n            }, {\r\n                name: \"Korea, Republic of\",\r\n                dial_code: \"+82\",\r\n                code: \"KR\"\r\n            }, {\r\n                name: \"Lao People's Democratic Republic\",\r\n                dial_code: \"+856\",\r\n                code: \"LA\"\r\n            }, {\r\n                name: \"Libyan Arab Jamahiriya\",\r\n                dial_code: \"+218\",\r\n                code: \"LY\"\r\n            }, {\r\n                name: \"Macao\",\r\n                dial_code: \"+853\",\r\n                code: \"MO\"\r\n            }, {\r\n                name: \"Macedonia, The Former Yugoslav Republic of\",\r\n                dial_code: \"+389\",\r\n                code: \"MK\"\r\n            }, {\r\n                name: \"Micronesia, Federated States of\",\r\n                dial_code: \"+691\",\r\n                code: \"FM\"\r\n            }, {\r\n                name: \"Moldova, Republic of\",\r\n                dial_code: \"+373\",\r\n                code: \"MD\"\r\n            }, {\r\n                name: \"Mozambique\",\r\n                dial_code: \"+258\",\r\n                code: \"MZ\"\r\n            }, {\r\n                name: \"Palestinian Territory, Occupied\",\r\n                dial_code: \"+970\",\r\n                code: \"PS\"\r\n            }, {\r\n                name: \"Pitcairn\",\r\n                dial_code: \"+872\",\r\n                code: \"PN\"\r\n            }, {\r\n                name: \"Réunion\",\r\n                dial_code: \"+262\",\r\n                code: \"RE\"\r\n            }, {\r\n                name: \"Russia\",\r\n                dial_code: \"+7\",\r\n                code: \"RU\"\r\n            }, {\r\n                name: \"Saint Barthélemy\",\r\n                dial_code: \"+590\",\r\n                code: \"BL\"\r\n            }, {\r\n                name: \"Saint Helena, Ascension and Tristan Da Cunha\",\r\n                dial_code: \"+290\",\r\n                code: \"SH\"\r\n            }, {\r\n                name: \"Saint Kitts and Nevis\",\r\n                dial_code: \"+1 869\",\r\n                code: \"KN\"\r\n            }, {\r\n                name: \"Saint Lucia\",\r\n                dial_code: \"+1 758\",\r\n                code: \"LC\"\r\n            }, {\r\n                name: \"Saint Martin\",\r\n                dial_code: \"+590\",\r\n                code: \"MF\"\r\n            }, {\r\n                name: \"Saint Pierre and Miquelon\",\r\n                dial_code: \"+508\",\r\n                code: \"PM\"\r\n            }, {\r\n                name: \"Saint Vincent and the Grenadines\",\r\n                dial_code: \"+1 784\",\r\n                code: \"VC\"\r\n            }, {\r\n                name: \"Sao Tome and Principe\",\r\n                dial_code: \"+239\",\r\n                code: \"ST\"\r\n            }, {\r\n                name: \"Somalia\",\r\n                dial_code: \"+252\",\r\n                code: \"SO\"\r\n            }, {\r\n                name: \"Svalbard and Jan Mayen\",\r\n                dial_code: \"+47\",\r\n                code: \"SJ\"\r\n            }, {\r\n                name: \"Syrian Arab Republic\",\r\n                dial_code: \"+963\",\r\n                code: \"SY\"\r\n            }, {\r\n                name: \"Taiwan, Province of China\",\r\n                dial_code: \"+886\",\r\n                code: \"TW\"\r\n            }, {\r\n                name: \"Tanzania, United Republic of\",\r\n                dial_code: \"+255\",\r\n                code: \"TZ\"\r\n            }, {\r\n                name: \"Timor-Leste\",\r\n                dial_code: \"+670\",\r\n                code: \"TL\"\r\n            }, {\r\n                name: \"Venezuela, Bolivarian Republic of\",\r\n                dial_code: \"+58\",\r\n                code: \"VE\"\r\n            }, {\r\n                name: \"Viet Nam\",\r\n                dial_code: \"+84\",\r\n                code: \"VN\"\r\n            }, {\r\n                name: \"Virgin Islands, British\",\r\n                dial_code: \"+1 284\",\r\n                code: \"VG\"\r\n            }, {\r\n                name: \"Virgin Islands, U.S.\",\r\n                dial_code: \"+1 340\",\r\n                code: \"VI\"\r\n            }];\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddcompanygroupPage.prototype.selectEntry = function (item) {\r\n        this.companygroup_name = item.companygroup_name;\r\n        this.address = item.address;\r\n        this.country = item.country;\r\n        this.contact = item.contact;\r\n        if (this.contact != undefined) {\r\n            var contactSplitSpace = this.contact.split(\" \");\r\n            this.primary = contactSplitSpace[0];\r\n            this.contact = contactSplitSpace[1];\r\n        }\r\n        this.recordID = item.companygroup_id;\r\n    };\r\n    AddcompanygroupPage.prototype.getPrimaryContact = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation = '';\r\n        }\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddcompanygroupPage.prototype.createEntry = function (companygroup_name, address, country, contact, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        contact = contact.replace(\"+\", \"%2B\");\r\n        address = address.replace(\"#\", \"%23\");\r\n        var updatedby = createdby;\r\n        var body = \"is_mobile=1&companygroup_name=\" + companygroup_name + \"&address=\" + address + \"&country=\" + country + \"&contact=\" + contact + \"&createdby=\" + createdby + \"&updatedby=\" + updatedby, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companygroup/store\";\r\n        console.log(url + \"?\" + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].Error);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].Error == '1') {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    if (res.msg[0].result > 0) {\r\n                        _this.sendNotification(res.msg[0].result);\r\n                    }\r\n                    else {\r\n                        _this.sendNotification(res.msg[0].result);\r\n                        _this.nav.setRoot(CompanygroupPage);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddcompanygroupPage.prototype.updateEntry = function (companygroup_name, address, country, contact, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        contact = contact.replace(\"+\", \"%2B\");\r\n        address = address.replace(\"#\", \"%23\");\r\n        var updatedby = createdby;\r\n        var body = \"is_mobile=1&companygroup_name=\" + companygroup_name + \"&address=\" + address + \"&country=\" + country + \"&contact=\" + contact + \"&companygroup_id=\" + this.recordID + \"&createdby=\" + createdby + \"&updatedby=\" + updatedby, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companygroup/update\";\r\n        console.log(url + \"?\" + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(data.json());\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].result > 0) {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    _this.nav.setRoot(CompanygroupPage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddcompanygroupPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        //http://denyoappv2.stridecdev.com/companygroup/8/1/delete\r\n        var companygroup_name = this.form.controls[\"companygroup_name\"].value, \r\n        //body: string = \"key=delete&recordID=\" + this.recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companygroup/\" + this.recordID + \"/1/delete\";\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + companygroup_name + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddcompanygroupPage.prototype.saveEntry = function () {\r\n        var companygroup_name = this.form.controls[\"companygroup_name\"].value, address = this.form.controls[\"address\"].value, country = this.form.controls[\"country\"].value, contact = this.form.controls[\"contact\"].value, primary = this.form.controls[\"primary\"].value;\r\n        contact = primary + \" \" + contact;\r\n        console.log(contact);\r\n        if (companygroup_name.toLowerCase() == 'denyo' || companygroup_name.toLowerCase() == 'dum' || companygroup_name.toLowerCase() == 'dsg' || companygroup_name.toLowerCase() == 'denyo singapore') {\r\n            this.sendNotification(\"Given Company Name Not Acceptable....\");\r\n        }\r\n        else {\r\n            if (this.isEdited) {\r\n                this.updateEntry(companygroup_name, address, country, contact, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(companygroup_name, address, country, contact, this.userId);\r\n            }\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddcompanygroupPage.prototype.resetFields = function () {\r\n        this.companygroup_name = \"\";\r\n        this.address = \"\";\r\n        this.country = \"\";\r\n        this.contact = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddcompanygroupPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddcompanygroupPage.prototype.getJsonCountryListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getCountries\";\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCountry = res.countries;\r\n        });\r\n    };\r\n    AddcompanygroupPage.prototype.previous = function () {\r\n        this.nav.setRoot(CompanygroupPage);\r\n    };\r\n    AddcompanygroupPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddcompanygroupPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddcompanygroupPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddcompanygroupPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddcompanygroupPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddcompanygroupPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddcompanygroupPage;\r\n}());\r\nAddcompanygroupPage = __decorate([\r\n    Component({\r\n        selector: 'page-addcompanygroup',\r\n        templateUrl: 'addcompanygroup.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddcompanygroupPage);\r\nexport { AddcompanygroupPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addcompanygroup.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addcompanygroup/addcompanygroup.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddcompanygroupPage } from '../addcompanygroup/addcompanygroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the Companydetail page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar CompanydetailPage = (function () {\r\n    function CompanydetailPage(http, nav, NP, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.NP = NP;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'companygroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.reportAllLists1 = [];\r\n        this.loadingMoreDataContent = 'Loading More Data';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.Role = localStorage.getItem(\"userInfoRoleId\");\r\n    }\r\n    CompanydetailPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad Companydetail');\r\n    };\r\n    CompanydetailPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var comid = this.NP.get(\"record\");\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companydetails/\" + comid.companygroup_id;\r\n        console.log(url);\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.companydetails.length);\r\n            console.log(\"2\" + res.companydetails);\r\n            if (res.companydetails.length > 0) {\r\n                _this.name = res.companydetails[0].companygroup_name;\r\n                console.log(\"2\" + _this.name);\r\n                _this.address = res.companydetails[0].address;\r\n                _this.contact = res.companydetails[0].contact;\r\n                _this.totaluser = res.companydetails[0].totaluser;\r\n                _this.totalunit = res.companydetails[0].totalunit;\r\n                _this.reportAllLists = res.users;\r\n                _this.reportAllLists1 = res.unitdetail;\r\n            }\r\n            // [{ \"userid\": \"1\", \"userdetailsid\": \"1\", \"username\": \"denyov2\", \"password\": \"e3b81d385ca4c26109dfbda28c563e2b\", \"firstname\": \"Super Admin\", \"lastname\": \"Denyo\", \"email\": \"balamurugan@webneo.in\", \"contact_number\": \"9597645985\", \"country_id\": \"99\", \"photo\": \"1496647262537.jpg\", \"job_position\": \"Country Manager\", \"report_to\": \"0\", \"company_id\": \"1\", \"companygroup_name\": \"Denyo\" }]\r\n        });\r\n    };\r\n    CompanydetailPage.prototype.edit = function () {\r\n        var comid = this.NP.get(\"record\");\r\n        this.nav.setRoot(AddcompanygroupPage, {\r\n            record: comid\r\n        });\r\n    };\r\n    CompanydetailPage.prototype.delete = function () {\r\n        var _this = this;\r\n        var comid = this.NP.get(\"record\");\r\n        if (comid.totalunits == 0 || comid.totalusers == 0) {\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'Are you sure you want to delete this company group?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(comid.companygroup_id);\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n        else {\r\n            {\r\n                var confirm = this.alertCtrl.create({\r\n                    message: 'There are some user and units under this Company Group.If delete Company Group,all users and units will be deleted.Are you sure you want to delete?',\r\n                    buttons: [{\r\n                            text: 'Yes',\r\n                            handler: function () {\r\n                                _this.deleteEntry(comid.companygroup_id);\r\n                            }\r\n                        },\r\n                        {\r\n                            text: 'No',\r\n                            handler: function () { }\r\n                        }]\r\n                });\r\n                confirm.present();\r\n            }\r\n        }\r\n    };\r\n    CompanydetailPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companygroup/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations the company group name was successfully deleted\");\r\n                _this.nav.setRoot(CompanygroupPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    CompanydetailPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    CompanydetailPage.prototype.previous = function () {\r\n        this.nav.setRoot(CompanygroupPage);\r\n    };\r\n    CompanydetailPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    CompanydetailPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    CompanydetailPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    CompanydetailPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    CompanydetailPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    CompanydetailPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return CompanydetailPage;\r\n}());\r\nCompanydetailPage = __decorate([\r\n    Component({\r\n        selector: 'page-companydetail',\r\n        templateUrl: 'companydetail.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _d || Object, typeof (_e = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _g || Object])\r\n], CompanydetailPage);\r\nexport { CompanydetailPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=companydetail.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/companydetail/companydetail.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddcompanygroupPage } from '../addcompanygroup/addcompanygroup';\r\nimport { ViewcompanygroupPage } from '../viewcompanygroup/viewcompanygroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { CompanydetailPage } from '../companydetail/companydetail';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the CompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar CompanygroupPage = (function () {\r\n    function CompanygroupPage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'companygroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Company Group';\r\n        this.loadingMoreDataContent = 'Loading More Data';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.Role = localStorage.getItem(\"userInfoRoleId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"SETTINGS_COMPANYGROUP_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"SETTINGS_COMPANYGROUP_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"SETTINGS_COMPANYGROUP_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"SETTINGS_COMPANYGROUP_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    CompanygroupPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad CompanygroupPage');\r\n    };\r\n    /*******************/\r\n    /* Pull to Refresh */\r\n    /*******************/\r\n    CompanygroupPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doCompanyGroup();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /****************************/\r\n    /*@doCompanyGroup calling on report */\r\n    /****************************/\r\n    CompanygroupPage.prototype.doCompanyGroup = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"comapny\";\r\n        }\r\n        //http://denyoappv2.stridecdev.com/companygroup?is_mobile=1\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companygroup?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&companyid=\" + this.companyId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.companygroups.length);\r\n            console.log(\"2\" + res.companygroups);\r\n            if (res.companygroups.length > 0) {\r\n                _this.reportAllLists = res.companygroups;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n                _this.loadingMoreDataContent = 'Loading More Data';\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n                _this.loadingMoreDataContent = 'No More Data';\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    CompanygroupPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doCompanyGroup();\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    CompanygroupPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doCompanyGroup();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    CompanygroupPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"companygroup_id\";\r\n        this.doCompanyGroup();\r\n    };\r\n    CompanygroupPage.prototype.doAdd = function () {\r\n        this.nav.setRoot(AddcompanygroupPage);\r\n    };\r\n    CompanygroupPage.prototype.detail = function (item) {\r\n        this.nav.setRoot(CompanydetailPage, {\r\n            record: item\r\n        });\r\n    };\r\n    CompanygroupPage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddcompanygroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n        else {\r\n            this.nav.setRoot(ViewcompanygroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n    };\r\n    /******************************************/\r\n    /* @doConfirm called for alert dialog box **/\r\n    /******************************************/\r\n    CompanygroupPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        if (item.totalunits == 0 || item.totalusers == 0) {\r\n            var confirm = this.alertCtrl.create({\r\n                message: 'Are you sure you want to delete this company group?',\r\n                buttons: [{\r\n                        text: 'Yes',\r\n                        handler: function () {\r\n                            _this.deleteEntry(id);\r\n                            for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                if (_this.reportAllLists[q] == item) {\r\n                                    _this.reportAllLists.splice(q, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'No',\r\n                        handler: function () { }\r\n                    }]\r\n            });\r\n            confirm.present();\r\n        }\r\n        else {\r\n            {\r\n                var confirm = this.alertCtrl.create({\r\n                    message: 'There are some user and units under this Company Group.If delete Company Group,all users and units will be deleted.Are you sure you want to delete?',\r\n                    buttons: [{\r\n                            text: 'Yes',\r\n                            handler: function () {\r\n                                _this.deleteEntry(id);\r\n                                for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                                    if (_this.reportAllLists[q] == item) {\r\n                                        _this.reportAllLists.splice(q, 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            text: 'No',\r\n                            handler: function () { }\r\n                        }]\r\n                });\r\n                confirm.present();\r\n            }\r\n        }\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    CompanygroupPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/companygroup/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations the company group name was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    CompanygroupPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    /********************/\r\n    /* Sorting function */\r\n    /********************/\r\n    CompanygroupPage.prototype.doSort = function (val) {\r\n        console.log('1');\r\n        this.reportAllLists = [];\r\n        this.reportData.startindex = 0;\r\n        console.log('2');\r\n        this.sortby = 1;\r\n        if (this.vendorsort == \"asc\") {\r\n            this.reportData.sortascdesc = \"desc\";\r\n            this.vendorsort = \"desc\";\r\n            this.ascending = false;\r\n            console.log('3');\r\n        }\r\n        else {\r\n            console.log('4');\r\n            this.reportData.sortascdesc = \"asc\";\r\n            this.vendorsort = \"asc\";\r\n            this.ascending = true;\r\n        }\r\n        console.log('5');\r\n        this.reportData.sort = val;\r\n        this.doCompanyGroup();\r\n        console.log('6');\r\n    };\r\n    CompanygroupPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    CompanygroupPage.prototype.previous = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    CompanygroupPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    CompanygroupPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    CompanygroupPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    CompanygroupPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    CompanygroupPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    CompanygroupPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return CompanygroupPage;\r\n}());\r\nCompanygroupPage = __decorate([\r\n    Component({\r\n        selector: 'page-companygroup',\r\n        templateUrl: 'companygroup.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], CompanygroupPage);\r\nexport { CompanygroupPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=companygroup.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/companygroup/companygroup.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { AlertController, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { ServicinginfoPage } from '../servicinginfo/servicinginfo';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddserviceinfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddrequestsupportPage = (function () {\r\n    function AddrequestsupportPage(http, alertCtrl, datePicker, NP, nav, toastCtrl, navParams, viewCtrl, formBuilder, camera, transfer, ngZone) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.alertCtrl = alertCtrl;\r\n        this.datePicker = datePicker;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.navParams = navParams;\r\n        this.viewCtrl = viewCtrl;\r\n        this.camera = camera;\r\n        this.transfer = transfer;\r\n        this.ngZone = ngZone;\r\n        this.photoInfo = [];\r\n        this.addedImgListsArray = [];\r\n        this.addedImgListsRequest = [];\r\n        this.isSubmitted = false;\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.hideActionButton = true;\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n        this.unitDetailData.serviced_by = localStorage.getItem(\"userInfoName\");\r\n        this.addedImgListsRequest = [];\r\n        this.form = formBuilder.group({\r\n            profilePic: [''],\r\n            service_subject: ['', Validators.required],\r\n            service_remark: ['', Validators.required]\r\n        });\r\n        // Watch the form for changes, and\r\n        this.form.valueChanges.subscribe(function (v) {\r\n            _this.isReadyToSave = _this.form.valid;\r\n        });\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n    }\r\n    AddrequestsupportPage.prototype.ionViewDidLoad = function () {\r\n        this.addedImgListsRequest = [];\r\n        console.log('ionViewDidLoad AddrequestsupportPage');\r\n    };\r\n    AddrequestsupportPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.addedImgListsRequest = [];\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        if (this.unitDetailData.unit_id == undefined) {\r\n            this.unitDetailData.unit_id = this.NP.get(\"record\").unit_id;\r\n        }\r\n        if (this.unitDetailData.unit_id == 'undefined') {\r\n            this.unitDetailData.unit_id = this.NP.get(\"record\").unit_id;\r\n        }\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Np record param from previous\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            if (this.NP.get(\"act\") == 'Add') {\r\n                this.service_remark = \"\";\r\n                this.service_subject = \"\";\r\n                this.isEdited = false;\r\n                this.unitDetailData.pageTitle = 'Request Support Add';\r\n                this.service_unitid = this.unitDetailData.unit_id;\r\n            }\r\n            else {\r\n                this.service_unitid = this.unitDetailData.unit_id;\r\n                this.unitDetailData.pageTitle = 'Request Support Edit';\r\n                this.isEdited = true;\r\n            }\r\n            console.log(\"Service Unit Id:\" + this.service_unitid);\r\n        }\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        this.unitDetailData.favoriteindication = localStorage.getItem(\"unitfav\");\r\n        console.log(\"Add Comment Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n    };\r\n    AddrequestsupportPage.prototype.takePictureURL = function (micro_timestamp) {\r\n        var _this = this;\r\n        this.isUploadedProcessing = true;\r\n        var options = {\r\n            quality: 100,\r\n            destinationType: this.camera.DestinationType.FILE_URI\r\n        };\r\n        this.camera.getPicture(options).then(function (imageData) {\r\n            console.log(imageData);\r\n            _this.fileTrans(imageData, micro_timestamp);\r\n            _this.addedAttachList = imageData;\r\n        }, function (err) {\r\n            // Handle error\r\n            _this.sendNotification(err);\r\n        });\r\n    };\r\n    AddrequestsupportPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddrequestsupportPage.prototype.fileTrans = function (path, micro_timestamp) {\r\n        var _this = this;\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        console.log(\"File Name is:\" + currentName);\r\n        //YmdHis_123_filename\r\n        var dateStr = new Date();\r\n        var year = dateStr.getFullYear();\r\n        var month = dateStr.getMonth();\r\n        var date = dateStr.getDate();\r\n        var hr = dateStr.getHours();\r\n        var mn = dateStr.getMinutes();\r\n        var sec = dateStr.getSeconds();\r\n        var d = new Date(), n = d.getTime(), newFileName = year + \"\" + month + \"\" + date + \"\" + hr + \"\" + mn + \"\" + sec + \"_123_\" + n + \".jpg\";\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: newFileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/fileupload.php?micro_timestamp=' + micro_timestamp, options)\r\n            .then(function (data) {\r\n            console.log(\"Upload Response is\" + JSON.stringify(data));\r\n            var res = JSON.parse(data.response);\r\n            console.log(res.id);\r\n            console.log(JSON.stringify(res));\r\n            var imgSrc;\r\n            imgSrc = _this.apiServiceURL + \"/serviceimages\" + '/' + newFileName;\r\n            _this.addedImgListsRequest.push({\r\n                imgSrc: imgSrc,\r\n                imgDateTime: new Date(),\r\n                fileName: newFileName,\r\n                resouce_id: res.id\r\n            });\r\n            //loading.dismiss();\r\n            if (_this.addedImgListsRequest.length > 9) {\r\n                _this.isUploaded = false;\r\n            }\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\" + JSON.stringify(err));\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    AddrequestsupportPage.prototype.saveEntry = function () {\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            /* let name: string = this.form.controls[\"lat\"].value,\r\n               description: string = this.form.controls[\"long\"].value,\r\n               photos: object = this.addedImgLists;*/\r\n            var service_remark = this.form.controls[\"service_remark\"].value, service_subject = this.form.controls[\"service_subject\"].value;\r\n            console.log(\"service_remark:\" + service_remark);\r\n            console.log(\"service_subject:\" + service_subject);\r\n            console.log(\"nextServiceDate:\" + this.unitDetailData.nextServiceDate);\r\n            console.log(\"Image Data\" + JSON.stringify(this.addedImgListsRequest));\r\n            //let d = new Date();\r\n            //let micro_timestamp = d.getFullYear() + \"\" + d.getMonth() + \"\" + d.getDate() + \"\" + d.getHours() + \"\" + d.getMinutes() + \"\" + d.getSeconds();\r\n            if (this.isEdited) {\r\n                this.updateEntry(service_remark, service_subject, this.addedImgListsRequest, this.unitDetailData.hashtag, this.unitDetailData.nextServiceDate, this.micro_timestamp);\r\n            }\r\n            else {\r\n                this.createEntry(service_remark, service_subject, this.addedImgListsRequest, this.unitDetailData.hashtag, this.unitDetailData.nextServiceDate, this.micro_timestamp);\r\n            }\r\n        }\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddrequestsupportPage.prototype.createEntry = function (service_remark, service_subject, addedImgLists, remarkget, nextServiceDate, micro_timestamp) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1\" +\r\n            \"&service_unitid=\" + this.service_unitid +\r\n            \"&service_remark=\" + service_remark +\r\n            \"&service_subject=\" + service_subject +\r\n            \"&micro_timestamp=\" + micro_timestamp +\r\n            \"&serviced_by=\" + this.unitDetailData.userId +\r\n            \"&is_denyo_support=1\" +\r\n            \"&uploadInfo=\" + JSON.stringify(this.addedImgListsRequest), \r\n        //\"&contact_number=\" + this.contact_number +\r\n        //\"&contact_name=\" + this.contact_name +\r\n        //\"&nextServiceDate=\" + nextServiceDate,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/store\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.sendNotification(\"Servicing info was successfully added\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.nav.setRoot(ServicinginfoPage, {\r\n                    record: _this.NP.get(\"record\")\r\n                });\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddrequestsupportPage.prototype.updateEntry = function (service_remark, service_subject, addedImgLists, remarkget, nextServiceDate, micro_timestamp) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        var body = \"is_mobile=1&service_id=\" + this.service_id +\r\n            \"&service_unitid=\" + this.service_unitid +\r\n            \"&service_remark=\" + service_remark +\r\n            \"&next_service_date=\" + nextServiceDate +\r\n            \"&serviced_by=\" + this.unitDetailData.userId +\r\n            \"&service_subject=\" + service_subject +\r\n            \"&is_denyo_support=1\" +\r\n            \"&micro_timestamp=\" + micro_timestamp +\r\n            \"&uploadInfo=\" + JSON.stringify(this.addedImgListsRequest), type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/update\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.sendNotification(\"Servicing info  was successfully updated\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.nav.setRoot(ServicinginfoPage, {\r\n                    record: _this.NP.get(\"record\")\r\n                });\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddrequestsupportPage.prototype.getNextDate = function (val, field) {\r\n        console.log('1' + val);\r\n        var date;\r\n        if (val > 0) {\r\n            date = this.addDays(val);\r\n        }\r\n        else {\r\n            this.showDatePicker();\r\n        }\r\n    };\r\n    AddrequestsupportPage.prototype.addDays = function (days) {\r\n        var result = new Date();\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    };\r\n    AddrequestsupportPage.prototype.showDatePicker = function () {\r\n        var _this = this;\r\n        this.datePicker.show({\r\n            date: new Date(),\r\n            mode: 'date',\r\n            androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_DARK\r\n        }).then(function (date) {\r\n            _this.unitDetailData.nextServiceDate = date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate();\r\n            console.log('Got date: ', date);\r\n        }, function (err) { return console.log('Error occurred while getting date: ', err); });\r\n    };\r\n    AddrequestsupportPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.unitDetailData.hashtag = hashtag;\r\n    };\r\n    AddrequestsupportPage.prototype.selectEntry = function (item) {\r\n        this.service_subject = item.service_subject;\r\n        this.service_remark = item.service_remark;\r\n        this.service_resources = item.service_resources;\r\n        this.unitDetailData.nextServiceDate = item.next_service_date;\r\n        this.service_resources = item.service_resources;\r\n        if (this.service_resources != undefined && this.service_resources != 'undefined' && this.service_resources != '') {\r\n            var hashhypenhash = this.service_resources.split(\"#-#\");\r\n            for (var i = 0; i < hashhypenhash.length; i++) {\r\n                var imgDataArr = hashhypenhash[i].split(\"|\");\r\n                var imgSrc = void 0;\r\n                imgSrc = this.apiServiceURL + \"/serviceimages\" + '/' + imgDataArr[1];\r\n                this.addedImgListsRequest.push({\r\n                    imgSrc: imgSrc,\r\n                    imgDateTime: new Date(),\r\n                    fileName: imgDataArr[1],\r\n                    resouce_id: imgDataArr[0]\r\n                });\r\n            }\r\n            console.log(\"this.addedImgListsRequest\" + JSON.stringify(this.addedImgListsRequest));\r\n            console.log(\"Length is:\" + this.addedImgListsRequest.length);\r\n            if (this.NP.get(\"act\") == 'Add') {\r\n                console.log(\"Fresh Clear add request support info.ts start...\");\r\n                this.addedImgListsRequest = [];\r\n                this.addedImgListsRequest.length = 0;\r\n                this.service_subject = '';\r\n                this.service_remark = '';\r\n            }\r\n            if (this.addedImgListsRequest.length > 9) {\r\n                this.isUploaded = false;\r\n            }\r\n        }\r\n    };\r\n    AddrequestsupportPage.prototype.doRemoveResouce = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this file?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.addedImgListsRequest.length; q++) {\r\n                            if (_this.addedImgListsRequest[q] == item) {\r\n                                _this.addedImgListsRequest.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddrequestsupportPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/\" + recordID + \"/removeresource\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations file was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddrequestsupportPage.prototype.previous = function () {\r\n        this.nav.setRoot(ServicinginfoPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddrequestsupportPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddrequestsupportPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddrequestsupportPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddrequestsupportPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddrequestsupportPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddrequestsupportPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    AddrequestsupportPage.prototype.showConfirm = function () {\r\n        var _this = this;\r\n        var confirm = this.alertCtrl.create({\r\n            title: 'Attention',\r\n            message: 'Be requesting for Denyo Service Support',\r\n            buttons: [\r\n                {\r\n                    text: 'Confirm',\r\n                    handler: function () {\r\n                        _this.saveEntry();\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Cancel',\r\n                    handler: function () {\r\n                        _this.isSubmitted = false;\r\n                        console.log('Cancel clicked');\r\n                    }\r\n                }\r\n            ],\r\n            cssClass: 'alertDanger'\r\n        });\r\n        confirm.present();\r\n    };\r\n    return AddrequestsupportPage;\r\n}());\r\n__decorate([\r\n    ViewChild('fileInput'),\r\n    __metadata(\"design:type\", Object)\r\n], AddrequestsupportPage.prototype, \"fileInput\", void 0);\r\nAddrequestsupportPage = __decorate([\r\n    Component({\r\n        selector: 'page-addrequestsupport',\r\n        templateUrl: 'addrequestsupport.html',\r\n        providers: [Camera, Transfer, DatePicker]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _b || Object, typeof (_c = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _f || Object, typeof (_g = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _g || Object, typeof (_h = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _h || Object, typeof (_j = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _j || Object, typeof (_k = typeof Camera !== \"undefined\" && Camera) === \"function\" && _k || Object, typeof (_l = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _l || Object, typeof (_m = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _m || Object])\r\n], AddrequestsupportPage);\r\nexport { AddrequestsupportPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n//# sourceMappingURL=addrequestsupport.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addrequestsupport/addrequestsupport.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, AlertController } from 'ionic-angular';\r\nimport { CompanygroupPage } from '../companygroup/companygroup';\r\nimport { UserPage } from '../user/user';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { MyaccountPage } from '../myaccount/myaccount';\r\nimport { AddserviceinfoPage } from '../addserviceinfo/addserviceinfo';\r\nimport { UnitgroupPage } from '../unitgroup/unitgroup';\r\nimport { UnitsPage } from '../units/units';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { ServicedetailsPage } from '../servicedetails/servicedetails';\r\nimport { RolePage } from '../role/role';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddrequestsupportPage } from '../addrequestsupport/addrequestsupport';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the ServicinginfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar ServicinginfoPage = (function () {\r\n    function ServicinginfoPage(http, toastCtrl, alertCtrl, NP, navParams, nav, loadingCtrl) {\r\n        this.http = http;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.atMentionedInfo = [];\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'companygroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 50\r\n        };\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.reportAllLists = [];\r\n        this.addedServiceImgLists = [];\r\n        this.addedImgLists = [];\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pageTitle = 'Servicing Info';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.VIEWACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"UNITS_SERVICINGINFO_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n    }\r\n    ServicinginfoPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad ServicinginfoPage');\r\n    };\r\n    ServicinginfoPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Service Info Record Param Value:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            var editItem = this.NP.get(\"record\");\r\n            var favorite = void 0;\r\n            //this.unitDetailData.unit_id = editItem.unit_id;\r\n            //this.unitDetailData.unitname = editItem.unitname;\r\n            //this.unitDetailData.location = editItem.location;\r\n            //this.unitDetailData.projectname = editItem.projectname;\r\n            this.unitDetailData.runninghr = editItem.runninghr;\r\n            this.unitDetailData.gen_status = editItem.gen_status;\r\n            this.unitDetailData.nextservicedate = editItem.nextservicedate;\r\n            if (this.NP.get(\"record\").favoriteindication == 'favorite') {\r\n                favorite = \"favorite\";\r\n            }\r\n            else {\r\n                favorite = \"unfavorite\";\r\n            }\r\n            this.unitDetailData.favoriteindication = favorite;\r\n            this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n            if (this.unitDetailData.unit_id == undefined) {\r\n                this.unitDetailData.unit_id = editItem.unit_id;\r\n            }\r\n            if (this.unitDetailData.unit_id == 'undefined') {\r\n                this.unitDetailData.unit_id = editItem.unit_id;\r\n            }\r\n            this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n            this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n            this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n            this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n            console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n            this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n            this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n            this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n            this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        }\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"service_id\";\r\n        this.doService();\r\n        // Atmentioned Tag Storage\r\n    };\r\n    ServicinginfoPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    ServicinginfoPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doService();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    ServicinginfoPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doService();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    ServicinginfoPage.prototype.doService = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"comapny\";\r\n        }\r\n        var editItem = this.NP.get(\"record\");\r\n        if (this.NP.get(\"record\").unit_id != undefined && this.NP.get(\"record\").unit_id != 'undefined') {\r\n            this.unit_id = editItem.unit_id;\r\n        }\r\n        else {\r\n            this.unit_id = editItem.service_unitid;\r\n        }\r\n        //http://denyoappv2.stridecdev.com/companygroup?is_mobile=1\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&unitid=\" + localStorage.getItem(\"unitId\");\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.services.length);\r\n            console.log(\"2\" + res.services);\r\n            if (res.services.length > 0) {\r\n                _this.reportAllLists = res.services;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n                _this.loadingMoreDataContent = 'Loading More Data';\r\n                for (var i = 0; i < res.services.length; i++) {\r\n                    _this.photo = res.services[i].user_photo;\r\n                    console.log(\"PHOTO\" + _this.photo);\r\n                }\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n                _this.loadingMoreDataContent = 'No More Data';\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    ServicinginfoPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    ServicinginfoPage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    ServicinginfoPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UserPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToUnitGroup = function () {\r\n        this.nav.setRoot(UnitgroupPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToCompanyGroup = function () {\r\n        this.nav.setRoot(CompanygroupPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToUnits = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToMyAccount = function () {\r\n        this.nav.setRoot(MyaccountPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToRole = function () {\r\n        this.nav.setRoot(RolePage);\r\n    };\r\n    ServicinginfoPage.prototype.doAdd = function () {\r\n        this.service_subject = '';\r\n        this.service_remark = '';\r\n        this.addedServiceImgLists = [];\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(AddserviceinfoPage, {\r\n            record: this.NP.get(\"record\"),\r\n            act: 'Add',\r\n            unit_id: this.unit_id\r\n        });\r\n    };\r\n    ServicinginfoPage.prototype.doRequest = function () {\r\n        this.service_subject = '';\r\n        this.service_remark = '';\r\n        this.addedImgLists = [];\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(AddrequestsupportPage, {\r\n            record: this.NP.get(\"record\"),\r\n            act: 'Add',\r\n            unit_id: this.unit_id\r\n        });\r\n    };\r\n    ServicinginfoPage.prototype.doEdit = function (item, act) {\r\n        if (item.event_type.toLowerCase() == 's') {\r\n            localStorage.setItem(\"microtime\", \"\");\r\n            this.nav.setRoot(AddserviceinfoPage, {\r\n                record: item,\r\n                act: 'Edit',\r\n                from: 'service'\r\n            });\r\n        }\r\n        else {\r\n            this.sendNotification(\"Not Applicable!!!\");\r\n        }\r\n    };\r\n    ServicinginfoPage.prototype.servicedetails = function (item, act) {\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(ServicedetailsPage, {\r\n            record: item,\r\n            act: 'Edit',\r\n            from: 'service'\r\n        });\r\n    };\r\n    ServicinginfoPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this service info?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    ServicinginfoPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Services info was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    ServicinginfoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    ServicinginfoPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doService();\r\n    };\r\n    ServicinginfoPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    ServicinginfoPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return ServicinginfoPage;\r\n}());\r\nServicinginfoPage = __decorate([\r\n    Component({\r\n        selector: 'page-servicinginfo',\r\n        templateUrl: 'servicinginfo.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _b || Object, typeof (_c = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object, typeof (_g = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _g || Object])\r\n], ServicinginfoPage);\r\nexport { ServicinginfoPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=servicinginfo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/servicinginfo/servicinginfo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { AlertController, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { FileChooser } from '@ionic-native/file-chooser';\r\nimport { Transfer } from '@ionic-native/transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { ServicinginfoPage } from '../servicinginfo/servicinginfo';\r\nimport { CommentsinfoPage } from '../commentsinfo/commentsinfo';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddserviceinfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddserviceinfoPage = (function () {\r\n    function AddserviceinfoPage(http, alertCtrl, datePicker, NP, nav, toastCtrl, navParams, viewCtrl, formBuilder, camera, filechooser, transfer, file, ngZone) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.alertCtrl = alertCtrl;\r\n        this.datePicker = datePicker;\r\n        this.NP = NP;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.navParams = navParams;\r\n        this.viewCtrl = viewCtrl;\r\n        this.camera = camera;\r\n        this.filechooser = filechooser;\r\n        this.transfer = transfer;\r\n        this.file = file;\r\n        this.ngZone = ngZone;\r\n        this.photoInfo = [];\r\n        this.addedImgListsArray = [];\r\n        this.addedServiceImgLists = [];\r\n        this.isSubmitted = false;\r\n        this.isUploadedProcessing = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        this.isEdited = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            userId: '',\r\n            loginas: '',\r\n            pageTitle: '',\r\n            getremark: '',\r\n            serviced_by: '',\r\n            nextServiceDate: '',\r\n            addedImgLists1: '',\r\n            addedImgLists2: ''\r\n        };\r\n        this.hideActionButton = true;\r\n        this.onProgress = function (progressEvent) {\r\n            _this.ngZone.run(function () {\r\n                if (progressEvent.lengthComputable) {\r\n                    var progress = Math.round((progressEvent.loaded / progressEvent.total) * 95);\r\n                    _this.isProgress = true;\r\n                    _this.progress = progress;\r\n                }\r\n            });\r\n        };\r\n        this.isFuture = 0;\r\n        this.servicemindate = this.minDateStr();\r\n        this.servicemaxdate = this.maxDateStr();\r\n        console.log(\"Max:\" + this.servicemaxdate);\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n        this.unitDetailData.serviced_by = localStorage.getItem(\"userInfoName\");\r\n        this.form = formBuilder.group({\r\n            profilePic: [''],\r\n            serviced_datetime: ['', Validators.required],\r\n            service_subject: ['', Validators.required],\r\n            service_remark: ['', Validators.required],\r\n            serviced_by: ['', Validators.required],\r\n            next_service_date: [''],\r\n            is_request: ['']\r\n        });\r\n        this.service_priority = 0;\r\n        // Watch the form for changes, and\r\n        this.form.valueChanges.subscribe(function (v) {\r\n            _this.isReadyToSave = _this.form.valid;\r\n        });\r\n        var already = localStorage.getItem(\"microtime\");\r\n        if (already != undefined && already != 'undefined' && already != '') {\r\n            this.micro_timestamp = already;\r\n        }\r\n        else {\r\n            var dateStr = new Date();\r\n            var yearstr = dateStr.getFullYear();\r\n            var monthstr = dateStr.getMonth();\r\n            var datestr = dateStr.getDate();\r\n            var hrstr = dateStr.getHours();\r\n            var mnstr = dateStr.getMinutes();\r\n            var secstr = dateStr.getSeconds();\r\n            this.micro_timestamp = yearstr + \"\" + monthstr + \"\" + datestr + \"\" + hrstr + \"\" + mnstr + \"\" + secstr;\r\n        }\r\n        localStorage.setItem(\"microtime\", this.micro_timestamp);\r\n    }\r\n    AddserviceinfoPage.prototype.maxDateStr = function () {\r\n        var today = new Date();\r\n        this.dd = today.getDate();\r\n        this.mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (this.dd < 10) {\r\n            this.dd = '0' + this.dd;\r\n        }\r\n        if (this.mm < 10) {\r\n            this.mm = '0' + this.mm;\r\n        }\r\n        this.servicemaxdate = yyyy + '-' + this.mm + '-' + this.dd;\r\n        // this.servicemindate = this.minyr + '-' + this.minmn + '-' + this.mindt\r\n        console.log(\"Max:\" + this.servicemaxdate);\r\n        return this.servicemaxdate;\r\n    };\r\n    AddserviceinfoPage.prototype.minDateStr = function () {\r\n        var oneWeekAgo = new Date();\r\n        var prevfivedays = oneWeekAgo.setDate(oneWeekAgo.getDate() - 5);\r\n        console.log(\"Previous five days:\" + prevfivedays);\r\n        var dateFormat = new Date(prevfivedays);\r\n        this.servicemindate = dateFormat.getFullYear() + '-' + (dateFormat.getMonth() + 1) + '-' + dateFormat.getDate();\r\n        this.minyr = dateFormat.getFullYear();\r\n        this.minmn = (dateFormat.getMonth() + 1);\r\n        this.mindt = dateFormat.getDate();\r\n        if (this.mindt < 10) {\r\n            this.mindt = '0' + this.mindt;\r\n        }\r\n        if (this.minmn < 10) {\r\n            this.minmn = '0' + this.minmn;\r\n        }\r\n        this.servicemindate = this.minyr + '-' + this.minmn + '-' + this.mindt;\r\n        console.log(\"Min:\" + this.servicemindate);\r\n        return this.servicemindate;\r\n    };\r\n    AddserviceinfoPage.prototype.ionViewDidLoad = function () {\r\n        this.addedServiceImgLists = [];\r\n        console.log('ionViewDidLoad AddserviceinfoPage');\r\n    };\r\n    AddserviceinfoPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        // this.getPrority(1);\r\n        var users = localStorage.getItem(\"atMentionedStorage\");\r\n        this.is_request = false;\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        var editItem = this.NP.get(\"record\");\r\n        //this.unitDetailData.unit_id = editItem.unit_id;\r\n        //this.unitDetailData.unitname = editItem.unitname;\r\n        //this.unitDetailData.location = editItem.location;\r\n        //this.unitDetailData.projectname = editItem.projectname;\r\n        this.unitDetailData.runninghr = editItem.runninghr;\r\n        this.unitDetailData.gen_status = editItem.gen_status;\r\n        this.unitDetailData.nextservicedate = editItem.nextservicedate;\r\n        var favorite;\r\n        if (this.NP.get(\"record\").favoriteindication == 'favorite') {\r\n            favorite = \"favorite\";\r\n        }\r\n        else {\r\n            favorite = \"unfavorite\";\r\n        }\r\n        this.unitDetailData.favoriteindication = favorite;\r\n        this.unitDetailData.unit_id = localStorage.getItem(\"unitId\");\r\n        if (this.unitDetailData.unit_id == undefined) {\r\n            this.unitDetailData.unit_id = editItem.unit_id;\r\n        }\r\n        if (this.unitDetailData.unit_id == 'undefined') {\r\n            this.unitDetailData.unit_id = editItem.unit_id;\r\n        }\r\n        this.unitDetailData.unitname = localStorage.getItem(\"unitunitname\");\r\n        this.unitDetailData.location = localStorage.getItem(\"unitlocation\");\r\n        this.unitDetailData.projectname = localStorage.getItem(\"unitprojectname\");\r\n        this.unitDetailData.colorcodeindications = localStorage.getItem(\"unitcolorcode\");\r\n        console.log(\"Unit Details Color Code:\" + this.unitDetailData.colorcodeindications);\r\n        this.unitDetailData.lat = localStorage.getItem(\"unitlat\");\r\n        this.unitDetailData.lng = localStorage.getItem(\"unitlng\");\r\n        this.unitDetailData.rh = localStorage.getItem(\"runninghr\");\r\n        this.unitDetailData.ns = localStorage.getItem(\"nsd\");\r\n        if (this.NP.get(\"record\")) {\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.service_id = this.NP.get(\"record\").service_id;\r\n            if (this.NP.get(\"act\") == 'Add') {\r\n                this.serviced_datetime = \"\";\r\n                this.getPrority(0);\r\n                this.service_remark = \"\";\r\n                this.service_subject = \"\";\r\n                this.next_service_date = \"\";\r\n                this.isEdited = false;\r\n                this.unitDetailData.pageTitle = 'Servicing Info Add';\r\n                this.service_unitid = this.NP.get(\"unit_id\");\r\n            }\r\n            else {\r\n                this.service_unitid = this.NP.get(\"record\").service_unitid;\r\n                this.unitDetailData.pageTitle = 'Servicing Info Edit';\r\n                this.isEdited = true;\r\n            }\r\n            console.log(\"Service Id:\" + this.service_id);\r\n            console.log(\"Service Unit Id:\" + this.service_unitid);\r\n        }\r\n    };\r\n    AddserviceinfoPage.prototype.takePictureURL = function (micro_timestamp) {\r\n        var _this = this;\r\n        this.isUploadedProcessing = true;\r\n        var options = {\r\n            quality: 100,\r\n            destinationType: this.camera.DestinationType.FILE_URI\r\n        };\r\n        this.camera.getPicture(options).then(function (imageData) {\r\n            console.log(imageData);\r\n            _this.fileTrans(imageData, micro_timestamp);\r\n            _this.addedAttachList = imageData;\r\n        }, function (err) {\r\n            // Handle error\r\n            _this.sendNotification(err);\r\n        });\r\n    };\r\n    AddserviceinfoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddserviceinfoPage.prototype.fileTrans = function (path, micro_timestamp) {\r\n        var _this = this;\r\n        var fileTransfer = this.transfer.create();\r\n        var currentName = path.replace(/^.*[\\\\\\/]/, '');\r\n        console.log(\"File Name is:\" + currentName);\r\n        //YmdHis_123_filename\r\n        var dateStr = new Date();\r\n        var year = dateStr.getFullYear();\r\n        var month = dateStr.getMonth();\r\n        var date = dateStr.getDate();\r\n        var hr = dateStr.getHours();\r\n        var mn = dateStr.getMinutes();\r\n        var sec = dateStr.getSeconds();\r\n        var d = new Date(), n = d.getTime(), newFileName = year + \"\" + month + \"\" + date + \"\" + hr + \"\" + mn + \"\" + sec + \"_123_\" + n + \".jpg\";\r\n        var options = {\r\n            fileKey: 'file',\r\n            fileName: newFileName,\r\n            headers: {},\r\n            chunkedMode: false,\r\n            mimeType: \"text/plain\",\r\n        };\r\n        //  http://127.0.0.1/ionic/upload_attach.php\r\n        //http://amahr.stridecdev.com/getgpsvalue.php?key=create&lat=34&long=45\r\n        fileTransfer.onProgress(this.onProgress);\r\n        fileTransfer.upload(path, this.apiServiceURL + '/fileupload.php?micro_timestamp=' + micro_timestamp, options)\r\n            .then(function (data) {\r\n            // Upload Response is{\"bytesSent\":1872562,\"responseCode\":200,\"response\":\"{\\\"error\\\":false,\\\"id\\\":51}\",\"objectId\":\"\"}\r\n            console.log(\"Upload Response is\" + JSON.stringify(data));\r\n            var res = JSON.parse(data.response);\r\n            console.log(res.id);\r\n            console.log(JSON.stringify(res));\r\n            var imgSrc;\r\n            imgSrc = _this.apiServiceURL + \"/serviceimages\" + '/' + newFileName;\r\n            _this.addedServiceImgLists.push({\r\n                imgSrc: imgSrc,\r\n                imgDateTime: new Date(),\r\n                fileName: newFileName,\r\n                resouce_id: res.id\r\n            });\r\n            //loading.dismiss();\r\n            if (_this.addedServiceImgLists.length > 9) {\r\n                _this.isUploaded = false;\r\n            }\r\n            _this.progress += 5;\r\n            _this.isProgress = false;\r\n            _this.isUploadedProcessing = false;\r\n            return false;\r\n            // Save in Backend and MysQL\r\n            //this.uploadToServer(data.response);\r\n            // Save in Backend and MysQL\r\n        }, function (err) {\r\n            //loading.dismiss();\r\n            console.log(\"Upload Error:\" + JSON.stringify(err));\r\n            _this.sendNotification(\"Upload Error:\" + JSON.stringify(err));\r\n        });\r\n    };\r\n    AddserviceinfoPage.prototype.saveEntry = function () {\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            /* let name: string = this.form.controls[\"lat\"].value,\r\n               description: string = this.form.controls[\"long\"].value,\r\n               photos: object = this.addedImgLists;*/\r\n            var serviced_datetime = this.form.controls[\"serviced_datetime\"].value, service_remark = this.form.controls[\"service_remark\"].value, next_service_date = this.form.controls[\"next_service_date\"].value, serviced_by = this.form.controls[\"serviced_by\"].value, is_request = this.form.controls[\"is_request\"].value, service_subject = this.form.controls[\"service_subject\"].value;\r\n            console.log(\"serviced_datetime:\" + serviced_datetime);\r\n            console.log(\"service_remark:\" + service_remark);\r\n            console.log(\"serviced_by:\" + serviced_by);\r\n            console.log(\"is_request:\" + is_request);\r\n            console.log(\"service_subject:\" + service_subject);\r\n            console.log(\"nextServiceDate:\" + this.unitDetailData.nextServiceDate);\r\n            //let d = new Date();\r\n            //let micro_timestamp = d.getFullYear() + \"\" + d.getMonth() + \"\" + d.getDate() + \"\" + d.getHours() + \"\" + d.getMinutes() + \"\" + d.getSeconds();\r\n            if (this.isEdited) {\r\n                this.updateEntry(serviced_datetime, service_remark, next_service_date, serviced_by, this.is_request, service_subject, this.addedServiceImgLists, this.unitDetailData.hashtag, this.unitDetailData.nextServiceDate, this.micro_timestamp);\r\n            }\r\n            else {\r\n                this.createEntry(serviced_datetime, service_remark, next_service_date, serviced_by, this.is_request, service_subject, this.addedServiceImgLists, this.unitDetailData.hashtag, this.unitDetailData.nextServiceDate, this.micro_timestamp);\r\n            }\r\n        }\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddserviceinfoPage.prototype.createEntry = function (serviced_datetime, service_remark, next_service_date, serviced_by, is_request, service_subject, addedImgLists, remarkget, nextServiceDate, micro_timestamp) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        service_remark = localStorage.getItem(\"atMentionResult\");\r\n        if (this.service_priority == undefined) {\r\n            this.service_priority = '0';\r\n        }\r\n        if (this.service_priority == 'undefined') {\r\n            this.service_priority = '0';\r\n        }\r\n        if (nextServiceDate == 'undefined') {\r\n            nextServiceDate = '';\r\n        }\r\n        if (nextServiceDate == undefined) {\r\n            nextServiceDate = '';\r\n        }\r\n        var body = \"is_mobile=1\" +\r\n            \"&service_priority=\" + this.service_priority +\r\n            \"&service_unitid=\" + this.service_unitid +\r\n            \"&serviced_datetime=\" + serviced_datetime +\r\n            \"&service_remark=\" + service_remark +\r\n            \"&next_service_date=\" + nextServiceDate +\r\n            \"&is_denyo_support=0\" +\r\n            \"&serviced_by=\" + this.unitDetailData.userId +\r\n            \"&is_request=\" + is_request +\r\n            \"&service_subject=\" + service_subject +\r\n            \"&micro_timestamp=\" + micro_timestamp +\r\n            \"&uploadInfo=\" + JSON.stringify(this.addedServiceImgLists), \r\n        //\"&contact_number=\" + this.contact_number +\r\n        //\"&contact_name=\" + this.contact_name +\r\n        //\"&nextServiceDate=\" + nextServiceDate,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/store\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.service_subject = '';\r\n                _this.service_remark = '';\r\n                _this.addedServiceImgLists = [];\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.addedServiceImgLists = [];\r\n                _this.sendNotification(\"Servicing info was successfully added\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.nav.setRoot(ServicinginfoPage, {\r\n                    record: _this.NP.get(\"record\")\r\n                });\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddserviceinfoPage.prototype.updateEntry = function (serviced_datetime, service_remark, next_service_date, serviced_by, is_request, service_subject, addedImgLists, remarkget, nextServiceDate, micro_timestamp) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            service_remark = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        if (this.service_priority == undefined) {\r\n            this.service_priority = 0;\r\n        }\r\n        if (this.service_priority == 'undefined') {\r\n            this.service_priority = 0;\r\n        }\r\n        if (nextServiceDate == 'undefined') {\r\n            nextServiceDate = '';\r\n        }\r\n        if (nextServiceDate == undefined) {\r\n            nextServiceDate = '';\r\n        }\r\n        var body = \"is_mobile=1&service_id=\" + this.service_id +\r\n            \"&serviced_datetime=\" + serviced_datetime +\r\n            \"&service_priority=\" + this.service_priority +\r\n            \"&service_unitid=\" + this.service_unitid +\r\n            \"&service_remark=\" + service_remark +\r\n            \"&next_service_date=\" + nextServiceDate +\r\n            \"&is_denyo_support=0\" +\r\n            \"&serviced_by=\" + this.unitDetailData.userId +\r\n            \"&is_request=\" + is_request +\r\n            \"&service_subject=\" + service_subject +\r\n            \"&micro_timestamp=\" + micro_timestamp +\r\n            \"&uploadInfo=\" + JSON.stringify(this.addedServiceImgLists), type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/update\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                localStorage.setItem(\"microtime\", \"\");\r\n                _this.addedServiceImgLists = [];\r\n                _this.service_subject = '';\r\n                _this.service_remark = '';\r\n                _this.addedServiceImgLists = [];\r\n                _this.sendNotification(\"Servicing info  was successfully updated\");\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.nav.setRoot(ServicinginfoPage, {\r\n                    record: _this.NP.get(\"record\")\r\n                });\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddserviceinfoPage.prototype.getNextDate = function (val, field) {\r\n        console.log('1' + val);\r\n        var date;\r\n        if (val > 0) {\r\n            date = this.addDays(val);\r\n        }\r\n        else {\r\n            this.showDatePicker();\r\n        }\r\n        if (field == '1') {\r\n            this.serviced_datetime = date.getFullYear() + \"-\" + parseInt(date.getMonth() + 1) + \"-\" + date.getDate();\r\n        }\r\n        else {\r\n            this.unitDetailData.nextServiceDate = date.getFullYear() + \"-\" + parseInt(date.getMonth() + 1) + \"-\" + date.getDate();\r\n        }\r\n    };\r\n    AddserviceinfoPage.prototype.getPrority = function (val) {\r\n        this.priority_highclass = '';\r\n        this.priority_lowclass = '';\r\n        if (val == \"2\") {\r\n            this.priority_highclass = \"border_high\";\r\n        }\r\n        if (val == \"1\") {\r\n            this.priority_lowclass = \"border_low\";\r\n        }\r\n        this.service_priority = val;\r\n    };\r\n    AddserviceinfoPage.prototype.addDays = function (days) {\r\n        var result = new Date();\r\n        result.setDate(result.getDate() + days);\r\n        return result;\r\n    };\r\n    AddserviceinfoPage.prototype.subDays = function (days) {\r\n        var result = new Date();\r\n        result.setDate(result.getDate() - days);\r\n        console.log(\"SubDays Function Result is:\" + result);\r\n        return result;\r\n    };\r\n    AddserviceinfoPage.prototype.showDatePicker = function () {\r\n        var _this = this;\r\n        console.log(\"showDatePicker:\" + this.servicemaxdate);\r\n        this.datePicker.show({\r\n            date: new Date(),\r\n            mode: 'date',\r\n            maxDate: new Date(),\r\n            allowOldDates: false,\r\n            doneButtonColor: '#F2F3F4',\r\n            cancelButtonColor: '#000000',\r\n            allowFutureDates: true,\r\n            androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_LIGHT\r\n        }).then(function (date) {\r\n            var monthstr = date.getMonth() + parseInt(\"1\");\r\n            console.log('Got date: ', date);\r\n            console.log(new Date().getTime() + \"<\" + date.getTime());\r\n            if (new Date().getTime() < date.getTime()) {\r\n                _this.isFuture = 0;\r\n                _this.isSubmitted = false;\r\n                console.log(\"Future Dates\");\r\n                _this.unitDetailData.nextServiceDate = date.getFullYear() + \"-\" + monthstr + \"-\" + date.getDate();\r\n            }\r\n            else {\r\n                _this.isFuture = 1;\r\n                _this.isSubmitted = true;\r\n                console.log(\"Old Dates\");\r\n                _this.unitDetailData.nextServiceDate = '';\r\n            }\r\n        }, function (err) { return console.log('Error occurred while getting date: ', err); });\r\n    };\r\n    AddserviceinfoPage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.unitDetailData.hashtag = hashtag;\r\n    };\r\n    AddserviceinfoPage.prototype.previous = function () {\r\n        this.addedServiceImgLists = [];\r\n        if (this.NP.get(\"from\") == 'service') {\r\n            this.nav.setRoot(ServicinginfoPage, {\r\n                record: this.NP.get(\"record\")\r\n            });\r\n        }\r\n        else if (this.NP.get(\"from\") == 'comment') {\r\n            this.nav.setRoot(CommentsinfoPage);\r\n        }\r\n        else {\r\n            this.nav.setRoot(ServicinginfoPage, {\r\n                record: this.NP.get(\"record\")\r\n            });\r\n        }\r\n    };\r\n    AddserviceinfoPage.prototype.selectEntry = function (item) {\r\n        this.serviced_by = item.serviced_by;\r\n        this.serviced_datetime = item.serviced_datetime;\r\n        console.log(\"Service Date Time:\" + this.serviced_datetime);\r\n        if (this.serviced_datetime == \"0000-00-00\") {\r\n            this.serviced_datetime = '';\r\n        }\r\n        this.service_subject = item.service_subject;\r\n        this.service_remark = item.service_remark;\r\n        //this.next_service_date = item.next_service_date;\r\n        this.service_priority = item.service_priority;\r\n        console.log(\"X\" + this.service_priority);\r\n        if (this.service_priority == \"1\") {\r\n            this.priority_lowclass = \"border_low\";\r\n        }\r\n        else if (this.service_priority == \"2\") {\r\n            this.priority_highclass = \"border_high\";\r\n        }\r\n        if (item.is_request > 0) {\r\n            this.is_request = true;\r\n        }\r\n        this.serviced_by_name = item.serviced_by_name;\r\n        this.service_resources = item.service_resources;\r\n        this.unitDetailData.nextServiceDate = item.next_service_date;\r\n        this.service_resources = item.service_resources;\r\n        if (this.service_resources != undefined && this.service_resources != 'undefined' && this.service_resources != '') {\r\n            var hashhypenhash = this.service_resources.split(\"#-#\");\r\n            for (var i = 0; i < hashhypenhash.length; i++) {\r\n                var imgDataArr = hashhypenhash[i].split(\"|\");\r\n                var imgSrc = void 0;\r\n                imgSrc = this.apiServiceURL + \"/serviceimages\" + '/' + imgDataArr[1];\r\n                this.addedServiceImgLists.push({\r\n                    imgSrc: imgSrc,\r\n                    imgDateTime: new Date(),\r\n                    fileName: imgDataArr[1],\r\n                    resouce_id: imgDataArr[0]\r\n                });\r\n            }\r\n            if (this.addedServiceImgLists.length > 9) {\r\n                this.isUploaded = false;\r\n            }\r\n        }\r\n        if (this.NP.get(\"act\") == 'Add') {\r\n            console.log(\"Fresh Clear add service info.ts start...\");\r\n            this.addedServiceImgLists = [];\r\n            this.addedServiceImgLists.length = 0;\r\n            this.unitDetailData.nextServiceDate = '';\r\n            this.is_request = false;\r\n            this.service_remark = '';\r\n            this.service_subject = '';\r\n            localStorage.setItem(\"microtime\", \"\");\r\n        }\r\n    };\r\n    AddserviceinfoPage.prototype.doRemoveResouce = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this file?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        if (id != undefined) {\r\n                            _this.deleteEntry(id);\r\n                        }\r\n                        for (var q = 0; q < _this.addedServiceImgLists.length; q++) {\r\n                            if (_this.addedServiceImgLists[q] == item) {\r\n                                _this.addedServiceImgLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                        console.log(\"After Deleted\" + JSON.stringify(_this.addedServiceImgLists));\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddserviceinfoPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/\" + recordID + \"/removeresource\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations file was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    AddserviceinfoPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddserviceinfoPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddserviceinfoPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddserviceinfoPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddserviceinfoPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddserviceinfoPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    AddserviceinfoPage.prototype.showConfirm = function () {\r\n        var _this = this;\r\n        var confirm = this.alertCtrl.create({\r\n            title: 'Attention',\r\n            message: 'Be requesting for Denyo Service Support',\r\n            buttons: [\r\n                {\r\n                    text: 'Confirm',\r\n                    handler: function () {\r\n                        _this.is_request = true;\r\n                        console.log('Confirm clicked');\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Cancel',\r\n                    handler: function () {\r\n                        _this.is_request = false;\r\n                        console.log('Cancel clicked');\r\n                    }\r\n                }\r\n            ],\r\n            cssClass: 'alertDanger'\r\n        });\r\n        confirm.present();\r\n    };\r\n    return AddserviceinfoPage;\r\n}());\r\n__decorate([\r\n    ViewChild('fileInput'),\r\n    __metadata(\"design:type\", Object)\r\n], AddserviceinfoPage.prototype, \"fileInput\", void 0);\r\nAddserviceinfoPage = __decorate([\r\n    Component({\r\n        selector: 'page-addserviceinfo',\r\n        templateUrl: 'addserviceinfo.html',\r\n        providers: [Camera, FileChooser, Transfer, File, DatePicker]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _b || Object, typeof (_c = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _c || Object, typeof (_d = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _f || Object, typeof (_g = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _g || Object, typeof (_h = typeof ViewController !== \"undefined\" && ViewController) === \"function\" && _h || Object, typeof (_j = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _j || Object, typeof (_k = typeof Camera !== \"undefined\" && Camera) === \"function\" && _k || Object, typeof (_l = typeof FileChooser !== \"undefined\" && FileChooser) === \"function\" && _l || Object, typeof (_m = typeof Transfer !== \"undefined\" && Transfer) === \"function\" && _m || Object, typeof (_o = typeof File !== \"undefined\" && File) === \"function\" && _o || Object, typeof (_p = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _p || Object])\r\n], AddserviceinfoPage);\r\nexport { AddserviceinfoPage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\r\n//# sourceMappingURL=addserviceinfo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addserviceinfo/addserviceinfo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, AlertController } from 'ionic-angular';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { AddserviceinfoPage } from '../addserviceinfo/addserviceinfo';\r\nimport { UnitsPage } from '../units/units';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { AlarmdetailsPage } from '../alarmdetails/alarmdetails';\r\nimport { ServicedetailsPage } from '../servicedetails/servicedetails';\r\nimport { CommentdetailsPage } from '../commentdetails/commentdetails';\r\nimport { EmailPage } from '../email/email';\r\nimport { MapsPage } from '../maps/maps';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddrequestsupportPage } from '../addrequestsupport/addrequestsupport';\r\nimport { HomePage } from '../home/home';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { CalendardetailPage } from '../calendardetail/calendardetail';\r\n/**\r\n * Generated class for the ServicinginfoPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar NotificationPage = NotificationPage_1 = (function () {\r\n    function NotificationPage(sanitizer, http, toastCtrl, alertCtrl, NP, navParams, nav, loadingCtrl) {\r\n        this.sanitizer = sanitizer;\r\n        this.http = http;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.atMentionedInfo = [];\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'companygroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.notificationAllLists = [];\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pageTitle = 'Notifications';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    NotificationPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad NotificationPage');\r\n    };\r\n    NotificationPage.prototype.notificationdetails = function (item, nottype) {\r\n        console.log(nottype);\r\n        console.log(JSON.stringify(item));\r\n        //http://denyoappv2.stridecdev.com/changestatusapibell_list?table_id=25&loginid=5\r\n        var body = \"is_mobile=1&loginid=\" + this.userId +\r\n            \"&table_id=\" + item.table_id, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/changestatusapibell_list\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                //this.sendNotification(`Comment count successfully removed`);\r\n            }\r\n            else {\r\n                // this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        /*\r\n            if (nottype == 'Alarm') {\r\n              this.nav.setRoot(AlarmdetailsPage, {\r\n                record: item\r\n              });\r\n            }\r\n          \r\n            if (nottype == 'Service') {\r\n              this.nav.setRoot(ServicedetailsPage, {\r\n                record: item\r\n              });\r\n            }\r\n            if (nottype == 'Comment') {\r\n              this.nav.setRoot(CommentdetailsPage, {\r\n                record: item\r\n              });\r\n            }\r\n        */\r\n        if (nottype == 'M') {\r\n            // this.nav.setRoot(EmailPage);\r\n            this.nav.setRoot(EmailPage, {\r\n                record: item.table_id,\r\n                act: 'Push'\r\n            });\r\n        }\r\n        else if (nottype == 'OA') {\r\n            this.nav.setRoot(AlarmdetailsPage, {\r\n                record: item.table_id,\r\n                act: 'Push'\r\n            });\r\n        }\r\n        else if (nottype == 'A') {\r\n            //this.nav.setRoot(AlarmdetailsPage);\r\n            this.nav.setRoot(AlarmdetailsPage, {\r\n                record: item.table_id,\r\n                act: 'Push'\r\n            });\r\n        }\r\n        else if (nottype == 'C') {\r\n            //this.nav.setRoot(CommentdetailsPage);\r\n            this.nav.setRoot(CommentdetailsPage, {\r\n                record: item.table_id,\r\n                act: 'Push'\r\n            });\r\n        }\r\n        else if (nottype == 'E') {\r\n            this.nav.setRoot(CalendardetailPage, {\r\n                record: item.table_id,\r\n                act: 'Push'\r\n            });\r\n        }\r\n        else if (nottype == 'S') {\r\n            // this.nav.setRoot(ServicedetailsPage);\r\n            this.nav.setRoot(ServicedetailsPage, {\r\n                record: item.table_id,\r\n                act: 'Push'\r\n            });\r\n        }\r\n    };\r\n    NotificationPage.prototype.ionViewWillEnter = function () {\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Service Info Record Param Value:\" + JSON.stringify(this.NP.get(\"record\")));\r\n        }\r\n        this.reportData.startindex = 0;\r\n        this.reportData.sort = \"service_id\";\r\n        this.doNotification();\r\n        // Atmentioned Tag Storage\r\n    };\r\n    NotificationPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    NotificationPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.notificationAllLists = [];\r\n        this.doNotification();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    NotificationPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doNotification();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    NotificationPage.prototype.doNotification = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"comapny\";\r\n        }\r\n        // let editItem = this.NP.get(\"record\");\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        // url: any = this.apiServiceURL + \"/reporttemplate?is_mobile=1\";\r\n        url = this.apiServiceURL + \"/getpushnotification_app?ses_login_id=\" + this.userId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(\"UCS\" + JSON.stringify(res));\r\n            if (res.notification != undefined) {\r\n                if (res.notification.length > 0) {\r\n                    for (var notifications in res.notification) {\r\n                        var isphoto = 0;\r\n                        // if (res.notification[notifications].id != 'null') {\r\n                        //   isphoto = 1;\r\n                        // }\r\n                        // if (res.notification[notifications].id != null) {\r\n                        //   isphoto = 1;\r\n                        // }\r\n                        // if (res.notification[notifications].id != '') {\r\n                        //   isphoto = 1;\r\n                        // }\r\n                        var usericon = void 0;\r\n                        if (res.notification[notifications].usericon != '') {\r\n                            usericon = _this.apiServiceURL + \"/staffphotos/\" + res.notification[notifications].usericon;\r\n                        }\r\n                        else {\r\n                            usericon = _this.apiServiceURL + \"/images/default.png\";\r\n                        }\r\n                        _this.notificationAllLists.push({\r\n                            table_id: res.notification[notifications].table_id,\r\n                            notify_to_readstatus: res.notification[notifications].notify_to_readstatus,\r\n                            photo: usericon,\r\n                            notify_type: res.notification[notifications].notify_type,\r\n                            content: res.notification[notifications].content,\r\n                            date_time: res.notification[notifications].date_time\r\n                        });\r\n                        console.log(JSON.stringify(_this.notificationAllLists));\r\n                    }\r\n                    _this.totalCount = res.totalCount;\r\n                    _this.reportData.startindex += _this.reportData.results;\r\n                }\r\n                else {\r\n                    //this.totalCount = 0;\r\n                }\r\n            }\r\n            // console.log(\"Total Record:2\" + this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    NotificationPage.prototype.doAdd = function () {\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(AddserviceinfoPage, {\r\n            record: this.NP.get(\"record\"),\r\n            act: 'Add'\r\n        });\r\n    };\r\n    NotificationPage.prototype.doRequest = function () {\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(AddrequestsupportPage, {\r\n            record: this.NP.get(\"record\"),\r\n            act: 'Add'\r\n        });\r\n    };\r\n    NotificationPage.prototype.doEdit = function (item, act) {\r\n        localStorage.setItem(\"microtime\", \"\");\r\n        this.nav.setRoot(AddserviceinfoPage, {\r\n            record: item,\r\n            act: 'Edit'\r\n        });\r\n    };\r\n    NotificationPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this unit group?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.notificationAllLists.length; q++) {\r\n                            if (_this.notificationAllLists[q] == item) {\r\n                                _this.notificationAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    NotificationPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/services/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Services info was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    NotificationPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    NotificationPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage_1);\r\n    };\r\n    NotificationPage.prototype.previous = function () {\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    NotificationPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    NotificationPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    NotificationPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    NotificationPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    NotificationPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return NotificationPage;\r\n}());\r\nNotificationPage = NotificationPage_1 = __decorate([\r\n    Component({\r\n        selector: 'page-notification',\r\n        templateUrl: 'notification.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _f || Object, typeof (_g = typeof NavController !== \"undefined\" && NavController) === \"function\" && _g || Object, typeof (_h = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _h || Object])\r\n], NotificationPage);\r\nexport { NotificationPage };\r\nvar NotificationPage_1, _a, _b, _c, _d, _e, _f, _g, _h;\r\n//# sourceMappingURL=notification.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notification/notification.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AddunitsthreePage } from '../addunitsthree/addunitsthree';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddunitsfourPage = (function () {\r\n    function AddunitsfourPage(nav, http, NP, fb, toastCtrl, loadingCtrl, ngZone) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.ngZone = ngZone;\r\n        this.isSubmitted = false;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.userInfo = [];\r\n        this.contactInfo = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.compId = localStorage.getItem(\"userInfoCompanyId\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            //\"unitgroups_id\": [\"\", Validators.required],\r\n            //\"companys_id\": [\"\", Validators.required],\r\n            \"unitgroups_id\": [\"\", Validators.required],\r\n            \"companys_id\": [\"\", Validators.required]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddunitsfourPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddunitsonePage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddunitsfourPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    AddunitsfourPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getCompanyListData();\r\n        this.getUnitGroupListData();\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Add User:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit  Units';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            if (this.NP.get(\"record\").photo) {\r\n                this.addedImgLists = this.apiServiceURL + \"/public/staffphotos/\" + this.NP.get(\"record\").photo;\r\n                console.log(this.addedImgLists);\r\n            }\r\n            var editItem = this.NP.get(\"record\");\r\n            this.unitgroups_id = editItem.unitgroups_id;\r\n            this.companys_id = editItem.companys_id;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New  Units';\r\n        }\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log('A');\r\n            for (var key in info) {\r\n                console.log('B');\r\n                var keyindex = void 0;\r\n                if (this.NP.get(\"record\")) {\r\n                    keyindex = 0;\r\n                }\r\n                else {\r\n                    keyindex = 1;\r\n                }\r\n                console.log(\"Key:\" + key);\r\n                console.log(\"Key Index:\" + keyindex);\r\n                if (key == keyindex) {\r\n                    console.log('Key' + key);\r\n                    this.unitname = info[key].unitname;\r\n                    this.createdby = info[key].createdby;\r\n                    this.projectname = info[key].projectname;\r\n                    this.controllerid = info[key].controllerid;\r\n                    this.neaplateno = info[key].neaplateno;\r\n                    this.models_id = info[key].models_id;\r\n                    this.location = info[key].location;\r\n                    this.latitude = info[key].latitude;\r\n                    this.longitude = info[key].longitude;\r\n                    this.contact_name = info[key].contact_name;\r\n                    this.alarmhashtags = info[key].alarmhashtags;\r\n                    this.contact_number = info[key].contact_number;\r\n                    console.log(\"Unit Name:\" + this.unitname);\r\n                    console.log(\"Contact Details1\" + info[key].contactInfo);\r\n                    console.log(\"Contact Details2\" + JSON.stringify(info[key].contactInfo));\r\n                    //console.log(JSON.stringify(this));\r\n                    this.contactInfo = info[key].contactInfo;\r\n                }\r\n                else {\r\n                    console.log('Key' + key);\r\n                    this.unitname = info[0].unitname;\r\n                    this.createdby = info[0].createdby;\r\n                    this.unitname = info[0].unitname;\r\n                    this.createdby = info[0].createdby;\r\n                    this.projectname = info[0].projectname;\r\n                    this.controllerid = info[0].controllerid;\r\n                    this.neaplateno = info[0].neaplateno;\r\n                    this.models_id = info[0].models_id;\r\n                    this.location = info[0].location;\r\n                    this.latitude = info[0].latitude;\r\n                    this.longitude = info[0].longitude;\r\n                    this.contact_name = info[0].contact_name;\r\n                    this.alarmhashtags = info[0].alarmhashtags;\r\n                    this.contact_number = info[0].contact_number;\r\n                    this.contactInfo = info[0].contactInfo;\r\n                    console.log(\"Unit Name:\" + this.unitname);\r\n                    console.log(\"Contact Details1\" + info[0].contactInfo);\r\n                    console.log(\"Contact Details2\" + JSON.stringify(info[0].contactInfo));\r\n                }\r\n                /* this.userInfo.push({\r\n                   info\r\n                 });\r\n                 console.log(\"User Information:\" + JSON.stringify(this.userInfo));\r\n                 */\r\n            }\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddunitsfourPage.prototype.selectEntry = function (item) {\r\n        this.unitgroups_id = item.unitgroups_id;\r\n        this.companys_id = item.companys_id;\r\n        this.latitude = item.latitude;\r\n        this.longitude = item.longitude;\r\n        this.recordID = item.unit_id;\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddunitsfourPage.prototype.createEntry = function (unitgroups_id, companys_id, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            this.alarmhashtags = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        this.timezone = '2017-06-15 00:00:00';\r\n        //this.longitude = \"9.918418\";\r\n        //this.latitude = \"78.148566\";\r\n        console.log(\"Final User Info 1:\" + this.userInfo);\r\n        console.log(\"Final User Info 2:\" + JSON.stringify(this.userInfo));\r\n        var body = \"is_mobile=1&unitname=\" + this.unitname +\r\n            \"&projectname=\" + this.projectname +\r\n            \"&controllerid=\" + this.controllerid +\r\n            \"&neaplateno=\" + this.neaplateno +\r\n            \"&models_id=\" + this.models_id +\r\n            \"&location=\" + this.location +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&longitude=\" + this.longitude +\r\n            \"&latitude=\" + this.latitude +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&contactInfo=\" + JSON.stringify(this.contactInfo) +\r\n            //\"&contact_number=\" + this.contact_number +\r\n            //\"&contact_name=\" + this.contact_name +\r\n            \"&alarmnotificationto=\" + this.alarmhashtags +\r\n            \"&timezone=\" + this.timezone +\r\n            \"&companys_id=\" + this.companys_id +\r\n            \"&unitgroups_id=\" + this.unitgroups_id, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/units/store\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.sendNotification(\"Units created was successfully added\");\r\n                _this.nav.setRoot(UnitsPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        /* this.nav.setRoot(UnitsPage, {\r\n           accountInfo: this.userInfo\r\n         });*/\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddunitsfourPage.prototype.updateEntry = function (unitgroups_id, companys_id, createdby) {\r\n        var _this = this;\r\n        this.isSubmitted = true;\r\n        this.userInfo.push({\r\n            unitgroups_id: unitgroups_id,\r\n            companys_id: companys_id,\r\n            createdby: createdby,\r\n        });\r\n        //this.longitude = \"9.918418\";\r\n        //this.latitude = \"78.148566\";\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            this.alarmhashtags = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        this.timezone = '2017-06-15 00:00:00';\r\n        var body = \"is_mobile=1&unit_id=\" + this.recordID +\r\n            \"&unitname=\" + this.unitname +\r\n            \"&projectname=\" + this.projectname +\r\n            \"&controllerid=\" + this.controllerid +\r\n            \"&neaplateno=\" + this.neaplateno +\r\n            \"&models_id=\" + this.models_id +\r\n            \"&location=\" + this.location +\r\n            \"&createdby=\" + this.createdby +\r\n            \"&updatedby=\" + this.createdby +\r\n            \"&longitude=\" + this.longitude +\r\n            \"&latitude=\" + this.latitude +\r\n            \"&contactInfo=\" + JSON.stringify(this.contactInfo) +\r\n            //\"&contact_number=\" + this.contact_number +\r\n            // \"&contact_name=\" + this.contact_name +\r\n            \"&alarmnotificationto=\" + this.alarmhashtags +\r\n            //\"&unitgroups_id=\" + this.unitgroups_id +\r\n            \"&timezone=\" + this.timezone +\r\n            \"&companys_id=\" + this.companys_id +\r\n            \"&unitgroups_id=\" + this.unitgroups_id, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/units/update\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                localStorage.setItem(\"atMentionResult\", '');\r\n                _this.sendNotification(\"Units was successfully updated\");\r\n                _this.nav.setRoot(UnitsPage);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddunitsfourPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var unitgroups_id = this.form.controls[\"unitgroups_id\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"api/companygroup.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user       \r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the unit: \" + unitgroups_id + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddunitsfourPage.prototype.saveEntry = function () {\r\n        var unitgroups_id = this.form.controls[\"unitgroups_id\"].value, companys_id = this.form.controls[\"companys_id\"].value;\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            if (this.isEdited) {\r\n                this.updateEntry(unitgroups_id, companys_id, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(unitgroups_id, companys_id, this.userId);\r\n            }\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddunitsfourPage.prototype.resetFields = function () {\r\n        this.unitgroups_id = \"\";\r\n        this.companys_id = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddunitsfourPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddunitsfourPage.prototype.getCompanyListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getcompanies?loginid=\" + this.userId;\r\n        var res;\r\n        console.log(\"URL\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            _this.responseResultCompany = res.companies;\r\n        });\r\n    };\r\n    AddunitsfourPage.prototype.getUnitGroupListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getunitgroups?loginid=\" + this.userId + \"&company_id=\" + this.compId;\r\n        var res;\r\n        console.log(\"URL\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            _this.responseResultUnitGroup = res.unitgroups;\r\n        });\r\n    };\r\n    AddunitsfourPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AddunitsfourPage.prototype.previous = function () {\r\n        this.nav.setRoot(AddunitsthreePage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddunitsfourPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddunitsfourPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddunitsfourPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddunitsfourPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddunitsfourPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddunitsfourPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddunitsfourPage;\r\n}());\r\nAddunitsfourPage = __decorate([\r\n    Component({\r\n        selector: 'page-addunitsfour',\r\n        templateUrl: 'addunitsfour.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object, typeof (_g = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _g || Object])\r\n], AddunitsfourPage);\r\nexport { AddunitsfourPage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=addunitsfour.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addunitsfour/addunitsfour.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, NgZone } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AddunitsfourPage } from '../addunitsfour/addunitsfour';\r\nimport { AddunitstwoPage } from '../addunitstwo/addunitstwo';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddunitsthreePage = (function () {\r\n    function AddunitsthreePage(nav, http, NP, fb, toastCtrl, loadingCtrl, ngZone) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.ngZone = ngZone;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.cont2 = false;\r\n        this.cont3 = false;\r\n        this.cont4 = false;\r\n        this.cont5 = false;\r\n        this.userInfo = [];\r\n        this.contactInfo = [];\r\n        this.contactnameArray = [];\r\n        this.contactnumberArray = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"alarmhashtags\": [\"\", Validators.required],\r\n            \"contact_name_1\": [\"\"],\r\n            'contact_number_1': [\"\"],\r\n            \"contact_name_2\": [\"\"],\r\n            'contact_number_2': [\"\"],\r\n            \"contact_name_3\": [\"\"],\r\n            'contact_number_3': [\"\"],\r\n            \"contact_name_4\": [\"\"],\r\n            'contact_number_4': [\"\"],\r\n            \"contact_name_5\": [\"\"],\r\n            'contact_number_5': [\"\"],\r\n            \"contact_name\": [\"\"],\r\n            'contact_number': [\"\"],\r\n            \"primary\": [\"\", Validators.compose([Validators.required, Validators.minLength(1), Validators.maxLength(5)])],\r\n            \"primary_2\": [\"\"],\r\n            \"primary_3\": [\"\"],\r\n            \"primary_4\": [\"\"],\r\n            \"primary_5\": [\"\"],\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddunitsthreePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddunitsonePage');\r\n        this.pageLoad();\r\n    };\r\n    AddunitsthreePage.prototype.getPrimaryContact = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation = '';\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.getPrimaryContact2 = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation2 = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation2 = '';\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.getPrimaryContact3 = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation3 = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation3 = '';\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.getPrimaryContact4 = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation4 = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation4 = '';\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.getPrimaryContact5 = function (ev) {\r\n        console.log(ev.target.value);\r\n        var char = ev.target.value.toString();\r\n        if (char.length > 5) {\r\n            console.log('Reached five characters above');\r\n            this.borderbottomredvalidation5 = 'border-bottom-validtion';\r\n        }\r\n        else {\r\n            console.log('Reached five characters below');\r\n            this.borderbottomredvalidation5 = '';\r\n        }\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddunitsthreePage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    AddunitsthreePage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getJsonCountryListData();\r\n        if (this.NP.get(\"record\")) {\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit  Units';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            if (this.NP.get(\"record\").photo) {\r\n                this.addedImgLists = this.apiServiceURL + \"/public/staffphotos/\" + this.NP.get(\"record\").photo;\r\n                console.log(this.addedImgLists);\r\n            }\r\n            var editItem = this.NP.get(\"record\");\r\n            this.alarmhashtags = editItem.alarmnotificationto;\r\n            var contactArr = editItem.contacts;\r\n            if (contactArr != undefined && contactArr != 'undefined' && contactArr != '') {\r\n                var hashhypenhash = contactArr.split(\"#\");\r\n                for (var i = 0; i < hashhypenhash.length; i++) {\r\n                    var contDataArr = hashhypenhash[i].split(\"|\");\r\n                    var contactName = void 0;\r\n                    var contactNumber = void 0;\r\n                    contactName = contDataArr[0];\r\n                    contactNumber = contDataArr[1];\r\n                    console.log(\"incr:\" + i);\r\n                    console.log(\"contactName:\" + contactName);\r\n                    console.log(\"contactNumber:\" + contactNumber);\r\n                    if (i == 0) {\r\n                        this.contact_name_1 = contactName;\r\n                        this.contact_number_1 = contactNumber;\r\n                        if (this.contact_number_1 != undefined) {\r\n                            var contactSplitSpace = this.contact_number_1.split(\" \");\r\n                            this.primary = contactSplitSpace[0];\r\n                            this.contact_number_1 = contactSplitSpace[1];\r\n                        }\r\n                    }\r\n                    if (i == 1 && contactName != '') {\r\n                        this.cont2 = true;\r\n                        this.contact_name_2 = contactName;\r\n                        this.contact_number_2 = contactNumber;\r\n                        if (this.contact_number_2 != undefined) {\r\n                            var contactSplitSpace = this.contact_number_2.split(\" \");\r\n                            this.primary_2 = contactSplitSpace[0];\r\n                            this.contact_number_2 = contactSplitSpace[1];\r\n                            console.log(\"primary_2:\" + this.primary_2);\r\n                            console.log(\"contact_number_2:\" + this.contact_number_2);\r\n                        }\r\n                    }\r\n                    if (i == 2 && contactName != '') {\r\n                        this.cont3 = true;\r\n                        this.contact_name_3 = contactName;\r\n                        this.contact_number_3 = contactNumber;\r\n                        if (this.contact_number_3 != undefined) {\r\n                            var contactSplitSpace = this.contact_number_3.split(\" \");\r\n                            this.primary_3 = contactSplitSpace[0];\r\n                            this.contact_number_3 = contactSplitSpace[1];\r\n                        }\r\n                    }\r\n                    if (i == 3 && contactName != '') {\r\n                        this.cont4 = true;\r\n                        this.contact_name_4 = contactName;\r\n                        this.contact_number_4 = contactNumber;\r\n                        if (this.contact_number_4 != undefined) {\r\n                            var contactSplitSpace = this.contact_number_4.split(\" \");\r\n                            this.primary_4 = contactSplitSpace[0];\r\n                            this.contact_number_4 = contactSplitSpace[1];\r\n                        }\r\n                    }\r\n                    if (i == 4 && contactName != '') {\r\n                        this.cont5 = true;\r\n                        this.contact_name_5 = contactName;\r\n                        this.contact_number_5 = contactNumber;\r\n                        if (this.contact_number_5 != undefined) {\r\n                            var contactSplitSpace = this.contact_number_5.split(\" \");\r\n                            this.primary_5 = contactSplitSpace[0];\r\n                            this.contact_number_5 = contactSplitSpace[1];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New  Units';\r\n        }\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            for (var key in info) {\r\n                var keyindex = void 0;\r\n                if (this.NP.get(\"record\")) {\r\n                    keyindex = 0;\r\n                }\r\n                else {\r\n                    keyindex = 1;\r\n                }\r\n                if (key == keyindex) {\r\n                    this.unitname = info[key].unitname;\r\n                    this.createdby = info[key].createdby;\r\n                    this.projectname = info[key].projectname;\r\n                    this.controllerid = info[key].controllerid;\r\n                    this.neaplateno = info[key].neaplateno;\r\n                    this.models_id = info[key].models_id;\r\n                    this.location = info[key].location;\r\n                    this.latitude = info[key].latitude;\r\n                    this.longitude = info[key].longitude;\r\n                }\r\n                else {\r\n                    this.unitname = info[0].unitname;\r\n                    this.createdby = info[0].createdby;\r\n                    this.unitname = info[0].unitname;\r\n                    this.createdby = info[0].createdby;\r\n                    this.projectname = info[0].projectname;\r\n                    this.controllerid = info[0].controllerid;\r\n                    this.neaplateno = info[0].neaplateno;\r\n                    this.models_id = info[0].models_id;\r\n                    this.location = info[0].location;\r\n                    this.latitude = info[0].latitude;\r\n                    this.longitude = info[0].longitude;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddunitsthreePage.prototype.selectEntry = function (item) {\r\n        this.alarmhashtags = item.alarmnotificationto;\r\n        this.recordID = item.unit_id;\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddunitsthreePage.prototype.createEntry = function (alarmhashtags, contactInfo, createdby) {\r\n        this.userInfo.push({\r\n            alarmhashtags: alarmhashtags,\r\n            contactInfo: contactInfo,\r\n            unitname: this.unitname,\r\n            createdby: this.createdby,\r\n            projectname: this.projectname,\r\n            controllerid: this.controllerid,\r\n            neaplateno: this.neaplateno,\r\n            models_id: this.models_id,\r\n            location: this.location,\r\n            latitude: this.latitude,\r\n            longitude: this.longitude\r\n        });\r\n        this.nav.setRoot(AddunitsfourPage, {\r\n            accountInfo: this.userInfo\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddunitsthreePage.prototype.updateEntry = function (alarmhashtags, contactInfo, createdby) {\r\n        if (localStorage.getItem(\"atMentionResult\") != '') {\r\n            alarmhashtags = localStorage.getItem(\"atMentionResult\");\r\n        }\r\n        this.userInfo.push({\r\n            alarmhashtags: alarmhashtags,\r\n            contactInfo: contactInfo,\r\n            unitname: this.unitname,\r\n            createdby: this.createdby,\r\n            projectname: this.projectname,\r\n            controllerid: this.controllerid,\r\n            neaplateno: this.neaplateno,\r\n            models_id: this.models_id,\r\n            location: this.location,\r\n            latitude: this.latitude,\r\n            longitude: this.longitude\r\n        });\r\n        this.nav.setRoot(AddunitsfourPage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddunitsthreePage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var alarmhashtags = this.form.controls[\"alarmhashtags\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"api/companygroup.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + alarmhashtags + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddunitsthreePage.prototype.saveEntry = function () {\r\n        var alarmhashtags = this.form.controls[\"alarmhashtags\"].value, primary = this.form.controls[\"primary\"].value;\r\n        var contact = primary + \" \" + this.form.controls[\"contact_number_1\"].value;\r\n        console.log(contact);\r\n        contact = contact.replace(\"+\", \"%2B\");\r\n        this.contactInfo.push({\r\n            contact_name: this.form.controls[\"contact_name_1\"].value,\r\n            contact_number: contact\r\n        });\r\n        if (this.cont2 = true) {\r\n            if (this.form.controls[\"contact_name_2\"].value != undefined) {\r\n                var contact_1;\r\n                contact_1 = this.form.controls[\"primary_2\"].value + \" \" + this.form.controls[\"contact_number_2\"].value;\r\n                console.log(contact_1);\r\n                contact_1 = contact_1.replace(\"+\", \"%2B\");\r\n                this.contactInfo.push({\r\n                    contact_name: this.form.controls[\"contact_name_2\"].value,\r\n                    contact_number: contact_1\r\n                });\r\n            }\r\n        }\r\n        if (this.cont3 = true) {\r\n            if (this.form.controls[\"contact_name_3\"].value != undefined) {\r\n                var contact_2;\r\n                contact_2 = this.form.controls[\"primary_3\"].value + \" \" + this.form.controls[\"contact_number_3\"].value;\r\n                console.log(contact_2);\r\n                contact_2 = contact_2.replace(\"+\", \"%2B\");\r\n                this.contactInfo.push({\r\n                    contact_name: this.form.controls[\"contact_name_3\"].value,\r\n                    contact_number: contact_2\r\n                });\r\n            }\r\n        }\r\n        if (this.cont4 = true) {\r\n            if (this.form.controls[\"contact_name_4\"].value != undefined) {\r\n                var contact_3;\r\n                contact_3 = this.form.controls[\"primary_4\"].value + \" \" + this.form.controls[\"contact_number_4\"].value;\r\n                console.log(contact_3);\r\n                contact_3 = contact_3.replace(\"+\", \"%2B\");\r\n                this.contactInfo.push({\r\n                    contact_name: this.form.controls[\"contact_name_4\"].value,\r\n                    contact_number: contact_3\r\n                });\r\n            }\r\n        }\r\n        if (this.cont5 = true) {\r\n            if (this.form.controls[\"contact_name_5\"].value != undefined) {\r\n                var contact_4;\r\n                contact_4 = this.form.controls[\"primary_5\"].value + \" \" + this.form.controls[\"contact_number_5\"].value;\r\n                console.log(contact_4);\r\n                contact_4 = contact_4.replace(\"+\", \"%2B\");\r\n                this.contactInfo.push({\r\n                    contact_name: this.form.controls[\"contact_name_5\"].value,\r\n                    contact_number: contact_4\r\n                });\r\n            }\r\n        }\r\n        /*if (this.addedImgLists) {\r\n          this.isUploadedProcessing = true;\r\n        }*/\r\n        if (this.isUploadedProcessing == false) {\r\n            if (this.isEdited) {\r\n                this.updateEntry(alarmhashtags, this.contactInfo, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(alarmhashtags, this.contactInfo, this.userId);\r\n            }\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddunitsthreePage.prototype.resetFields = function () {\r\n        this.alarmhashtags = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddunitsthreePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddunitsthreePage.prototype.getJsonCountryListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getCountries\";\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultCountry = res.countries;\r\n        });\r\n    };\r\n    AddunitsthreePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.previous = function () {\r\n        this.nav.setRoot(AddunitstwoPage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddunitsthreePage.prototype.address1get = function (hashtag) {\r\n        console.log(hashtag);\r\n        this.gethashtag = hashtag;\r\n    };\r\n    AddunitsthreePage.prototype.addmore = function () {\r\n        var len = this.contactnameArray.length;\r\n        var incr;\r\n        console.log(\"1\" + len);\r\n        if (len == 0) {\r\n            len = 1;\r\n        }\r\n        else {\r\n            console.log(\"2\" + len);\r\n            len = len + 1;\r\n            //len = parseInt(incr) + parseInt(len);\r\n        }\r\n        if (len > 4) {\r\n            console.log(\"3\" + len);\r\n            console.log('Contact details only five item');\r\n        }\r\n        else {\r\n            console.log(\"4\" + len);\r\n            console.log(\"5\" + len);\r\n            incr = len + 1;\r\n            console.log(\"6incr\" + incr);\r\n            this.contactnameArray.push({\r\n                name: 'contact_name_' + incr,\r\n                placeholder: \"Name\"\r\n            });\r\n            this.contactnumberArray.push({\r\n                name: 'contact_number_' + incr,\r\n                placeholder: \"Number\"\r\n            });\r\n        }\r\n        console.log(\"7\" + len);\r\n        if (len == 1) {\r\n            this.cont2 = true;\r\n        }\r\n        if (len == 2) {\r\n            this.cont3 = true;\r\n        }\r\n        if (len == 3) {\r\n            this.cont4 = true;\r\n        }\r\n        if (len == 4) {\r\n            this.cont5 = true;\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.remove = function (val) {\r\n        if (val == '2') {\r\n            this.contact_name_2 = '';\r\n            this.contact_number_2 = '';\r\n            this.cont2 = false;\r\n        }\r\n        if (val == '3') {\r\n            this.contact_name_3 = '';\r\n            this.contact_number_3 = '';\r\n            this.cont3 = false;\r\n        }\r\n        if (val == '4') {\r\n            this.cont4 = false;\r\n            this.contact_name_4 = '';\r\n            this.contact_number_4 = '';\r\n        }\r\n        if (val == '5') {\r\n            this.cont5 = false;\r\n            this.contact_name_5 = '';\r\n            this.contact_number_5 = '';\r\n        }\r\n    };\r\n    AddunitsthreePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddunitsthreePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddunitsthreePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddunitsthreePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddunitsthreePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddunitsthreePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddunitsthreePage;\r\n}());\r\nAddunitsthreePage = __decorate([\r\n    Component({\r\n        selector: 'page-addunitsthree',\r\n        templateUrl: 'addunitsthree.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object, typeof (_g = typeof NgZone !== \"undefined\" && NgZone) === \"function\" && _g || Object])\r\n], AddunitsthreePage);\r\nexport { AddunitsthreePage };\r\nvar _a, _b, _c, _d, _e, _f, _g;\r\n//# sourceMappingURL=addunitsthree.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addunitsthree/addunitsthree.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AddunitsthreePage } from '../addunitsthree/addunitsthree';\r\nimport { AddunitsonePage } from '../addunitsone/addunitsone';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddunitstwoPage = (function () {\r\n    function AddunitstwoPage(nav, http, NP, fb, toastCtrl, loadingCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.userInfo = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            //\"unitname\": [\"\", Validators.required],\r\n            //\"projectname\": [\"\", Validators.required],\r\n            \"unitname\": [\"\", Validators.compose([Validators.maxLength(30), Validators.required])],\r\n            \"projectname\": [\"\", Validators.compose([Validators.maxLength(30), Validators.required])],\r\n            \"models_id\": [\"\", Validators.required],\r\n            \"neaplateno\": [\"\", Validators.required],\r\n            /// \"controllerid\": [\"\", Validators.required]\r\n            'controllerid': ['', Validators.required],\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    AddunitstwoPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddunitsonePage');\r\n        this.pageLoad();\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddunitstwoPage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoad();\r\n    };\r\n    AddunitstwoPage.prototype.pageLoad = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        this.getJsonModelListData();\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Add User:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit  Units';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            if (this.NP.get(\"record\").photo) {\r\n                this.addedImgLists = this.apiServiceURL + \"/public/staffphotos/\" + this.NP.get(\"record\").photo;\r\n                console.log(this.addedImgLists);\r\n            }\r\n            var editItem = this.NP.get(\"record\");\r\n            this.unitname = editItem.unitname;\r\n            this.projectname = editItem.projectname;\r\n            this.controllerid = editItem.controllerid;\r\n            this.models_id = editItem.models_id;\r\n            this.neaplateno = editItem.neaplateno;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New  Units';\r\n        }\r\n        if (this.NP.get(\"accountInfo\")) {\r\n            var info = this.NP.get(\"accountInfo\");\r\n            //var objects = JSON.parse(info);\r\n            console.log(\"JSON.stringify:\" + JSON.stringify(info));\r\n            console.log(\"Length:\" + info.length);\r\n            console.log('A');\r\n            for (var key in info) {\r\n                console.log('B');\r\n                var keyindex = void 0;\r\n                if (this.NP.get(\"record\")) {\r\n                    keyindex = 0;\r\n                }\r\n                else {\r\n                    keyindex = 1;\r\n                }\r\n                console.log(\"Key:\" + key);\r\n                console.log(\"Key Index:\" + keyindex);\r\n                if (key == keyindex) {\r\n                    console.log('Key' + key);\r\n                    this.location = info[key].location;\r\n                    this.createdby = info[key].createdby;\r\n                    this.latitude = info[key].latitude;\r\n                    this.longitude = info[key].longitude;\r\n                    console.log(\"Location for User Account:\" + this.location);\r\n                    //console.log(JSON.stringify(this));\r\n                }\r\n                else {\r\n                    console.log('Key' + key);\r\n                    this.location = info[0].location;\r\n                    this.createdby = info[0].createdby;\r\n                    this.latitude = info[0].latitude;\r\n                    this.longitude = info[0].longitude;\r\n                    console.log(\"Location for User Account:\" + this.location);\r\n                }\r\n                /* this.userInfo.push({\r\n                   info\r\n                 });\r\n                 console.log(\"User Information:\" + JSON.stringify(this.userInfo));\r\n                 */\r\n            }\r\n        }\r\n        //Static Storage\r\n        /*let data = [\r\n          { username: 'Krishanth', fullname: 'Kannan' },\r\n          { username: 'Thibishanth', fullname: 'Kannan' },\r\n          { username: 'Gohila', fullname: 'Kannan' },\r\n          { username: 'lodev09', fullname: 'Jovanni Lo' },\r\n          { username: 'foo', fullname: 'Foo User' },\r\n          { username: 'bar', fullname: 'Bar User' },\r\n          { username: 'twbs', fullname: 'Twitter Bootstrap' },\r\n          { username: 'john', fullname: 'John Doe' },\r\n          { username: 'jane', fullname: 'Jane Doe' },\r\n          { username: 'Kannan', fullname: 'Nagarathinam' },\r\n        ]*/\r\n        /* this.atMentionedInfo.push({\r\n           username: \"Kannan\",\r\n           fullname: \"Nagarathinam Kannan\"\r\n         });\r\n     \r\n         this.atMentionedInfo.push({\r\n           username: \"Krishanth\",\r\n           fullname: \"Kannan Krishanth\"\r\n         });\r\n     \r\n         this.atMentionedInfo.push({\r\n           username: \"Thibishanth\",\r\n           fullname: \"Kannan Krishanth\"\r\n         });\r\n         localStorage.setItem(\"atMentionedStorage\", JSON.stringify(this.atMentionedInfo));*/\r\n        //Static Storage\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddunitstwoPage.prototype.selectEntry = function (item) {\r\n        this.unitname = item.unitname;\r\n        this.projectname = item.projectname;\r\n        this.controllerid = item.controllerid;\r\n        this.models_id = item.models_id;\r\n        this.neaplateno = item.neaplateno;\r\n        this.recordID = item.unit_id;\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddunitstwoPage.prototype.createEntry = function (unitname, projectname, controllerid, models_id, neaplateno, createdby) {\r\n        var _this = this;\r\n        // If Controller Id Check Unique\r\n        var body = \"unit_id=0&controllerid=\" + controllerid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/checkcontrollerid\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(JSON.stringify(data.json()));\r\n                _this.hideForm = true;\r\n                if (res.msg[0].Error == '1') {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.userInfo.push({\r\n                        unitname: unitname,\r\n                        projectname: projectname,\r\n                        controllerid: controllerid,\r\n                        models_id: models_id,\r\n                        neaplateno: neaplateno,\r\n                        createdby: createdby,\r\n                        location: _this.location,\r\n                        latitude: _this.latitude,\r\n                        longitude: _this.longitude\r\n                    });\r\n                    _this.nav.setRoot(AddunitsthreePage, {\r\n                        accountInfo: _this.userInfo,\r\n                        record: _this.NP.get(\"record\")\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        // If Controller Id Check Unique\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddunitstwoPage.prototype.updateEntry = function (unitname, projectname, controllerid, models_id, neaplateno, createdby) {\r\n        var _this = this;\r\n        // If Controller Id Check Unique\r\n        var body = \"unit_id=\" + this.NP.get(\"record\").unit_id + \"&controllerid=\" + controllerid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/checkcontrollerid\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            var res = data.json();\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(JSON.stringify(data.json()));\r\n                _this.hideForm = true;\r\n                if (res.msg[0].Error == '1') {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.userInfo.push({\r\n                        unitname: unitname,\r\n                        projectname: projectname,\r\n                        controllerid: controllerid,\r\n                        models_id: models_id,\r\n                        neaplateno: neaplateno,\r\n                        createdby: createdby,\r\n                        location: _this.location,\r\n                        latitude: _this.latitude,\r\n                        longitude: _this.longitude\r\n                    });\r\n                    _this.nav.setRoot(AddunitsthreePage, {\r\n                        accountInfo: _this.userInfo,\r\n                        record: _this.NP.get(\"record\")\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        // If Controller Id Check Unique\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    AddunitstwoPage.prototype.deleteEntry = function () {\r\n        var _this = this;\r\n        var unitname = this.form.controls[\"unitname\"].value, body = \"key=delete&recordID=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"api/companygroup.php\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.hideForm = true;\r\n                _this.sendNotification(\"Congratulations the company group: \" + unitname + \" was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddunitstwoPage.prototype.saveEntry = function () {\r\n        var unitname = this.form.controls[\"unitname\"].value, projectname = this.form.controls[\"projectname\"].value, controllerid = this.form.controls[\"controllerid\"].value, models_id = this.form.controls[\"models_id\"].value, neaplateno = this.form.controls[\"neaplateno\"].value;\r\n        console.log(this.form.controls);\r\n        if (this.isUploadedProcessing == false) {\r\n            if (this.isEdited) {\r\n                this.updateEntry(unitname, projectname, controllerid, models_id, neaplateno, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(unitname, projectname, controllerid, models_id, neaplateno, this.userId);\r\n            }\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddunitstwoPage.prototype.resetFields = function () {\r\n        this.unitname = \"\";\r\n        this.projectname = \"\";\r\n        this.controllerid = \"\";\r\n        this.models_id = \"\";\r\n        this.neaplateno = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddunitstwoPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddunitstwoPage.prototype.getJsonModelListData = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/getmodels\";\r\n        var res;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseResultModel = res.models;\r\n        });\r\n    };\r\n    AddunitstwoPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AddunitstwoPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddunitstwoPage.prototype.previous = function () {\r\n        this.nav.setRoot(AddunitsonePage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    AddunitstwoPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddunitstwoPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddunitstwoPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddunitstwoPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddunitstwoPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return AddunitstwoPage;\r\n}());\r\nAddunitstwoPage = __decorate([\r\n    Component({\r\n        selector: 'page-addunitstwo',\r\n        templateUrl: 'addunitstwo.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], AddunitstwoPage);\r\nexport { AddunitstwoPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=addunitstwo.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addunitstwo/addunitstwo.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController, LoadingController, Keyboard } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport 'rxjs/add/operator/map';\r\nimport { AddunitstwoPage } from '../addunitstwo/addunitstwo';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { NativeGeocoder } from '@ionic-native/native-geocoder';\r\n/**\r\n * Generated class for the AddcompanygroupPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddunitsonePage = (function () {\r\n    function AddunitsonePage(http, keyboard, nativeGeocoder, nav, NP, fb, toastCtrl, loadingCtrl) {\r\n        this.http = http;\r\n        this.keyboard = keyboard;\r\n        this.nativeGeocoder = nativeGeocoder;\r\n        this.nav = nav;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.isProgress = false;\r\n        this.isUploaded = true;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        this.userInfo = [];\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.isUploadedProcessing = false;\r\n        this.showFooter = true;\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"location\": [\"\", Validators.required]\r\n        });\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.keyboardCheck();\r\n    }\r\n    AddunitsonePage.prototype.keyboardCheck = function () {\r\n        if (this.keyboard.isOpen()) {\r\n            // You logic goes here\r\n            this.showFooter = false;\r\n        }\r\n    };\r\n    AddunitsonePage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddunitsonePage');\r\n        this.pageLoadedData();\r\n    };\r\n    AddunitsonePage.prototype.pageLoadedData = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.resetFields();\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(\"Add User:\" + JSON.stringify(this.NP.get(\"record\")));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            this.pageTitle = 'Edit Units';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n            var editItem = this.NP.get(\"record\");\r\n            this.location = editItem.location;\r\n        }\r\n        else {\r\n            this.isEdited = false;\r\n            this.pageTitle = 'New  Units';\r\n        }\r\n        // Get local\r\n        if (localStorage.getItem(\"location\")) {\r\n            this.location = localStorage.getItem(\"location\");\r\n        }\r\n        //\r\n    };\r\n    // Determine whether we adding or editing a record\r\n    // based on any supplied navigation parameters\r\n    AddunitsonePage.prototype.ionViewWillEnter = function () {\r\n        this.pageLoadedData();\r\n    };\r\n    // Assign the navigation retrieved data to properties\r\n    // used as models on the page's HTML form\r\n    AddunitsonePage.prototype.selectEntry = function (item) {\r\n        this.location = item.location;\r\n        this.recordID = item.userid;\r\n        this.getGps();\r\n    };\r\n    // Save a new record that has been added to the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of create followed by the key/value pairs\r\n    // for the record data\r\n    AddunitsonePage.prototype.createEntry = function (location, createdby) {\r\n        this.userInfo.push({\r\n            location: location,\r\n            createdby: createdby,\r\n            latitude: this.lat,\r\n            longitude: this.lang\r\n        });\r\n        this.nav.setRoot(AddunitstwoPage, {\r\n            accountInfo: this.userInfo\r\n        });\r\n    };\r\n    // Update an existing record that has been edited in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of update followed by the key/value pairs\r\n    // for the record data\r\n    AddunitsonePage.prototype.updateEntry = function (location, createdby) {\r\n        this.userInfo.push({\r\n            location: location,\r\n            createdby: createdby,\r\n            latitude: this.lat,\r\n            longitude: this.lang\r\n        });\r\n        this.nav.setRoot(AddunitstwoPage, {\r\n            accountInfo: this.userInfo,\r\n            record: this.NP.get(\"record\")\r\n        });\r\n    };\r\n    // Handle data submitted from the page's HTML form\r\n    // Determine whether we are adding a new record or amending an\r\n    // existing record\r\n    AddunitsonePage.prototype.saveEntry = function () {\r\n        var location = this.form.controls[\"location\"].value;\r\n        // Local Storage for Back to Previous for handled that data\r\n        localStorage.setItem(\"location\", location);\r\n        // Local Storage for Back to Previous for handled that data\r\n        console.log(this.form.controls);\r\n        /*if (this.addedImgLists) {\r\n          this.isUploadedProcessing = true;\r\n        }*/\r\n        if (this.isUploadedProcessing == false) {\r\n            if (this.isEdited) {\r\n                this.updateEntry(location, this.userId);\r\n            }\r\n            else {\r\n                this.createEntry(location, this.userId);\r\n            }\r\n        }\r\n    };\r\n    // Clear values in the page's HTML form fields\r\n    AddunitsonePage.prototype.resetFields = function () {\r\n        this.location = \"\";\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    AddunitsonePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddunitsonePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    AddunitsonePage.prototype.previous = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddunitsonePage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    AddunitsonePage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    AddunitsonePage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    AddunitsonePage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    AddunitsonePage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    AddunitsonePage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    AddunitsonePage.prototype.getGps = function () {\r\n        var _this = this;\r\n        var locationSplit = this.location.split(\",\");\r\n        for (var i = 0; i < locationSplit.length; i++) {\r\n            if (i == 0) {\r\n                console.log(locationSplit[i]);\r\n                this.nativeGeocoder.forwardGeocode(locationSplit[i])\r\n                    .then(function (coordinates) {\r\n                    console.log('The coordinates are latitude=' + coordinates.latitude + ' and longitude=' + coordinates.longitude);\r\n                    _this.lat = coordinates.latitude;\r\n                    _this.lang = coordinates.longitude;\r\n                })\r\n                    .catch(function (error) { return console.log(error); });\r\n            }\r\n        }\r\n    };\r\n    return AddunitsonePage;\r\n}());\r\nAddunitsonePage = __decorate([\r\n    Component({\r\n        selector: 'page-addunitsone',\r\n        templateUrl: 'addunitsone.html',\r\n        providers: [NativeGeocoder]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof Keyboard !== \"undefined\" && Keyboard) === \"function\" && _b || Object, typeof (_c = typeof NativeGeocoder !== \"undefined\" && NativeGeocoder) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _f || Object, typeof (_g = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _g || Object, typeof (_h = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _h || Object])\r\n], AddunitsonePage);\r\nexport { AddunitsonePage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\n//# sourceMappingURL=addunitsone.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addunitsone/addunitsone.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { AddunitsonePage } from '../addunitsone/addunitsone';\r\nimport { ViewcompanygroupPage } from '../viewcompanygroup/viewcompanygroup';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { HomePage } from '../home/home';\r\nimport { UnitdetailsPage } from '../unitdetails/unitdetails';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the UserPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar UnitsPage = UnitsPage_1 = (function () {\r\n    function UnitsPage(http, nav, toastCtrl, alertCtrl, navParams, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.navParams = navParams;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.permissionMessage = \"Permission denied for access this page. Please contact your administrator\";\r\n        this.pet = \"ALL\";\r\n        this.sortby = 2;\r\n        this.vendorsort = \"asc\";\r\n        this.ascending = true;\r\n        //Authorization Declaration\r\n        //Authorization Declaration\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unit_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.pageTitle = 'Units';\r\n        this.str = '';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        //Authorization Get Value\r\n        this.VIEWACCESS = localStorage.getItem(\"UNITS_LISTING_VIEW\");\r\n        console.log(\"Role Authority for Unit Listing View:\" + this.VIEWACCESS);\r\n        this.CREATEACCESS = localStorage.getItem(\"UNITS_LISTING_CREATE\");\r\n        console.log(\"Role Authority for Unit Listing Create:\" + this.CREATEACCESS);\r\n        this.EDITACCESS = localStorage.getItem(\"UNITS_LISTING_EDIT\");\r\n        console.log(\"Role Authority for Unit Listing Edit:\" + this.EDITACCESS);\r\n        this.DELETEACCESS = localStorage.getItem(\"UNITS_LISTING_DELETE\");\r\n        console.log(\"Role Authority for Unit Listing Delete:\" + this.DELETEACCESS);\r\n        //Authorization Get Value\r\n    }\r\n    UnitsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad Units Page');\r\n    };\r\n    /*******************/\r\n    /* Pull to Refresh */\r\n    /*******************/\r\n    UnitsPage.prototype.doRefresh = function (refresher) {\r\n        console.log('doRefresh function calling...');\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUnit();\r\n        setTimeout(function () {\r\n            refresher.complete();\r\n        }, 2000);\r\n    };\r\n    /****************************/\r\n    /*@doUnit calling on report */\r\n    /****************************/\r\n    UnitsPage.prototype.doUnit = function () {\r\n        var _this = this;\r\n        this.colorListArr = [\r\n            \"FBE983\",\r\n            \"5584EE\",\r\n            \"A4BDFD\",\r\n            \"47D6DC\",\r\n            \"7AE7BE\",\r\n            \"51B749\",\r\n            \"FBD75C\",\r\n            \"FFB878\",\r\n            \"FF877C\",\r\n            \"DC2128\",\r\n            \"DAADFE\",\r\n            \"E1E1E1\"\r\n        ];\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"vendor\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/units?is_mobile=1&startindex=\" + this.reportData.startindex + \"&results=\" + this.reportData.results + \"&sort=\" + this.reportData.sort + \"&dir=\" + this.reportData.sortascdesc + \"&company_id=\" + this.companyId + \"&loginid=\" + this.userId;\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.units.length);\r\n            console.log(\"2\" + res.units);\r\n            if (res.units.length > 0) {\r\n                for (var unit in res.units) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.units[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.units[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                        localStorage.setItem(\"unitfav\", favorite);\r\n                    }\r\n                    else {\r\n                        _this.fav = favorite;\r\n                        favorite = \"unfavorite\";\r\n                        localStorage.setItem(\"unitfav\", favorite);\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.units[unit].unit_id,\r\n                        unitname: res.units[unit].unitname,\r\n                        location: res.units[unit].location,\r\n                        projectname: res.units[unit].projectname,\r\n                        colorcode: res.units[unit].colorcode,\r\n                        contacts: res.units[unit].contacts,\r\n                        nextservicedate: res.units[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.units[unit].controllerid,\r\n                        neaplateno: res.units[unit].neaplateno,\r\n                        companys_id: res.units[unit].companys_id,\r\n                        unitgroups_id: res.units[unit].unitgroups_id,\r\n                        models_id: res.units[unit].models_id,\r\n                        alarmnotificationto: res.units[unit].alarmnotificationto,\r\n                        genstatus: res.units[unit].genstatus,\r\n                        lat: res.units[unit].lat,\r\n                        lng: res.units[unit].lng,\r\n                        runninghr: res.units[unit].runninghr,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    /**********************/\r\n    /* Infinite scrolling */\r\n    /**********************/\r\n    UnitsPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doUnit();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    UnitsPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.detailvalue = \"\";\r\n        localStorage.setItem(\"viewlist\", \"\");\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        if (this.VIEWACCESS > 0) {\r\n            this.reportData.startindex = 0;\r\n            this.reportData.sort = \"unit_id\";\r\n            this.doUnit();\r\n        }\r\n    };\r\n    UnitsPage.prototype.doAdd = function () {\r\n        localStorage.setItem(\"location\", '');\r\n        this.nav.setRoot(AddunitsonePage);\r\n    };\r\n    UnitsPage.prototype.getCheckBoxValue = function (item, val) {\r\n        /*console.log(\"Available data\" + val);\r\n        this.getCheckboxData.push({\r\n          availabledata: val\r\n        })*/\r\n        /*console.log(\"Available data\" + name);\r\n    this.selectedAction.push({\r\n      availabledata: name\r\n    })\r\n    console.log(JSON.stringify(this.selectedAction));*/\r\n        if (val != '') {\r\n            if (this.str == '') {\r\n                this.str = val;\r\n            }\r\n            else {\r\n                this.str = this.str + \",\" + val;\r\n            }\r\n        }\r\n        this.detailvalue = item;\r\n        localStorage.setItem(\"unitunitname\", item.unitname);\r\n        localStorage.setItem(\"unitlocation\", item.location);\r\n        localStorage.setItem(\"unitprojectname\", item.projectname);\r\n        localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n        localStorage.setItem(\"unitlat\", item.lat);\r\n        localStorage.setItem(\"unitlng\", item.lng);\r\n        localStorage.setItem(\"runninghr\", item.runninghr);\r\n        localStorage.setItem(\"nsd\", item.nextservicedate);\r\n        console.log(this.str + \"//\" + JSON.stringify(this.detailvalue));\r\n        localStorage.setItem(\"viewlist\", this.str);\r\n    };\r\n    UnitsPage.prototype.onAction = function (actpet) {\r\n        var _this = this;\r\n        console.log('Your act pet is:' + actpet);\r\n        console.log(JSON.stringify(this.str));\r\n        var urlstr;\r\n        if (actpet == 'delete') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                urlstr = \"/unitlistaction?action=delete&unitid=\" + this.str + \"&is_mobile=1&loginid=\" + this.userId;\r\n            }\r\n        }\r\n        if (actpet == 'viewdashboard') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                urlstr = \"/unitlistaction?action=dashboard&unitid=\" + this.str + \"&is_mobile=1&loginid=\" + this.userId;\r\n            }\r\n        }\r\n        if (actpet == 'view') {\r\n            if (this.str == '') {\r\n                this.sendNotification(\"Please select Atleast One Unit\");\r\n            }\r\n            else {\r\n                var item = void 0;\r\n                item = this.detailvalue;\r\n                localStorage.setItem(\"unitId\", item.unit_id);\r\n                localStorage.setItem(\"iframeunitId\", item.unit_id);\r\n                localStorage.setItem(\"unitunitname\", item.unitname);\r\n                localStorage.setItem(\"unitlocation\", item.location);\r\n                localStorage.setItem(\"unitprojectname\", item.projectname);\r\n                localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n                localStorage.setItem(\"unitlat\", item.lat);\r\n                localStorage.setItem(\"unitlng\", item.lng);\r\n                localStorage.setItem(\"runninghr\", item.runninghr);\r\n                localStorage.setItem(\"nsd\", item.nextservicedate);\r\n                this.nav.setRoot(UnitdetailsPage, {\r\n                    record: this.detailvalue\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        if (urlstr != undefined) {\r\n            //http://denyoappv2.stridecdev.com/unitlistaction/4,6/1/delete\r\n            //http://denyoappv2.stridecdev.com/unitlistaction/4,6/1/dashboard?ses_login_id=2\r\n            // let body: string = \"ses_login_id=\" + this.userId,\r\n            var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + urlstr;\r\n            console.log(url);\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    if (actpet == 'delete') {\r\n                        _this.sendNotification(\"Successfully Deleted\");\r\n                    }\r\n                    else {\r\n                        _this.sendNotification(\"Successfully Added\");\r\n                    }\r\n                    _this.reportData.startindex = 0;\r\n                    _this.reportData.sort = \"unit_id\";\r\n                    /// this.doUnit();\r\n                    _this.nav.setRoot(_this.nav.getActive().component);\r\n                }\r\n                else {\r\n                    // this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    UnitsPage.prototype.doEdit = function (item, act, unitId) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddunitsonePage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n        else if (act == 'detail') {\r\n            localStorage.setItem(\"unitId\", unitId);\r\n            localStorage.setItem(\"iframeunitId\", unitId);\r\n            localStorage.setItem(\"unitunitname\", item.unitname);\r\n            localStorage.setItem(\"unitlocation\", item.location);\r\n            localStorage.setItem(\"unitprojectname\", item.projectname);\r\n            localStorage.setItem(\"unitcolorcode\", item.colorcodeindications);\r\n            localStorage.setItem(\"unitlat\", item.lat);\r\n            localStorage.setItem(\"unitlng\", item.lng);\r\n            localStorage.setItem(\"runninghr\", item.runninghr);\r\n            console.log(\"RHR\" + item.runninghr);\r\n            localStorage.setItem(\"nsd\", item.nextservicedate);\r\n            this.nav.setRoot(UnitdetailsPage, {\r\n                record: item\r\n            });\r\n            return false;\r\n        }\r\n        else {\r\n            this.nav.setRoot(ViewcompanygroupPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    /******************************************/\r\n    /* @doConfirm called for alert dialog box **/\r\n    /******************************************/\r\n    UnitsPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this unit?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    // Remove an existing record that has been selected in the page's HTML form\r\n    // Use angular's http post method to submit the record data\r\n    // to our remote PHP script (note the body variable we have created which\r\n    // supplies a variable of key with a value of delete followed by the key/value pairs\r\n    // for the record ID we want to remove from the remote database\r\n    UnitsPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        // url: any = this.apiServiceURL + \"/units/\" + recordID + \"/1/delete\";\r\n        url = this.apiServiceURL + \"/unitlistaction?action=delete&unitid=\" + recordID + \"&is_mobile=1&loginid=\" + this.userId;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Congratulations the units was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    UnitsPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    UnitsPage.prototype.onSegmentChanged = function (val) {\r\n        var splitdata = val.split(\",\");\r\n        this.reportData.sort = splitdata[0];\r\n        this.reportData.sortascdesc = splitdata[1];\r\n        //this.reportData.status = \"ALL\";\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        this.doUnit();\r\n    };\r\n    /********************/\r\n    /* Sorting function */\r\n    /********************/\r\n    UnitsPage.prototype.doSort = function (val) {\r\n        console.log('1');\r\n        this.reportAllLists = [];\r\n        this.reportData.startindex = 0;\r\n        console.log('2');\r\n        this.sortby = 1;\r\n        if (this.vendorsort == \"asc\") {\r\n            this.reportData.sortascdesc = \"desc\";\r\n            this.vendorsort = \"desc\";\r\n            this.ascending = false;\r\n            console.log('3');\r\n        }\r\n        else {\r\n            console.log('4');\r\n            this.reportData.sortascdesc = \"asc\";\r\n            this.vendorsort = \"asc\";\r\n            this.ascending = true;\r\n        }\r\n        console.log('5');\r\n        this.reportData.sort = val;\r\n        this.doUnit();\r\n        console.log('6');\r\n    };\r\n    UnitsPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    UnitsPage.prototype.previous = function () {\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    UnitsPage.prototype.favorite = function (unit_id) {\r\n        var _this = this;\r\n        this.reportData.startindex = 0;\r\n        this.reportAllLists = [];\r\n        var body = \"unitid=\" + unit_id + \"&is_mobile=1\" + \"&loginid=\" + this.userId, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/setunitfavorite\";\r\n        console.log(url);\r\n        console.log(body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            console.log(data);\r\n            var res = data.json();\r\n            console.log(res.msg[0].Error);\r\n            console.log(res.msg[0].result);\r\n            if (res.msg[0] == 0) {\r\n                console.log(\"Favorite\");\r\n            }\r\n            else {\r\n                console.log(\"Un Favorite\");\r\n            }\r\n            if (res.units.length > 0) {\r\n                for (var unit in res.units) {\r\n                    var colorcode = void 0;\r\n                    var favorite = void 0;\r\n                    var index = _this.colorListArr.indexOf(res.units[unit].colorcode); // 1\r\n                    console.log(\"Color Index:\" + index);\r\n                    var colorvalincrmentone = index + 1;\r\n                    colorcode = \"button\" + colorvalincrmentone;\r\n                    console.log(\"Color is\" + colorcode);\r\n                    if (res.units[unit].favorite == 1) {\r\n                        favorite = \"favorite\";\r\n                    }\r\n                    else {\r\n                        favorite = \"unfavorite\";\r\n                    }\r\n                    _this.reportAllLists.push({\r\n                        unit_id: res.units[unit].unit_id,\r\n                        unitname: res.units[unit].unitname,\r\n                        location: res.units[unit].location,\r\n                        contacts: res.units[unit].contacts,\r\n                        projectname: res.units[unit].projectname,\r\n                        colorcode: res.units[unit].colorcode,\r\n                        nextservicedate: res.units[unit].nextservicedate,\r\n                        colorcodeindications: colorcode,\r\n                        controllerid: res.units[unit].controllerid,\r\n                        neaplateno: res.units[unit].neaplateno,\r\n                        companys_id: res.units[unit].companys_id,\r\n                        unitgroups_id: res.units[unit].unitgroups_id,\r\n                        models_id: res.units[unit].models_id,\r\n                        alarmnotificationto: res.units[unit].alarmnotificationto,\r\n                        favoriteindication: favorite\r\n                    });\r\n                }\r\n                //this.reportAllLists = res.units;\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(res.msg[0].result);\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n        this.doUnit();\r\n    };\r\n    UnitsPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    UnitsPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage_1);\r\n    };\r\n    UnitsPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    UnitsPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    UnitsPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    UnitsPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return UnitsPage;\r\n}());\r\nUnitsPage = UnitsPage_1 = __decorate([\r\n    Component({\r\n        selector: 'page-units',\r\n        templateUrl: 'units.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], UnitsPage);\r\nexport { UnitsPage };\r\nvar UnitsPage_1, _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=units.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/units/units.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, LoadingController } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport { ReportsPage } from '../reports/reports';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { DocumentViewer } from '@ionic-native/document-viewer';\r\nimport { FileOpener } from '@ionic-native/file-opener';\r\nimport { FileTransfer } from '@ionic-native/file-transfer';\r\nimport { File } from '@ionic-native/file';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nvar ReportviewtablePage = (function () {\r\n    function ReportviewtablePage(document, sanitizer, transfer, file, fileOpener, datePicker, NP, fb, http, navCtrl, nav, loadingCtrl) {\r\n        this.document = document;\r\n        this.sanitizer = sanitizer;\r\n        this.transfer = transfer;\r\n        this.file = file;\r\n        this.fileOpener = fileOpener;\r\n        this.datePicker = datePicker;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.nav = nav;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.reportAllLists = [];\r\n        this.responseResultTimeFrame = [];\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pageTitle = 'Reports Preview & Download';\r\n        this.graphview = 0;\r\n        this.pdfdownloadview = 0;\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userid = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"selunit\": [\"\"],\r\n            \"seltemplate\": [\"\"],\r\n            \"seltimeframe\": [\"\"],\r\n        });\r\n    }\r\n    ReportviewtablePage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.success = 0;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userid;\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    ReportviewtablePage.prototype.ionViewDidLoad = function () {\r\n        var _this = this;\r\n        this.success = 0;\r\n        var seltypeBtn = localStorage.getItem(\"buttonRpt\");\r\n        console.log(\"Select Type Button Submit\" + seltypeBtn);\r\n        var action;\r\n        var seltype;\r\n        if (seltypeBtn == '1') {\r\n            action = 'request';\r\n            seltype = '0'; // Request\r\n        }\r\n        if (seltypeBtn == '2') {\r\n            action = 'view';\r\n            seltype = '0'; // Generate\r\n        }\r\n        if (seltypeBtn == '3') {\r\n            action = 'view';\r\n            seltype = '1'; // PDF\r\n        }\r\n        if (this.NP.get(\"exportto\") == 'graph') {\r\n            this.graphview = 1;\r\n        }\r\n        if (seltypeBtn != '3' && this.graphview == 0) {\r\n            var info = this.NP.get(\"selunit\");\r\n            console.log(JSON.stringify(info));\r\n            var body = \"is_mobile=1\" +\r\n                \"&selunit=\" + this.NP.get(\"selunit\") +\r\n                \"&seltimeframe=\" + this.NP.get(\"seltimeframe\") +\r\n                \"&seltemplate=\" + this.NP.get(\"seltemplate\") +\r\n                \"&from=\" + this.NP.get(\"from\") +\r\n                \"&to=\" + this.NP.get(\"to\") +\r\n                \"&exportto=\" + this.NP.get(\"exportto\") +\r\n                \"&seltype=\" + seltype +\r\n                \"&action=\" + action +\r\n                \"&loginid=\" + this.userid +\r\n                \"&companyid=\" + this.companyid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/reports/viewreport?is_mobile=1\" +\r\n                \"&selunit=\" + this.NP.get(\"selunit\") +\r\n                \"&seltimeframe=\" + this.NP.get(\"seltimeframe\") +\r\n                \"&seltemplate=\" + this.NP.get(\"seltemplate\") +\r\n                \"&from=\" + this.NP.get(\"from\") +\r\n                \"&to=\" + this.NP.get(\"to\") +\r\n                \"&exportto=\" + this.NP.get(\"exportto\") +\r\n                \"&seltype=\" + seltype +\r\n                \"&action=\" + action +\r\n                \"&loginid=\" + this.userid +\r\n                \"&companyid=\" + this.companyid;\r\n            console.log(\"Report submit url is:-\" + url);\r\n            var res_1;\r\n            this.presentLoading(1);\r\n            //this.http.post(url, body, options)\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                // If the request was successful notify the user\r\n                res_1 = data.json();\r\n                console.log(\"Report Preview Success Response:-\" + JSON.stringify(res_1));\r\n                if (seltypeBtn == '1') {\r\n                    _this.success = 1;\r\n                }\r\n                if (res_1.reportdata.length > 0) {\r\n                    _this.reportAllLists = res_1.reportdata;\r\n                }\r\n                if (data.status === 200) {\r\n                }\r\n                else {\r\n                }\r\n                _this.noentrymsg = 'No report entries found';\r\n            });\r\n        }\r\n        else if (seltypeBtn == '3' && this.graphview == 0) {\r\n            // PDF Viewer Calling      \r\n            var body = \"is_mobile=1\" +\r\n                \"&selunit=\" + this.NP.get(\"selunit\") +\r\n                \"&seltimeframe=\" + this.NP.get(\"seltimeframe\") +\r\n                \"&seltemplate=\" + this.NP.get(\"seltemplate\") +\r\n                \"&from=\" + this.NP.get(\"from\") +\r\n                \"&to=\" + this.NP.get(\"to\") +\r\n                \"&exportto=\" + this.NP.get(\"exportto\") +\r\n                \"&seltype=\" + seltype +\r\n                \"&action=\" + action +\r\n                \"&loginid=\" + this.userid +\r\n                \"&companyid=\" + this.companyid, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/reports/viewreport?is_mobile=1\" +\r\n                \"&selunit=\" + this.NP.get(\"selunit\") +\r\n                \"&seltimeframe=\" + this.NP.get(\"seltimeframe\") +\r\n                \"&seltemplate=\" + this.NP.get(\"seltemplate\") +\r\n                \"&from=\" + this.NP.get(\"from\") +\r\n                \"&to=\" + this.NP.get(\"to\") +\r\n                \"&exportto=\" + this.NP.get(\"exportto\") +\r\n                \"&seltype=\" + seltype +\r\n                \"&action=\" + action +\r\n                \"&loginid=\" + this.userid +\r\n                \"&companyid=\" + this.companyid;\r\n            console.log(\"Report submit url is:-\" + url);\r\n            var res_2;\r\n            this.presentLoading(1);\r\n            //this.http.post(url, body, options)\r\n            this.http.get(url, options)\r\n                .subscribe(function (data) {\r\n                _this.presentLoading(0);\r\n                // If the request was successful notify the user\r\n                res_2 = data.json();\r\n                console.log(\"Uploaded and generated success file is:\" + res_2.pdf);\r\n                _this.pdfdownloadview = 1;\r\n                var pdfFile = res_2.pdf;\r\n                var pdfPathURL = _this.apiServiceURL;\r\n                console.log(\"PDF Path URL:-\" + pdfPathURL + pdfFile);\r\n                _this.pdfDownloadLink = res_2.pdf;\r\n                var url = res_2.pdf;\r\n                var fileTransfer = _this.transfer.create();\r\n                fileTransfer.download(url, _this.file.dataDirectory + pdfFile).then(function (entry) {\r\n                    console.log('download complete: ' + entry.toURL());\r\n                    var options = {\r\n                        title: res_2.pdf\r\n                    };\r\n                    _this.document.viewDocument(entry.toURL(), 'application/pdf', options);\r\n                }, function (error) {\r\n                    // handle error\r\n                });\r\n                if (data.status === 200) {\r\n                }\r\n                else {\r\n                }\r\n            });\r\n            //  {\"msg\":{\"result\":\"success\"},\"pdf\":\"reports_generator_1.pdf\"}\r\n        }\r\n        else if (this.graphview > 0) {\r\n            this.iframeContent = \"<iframe  src=http://denyoappv2.stridecdev.com/reports/viewreport?is_mobile=1\" +\r\n                \"&selunit=\" + this.NP.get(\"selunit\") +\r\n                \"&seltimeframe=\" + this.NP.get(\"seltimeframe\") +\r\n                \"&seltemplate=\" + this.NP.get(\"seltemplate\") +\r\n                \"&from=\" + this.NP.get(\"from\") +\r\n                \"&to=\" + this.NP.get(\"to\") +\r\n                \"&exportto=\" + this.NP.get(\"exportto\") +\r\n                \"&seltype=\" + seltype +\r\n                \"&action=\" + action +\r\n                \"&loginid=\" + this.userid +\r\n                \"&companyid=\" + this.companyid +\r\n                \"&datacodes='' height=350 width=100% frameborder=0></iframe>\";\r\n        }\r\n    };\r\n    ReportviewtablePage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    ReportviewtablePage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    ReportviewtablePage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    ReportviewtablePage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    ReportviewtablePage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    ReportviewtablePage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    ReportviewtablePage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    ReportviewtablePage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(ReportsPage);\r\n    };\r\n    return ReportviewtablePage;\r\n}());\r\nReportviewtablePage = __decorate([\r\n    Component({\r\n        selector: 'page-reportviewtable',\r\n        templateUrl: 'reportviewtable.html',\r\n        providers: [DatePicker, FileOpener, FileTransfer, File, DocumentViewer]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof DocumentViewer !== \"undefined\" && DocumentViewer) === \"function\" && _a || Object, typeof (_b = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _b || Object, typeof (_c = typeof FileTransfer !== \"undefined\" && FileTransfer) === \"function\" && _c || Object, typeof (_d = typeof File !== \"undefined\" && File) === \"function\" && _d || Object, typeof (_e = typeof FileOpener !== \"undefined\" && FileOpener) === \"function\" && _e || Object, typeof (_f = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _f || Object, typeof (_g = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _g || Object, typeof (_h = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _h || Object, typeof (_j = typeof Http !== \"undefined\" && Http) === \"function\" && _j || Object, typeof (_k = typeof NavController !== \"undefined\" && NavController) === \"function\" && _k || Object, typeof (_l = typeof NavController !== \"undefined\" && NavController) === \"function\" && _l || Object, typeof (_m = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _m || Object])\r\n], ReportviewtablePage);\r\nexport { ReportviewtablePage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n//# sourceMappingURL=reportviewtable.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reportviewtable/reportviewtable.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { HomePage } from '../home/home';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport { ReportviewtablePage } from '../reportviewtable/reportviewtable';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nvar ReportsPage = (function () {\r\n    function ReportsPage(datePicker, NP, fb, http, navCtrl, nav) {\r\n        this.datePicker = datePicker;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.nav = nav;\r\n        this.start_date = 'Start Date';\r\n        this.end_date = 'End Date';\r\n        /* public start_date = '2017-08-02';\r\n        public end_date = '2017-08-02';\r\n      */\r\n        this.responseResultTimeFrame = [];\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pageTitle = 'Reports';\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userid = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"selunit\": [\"\", Validators.required],\r\n            \"seltemplate\": [\"\", Validators.required],\r\n            \"seltimeframe\": [\"\", Validators.required]\r\n        });\r\n        this.responseResultTimeFrame = [];\r\n    }\r\n    ReportsPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        this.responseResultTimeFrame = [];\r\n        this.datevalidaton = 0;\r\n        this.getFormat('table');\r\n        this.getDropDownDataTemplate();\r\n        this.getDropDownDataUnits();\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userid;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.responseResultTimeFrame.push({\r\n            id: '1time',\r\n            time_name: '1 Time/Day',\r\n        }, {\r\n            id: 'continues',\r\n            time_name: 'Continues'\r\n        });\r\n    };\r\n    ReportsPage.prototype.getNextDate = function (val) {\r\n        var _this = this;\r\n        var date;\r\n        this.datePicker.show({\r\n            date: new Date(), mode: 'date',\r\n            doneButtonColor: '#F2F3F4',\r\n            cancelButtonColor: '#000000',\r\n            allowFutureDates: true,\r\n            androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_LIGHT\r\n        }).then(function (date) {\r\n            var monthstr = date.getMonth() + parseInt(\"1\");\r\n            if (val == '1') {\r\n                _this.from = date.getFullYear() + \"-\" + monthstr + \"-\" + date.getDate();\r\n                console.log('From date: ', _this.from);\r\n                _this.start_date = _this.from;\r\n            }\r\n            if (val == '2') {\r\n                _this.to = date.getFullYear() + \"-\" + monthstr + \"-\" + date.getDate();\r\n                console.log('To date: ', _this.to);\r\n                _this.end_date = _this.to;\r\n            }\r\n        }, function (err) { return console.log('Error occurred while getting date: ', err); });\r\n        /*if (val == '1') {\r\n          this.from = date.getFullYear() + \"-\" + parseInt(date.getMonth() + 1) + \"-\" + date.getDate();\r\n          console.log(\"From date from choosen calendar:\" + this.from);\r\n        }\r\n    \r\n        if (val == '2') {\r\n          this.to = date.getFullYear() + \"-\" + parseInt(date.getMonth() + 1) + \"-\" + date.getDate();\r\n          console.log(\"From date from choosen calendar:\" + this.to);\r\n        }*/\r\n    };\r\n    ReportsPage.prototype.saveEntry = function () {\r\n        console.log(\"Button 1:\" + this.button1);\r\n        console.log(\"Button 2:\" + this.button2);\r\n        var selunit = this.form.controls[\"selunit\"].value, seltemplate = this.form.controls[\"seltemplate\"].value, seltimeframe = this.form.controls[\"seltimeframe\"].value;\r\n        // this.createEntry(selunit, seltemplate, seltimeframe);\r\n        //this.from = \"2017-08-09\";\r\n        //this.to = \"2017-08-09\";\r\n        //this.exportto = 'table';\r\n        //this.seltype = 0; // 0 for TABLE 1 for PDF\r\n        // Statically\r\n        /*selunit = '1';\r\n        seltimeframe = 'continues';\r\n        seltemplate = '1';\r\n        this.from = \"2017-08-12\";\r\n        this.to = \"2017-08-12\";\r\n        this.action = 'view';\r\n        this.exportto = 'table';\r\n        this.seltype = 0;*/\r\n        // Statically\r\n        if (this.from == undefined) {\r\n            this.from = '';\r\n        }\r\n        if (this.from == 'undefined') {\r\n            this.from = '';\r\n        }\r\n        if (this.from == '') {\r\n            this.from = '';\r\n        }\r\n        if (this.to == undefined) {\r\n            this.to = '';\r\n        }\r\n        if (this.to == 'undefined') {\r\n            this.to = '';\r\n        }\r\n        if (this.to == '') {\r\n            this.to = '';\r\n        }\r\n        if (this.from == '' && this.to == '') {\r\n            this.datevalidaton = 1;\r\n            return false;\r\n        }\r\n        else {\r\n            this.datevalidaton = 0;\r\n        }\r\n        this.nav.setRoot(ReportviewtablePage, {\r\n            selunit: selunit,\r\n            seltemplate: seltemplate,\r\n            seltimeframe: seltimeframe,\r\n            from: this.from,\r\n            to: this.to,\r\n            exportto: this.exportto,\r\n        });\r\n    };\r\n    //http://denyoappv2.stridecdev.com/reports/viewreport?is_mobile=1&selunit=1&seltimeframe=continues&seltemplate=1&from=2017-08-12&to=2017-08-12&action=view&exportto=table&seltype=0\r\n    ReportsPage.prototype.getTemplate = function (templateId) {\r\n        console.log(templateId);\r\n    };\r\n    ReportsPage.prototype.getFormat = function (format) {\r\n        console.log(format);\r\n        this.exportto = format;\r\n    };\r\n    ReportsPage.prototype.getDropDownDataUnits = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        //url: any = this.apiServiceURL + \"/units?is_mobile=1&startindex=0&results=300&sort=unit_id&dir=asc&company_id=\" + this.companyId + \"&loginid=\" + this.userId;\r\n        url = this.apiServiceURL + \"/reports?is_mobile=1&companyid=\" + this.companyid + \"&loginid=\" + this.userid;\r\n        var res;\r\n        console.log(\"URL\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseUnit = res.units;\r\n        });\r\n    };\r\n    ReportsPage.prototype.getDropDownDataTemplate = function () {\r\n        var _this = this;\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), \r\n        //url: any = this.apiServiceURL + \"/units?is_mobile=1&startindex=0&results=300&sort=unit_id&dir=asc&company_id=\" + this.companyId + \"&loginid=\" + this.userId;\r\n        url = this.apiServiceURL + \"/reports?is_mobile=1&companyid=\" + this.companyid + \"&loginid=\" + this.userid;\r\n        var res;\r\n        console.log(\"URL\" + url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            _this.responseTemplate = res.templates;\r\n        });\r\n    };\r\n    ReportsPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad ReportsPage');\r\n    };\r\n    ReportsPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    ReportsPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    ReportsPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    ReportsPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    ReportsPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    ReportsPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    ReportsPage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(HomePage);\r\n    };\r\n    return ReportsPage;\r\n}());\r\nReportsPage = __decorate([\r\n    Component({\r\n        selector: 'page-reports',\r\n        templateUrl: 'reports.html',\r\n        providers: [DatePicker]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _a || Object, typeof (_b = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _b || Object, typeof (_c = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _c || Object, typeof (_d = typeof Http !== \"undefined\" && Http) === \"function\" && _d || Object, typeof (_e = typeof NavController !== \"undefined\" && NavController) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object])\r\n], ReportsPage);\r\nexport { ReportsPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=reports.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reports/reports.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { ReportsPage } from '../reports/reports';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { CalendardetailPage } from '../calendardetail/calendardetail';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nvar DashboardPage = (function () {\r\n    function DashboardPage(http, navCtrl, nav) {\r\n        this.http = http;\r\n        this.navCtrl = navCtrl;\r\n        this.nav = nav;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    DashboardPage.prototype.goPage = function (page) {\r\n        console.log(page);\r\n        if (page == 'MapsPage') {\r\n            this.nav.setRoot(MapsPage);\r\n        }\r\n        else if (page == 'ReportsPage') {\r\n            this.nav.setRoot(ReportsPage);\r\n        }\r\n        else if (page == 'CalendarPage') {\r\n            this.nav.setRoot(CalendarPage);\r\n        }\r\n        else if (page == 'UnitsPage') {\r\n            this.nav.setRoot(UnitsPage);\r\n        }\r\n    };\r\n    DashboardPage.prototype.pushMessagePage = function () {\r\n        this.nav.setRoot(CalendardetailPage, {\r\n            event_id: 4,\r\n            act: 'Push'\r\n        });\r\n    };\r\n    DashboardPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    DashboardPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    DashboardPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    DashboardPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    DashboardPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n        //this.nav.setRoot(DashboardmapPage);\r\n    };\r\n    DashboardPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    DashboardPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n    };\r\n    return DashboardPage;\r\n}());\r\nDashboardPage = __decorate([\r\n    Component({\r\n        selector: 'page-dashboard',\r\n        templateUrl: 'dashboard.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof NavController !== \"undefined\" && NavController) === \"function\" && _c || Object])\r\n], DashboardPage);\r\nexport { DashboardPage };\r\nvar _a, _b, _c;\r\n//# sourceMappingURL=dashboard.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/dashboard.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { HomePage } from '../home/home';\r\n/**\r\n * Generated class for the ForgotpasswordPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar ForgotpasswordPage = (function () {\r\n    function ForgotpasswordPage(nav, http, NP, fb, toastCtrl) {\r\n        this.nav = nav;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        // Flag to be used for checking whether we are adding/editing an entry\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        // Property to store the recordID for when an existing entry is being edited\r\n        this.recordID = null;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        // Create form builder validation rules\r\n        this.form = fb.group({\r\n            \"uname\": [\"\", Validators.required],\r\n            \"email\": [\"\", Validators.required]\r\n        });\r\n        this.pageTitle = \"Forgot Password\";\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyid = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    ForgotpasswordPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad ForgotpasswordPage');\r\n    };\r\n    ForgotpasswordPage.prototype.saveEntry = function () {\r\n        var _this = this;\r\n        var uname = this.form.controls[\"uname\"].value, email = this.form.controls[\"email\"].value;\r\n        console.log(uname, email);\r\n        var body = \"is_mobile=1&username=\" + uname + \"&useremail=\" + email, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/forgetpassprocess\";\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            var res = data.json();\r\n            console.log(JSON.stringify(data.json()));\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                console.log(\"Msg Results:-\" + res.msg[0].result);\r\n                _this.hideForm = true;\r\n                if (res.msg[0].result > 0) {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                }\r\n                else {\r\n                    _this.sendNotification(res.msg[0].result);\r\n                    _this.nav.setRoot(HomePage);\r\n                }\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    ForgotpasswordPage.prototype.sendNotification = function (message) {\r\n        // this.isUploadedProcessing = false;\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    ForgotpasswordPage.prototype.previous = function () {\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    return ForgotpasswordPage;\r\n}());\r\nForgotpasswordPage = __decorate([\r\n    Component({\r\n        selector: 'page-forgotpassword',\r\n        templateUrl: 'forgotpassword.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], ForgotpasswordPage);\r\nexport { ForgotpasswordPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=forgotpassword.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgotpassword/forgotpassword.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, Platform } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Device } from '@ionic-native/device';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { DashboardPage } from '../dashboard/dashboard';\r\nimport { ForgotpasswordPage } from '../forgotpassword/forgotpassword';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport { GoogleMaps, GoogleMapsEvent } from '@ionic-native/google-maps';\r\nvar HomePage = (function () {\r\n    function HomePage(platform, googleMaps, navCtrl, datePicker, fb, device, http, toastCtrl) {\r\n        var _this = this;\r\n        this.platform = platform;\r\n        this.googleMaps = googleMaps;\r\n        this.navCtrl = navCtrl;\r\n        this.datePicker = datePicker;\r\n        this.fb = fb;\r\n        this.device = device;\r\n        this.http = http;\r\n        this.toastCtrl = toastCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.form = fb.group({\r\n            \"userid\": [\"\", Validators.required],\r\n            \"password\": [\"\", Validators.required]\r\n        });\r\n        this.header_data = { ismenu: true, ishome: false, title: \"Home\" };\r\n        this.userInf = localStorage.getItem(\"userInfoId\");\r\n        console.log(\"UserId Localtorage\" + this.userInf);\r\n        console.log(\"A\");\r\n        if (this.userInf == 'null') {\r\n            this.userInf = 0;\r\n            console.log(\"B\");\r\n        }\r\n        if (this.userInf == null) {\r\n            this.userInf = 0;\r\n            console.log(\"C\");\r\n        }\r\n        if (this.userInf == '') {\r\n            this.userInf = 0;\r\n            console.log(\"D\");\r\n        }\r\n        console.log(this.userInf);\r\n        if (this.userInf > 0) {\r\n            console.log(\"E\");\r\n            this.navCtrl.setRoot(DashboardPage);\r\n        }\r\n        this.platform.ready().then(function () {\r\n            _this.loadMap(0);\r\n        });\r\n    }\r\n    HomePage.prototype.loadMap = function (val) {\r\n        var _this = this;\r\n        this.mapElement = document.getElementById('map');\r\n        var mapOptions = {\r\n            camera: {\r\n                target: {\r\n                    lat: 43.0741904,\r\n                    lng: -89.3809802\r\n                },\r\n                zoom: 18,\r\n                tilt: 30\r\n            }\r\n        };\r\n        this.map = this.googleMaps.create(this.mapElement, mapOptions);\r\n        // Wait the MAP_READY before using any methods.\r\n        this.map.one(GoogleMapsEvent.MAP_READY)\r\n            .then(function () {\r\n            console.log('Map is ready!');\r\n            // Now you can use all methods safely.\r\n            _this.map.addMarker({\r\n                title: 'Ionic',\r\n                icon: 'blue',\r\n                animation: 'DROP',\r\n                position: {\r\n                    lat: 43.0741904,\r\n                    lng: -89.3809802\r\n                }\r\n            })\r\n                .then(function (marker) {\r\n                marker.on(GoogleMapsEvent.MARKER_CLICK)\r\n                    .subscribe(function () {\r\n                    alert('clicked');\r\n                });\r\n            });\r\n        });\r\n    };\r\n    HomePage.prototype.login = function () {\r\n        var userid = this.form.controls[\"userid\"].value, password = this.form.controls[\"password\"].value;\r\n        console.log(\"G\");\r\n        this.loginEntry(userid, password);\r\n    };\r\n    HomePage.prototype.showDatePicker = function () {\r\n        this.datePicker.show({\r\n            date: new Date(),\r\n            mode: 'date',\r\n            minDate: \"2017-08-15\",\r\n            maxDate: \"2017-08-19\",\r\n            androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_LIGHT\r\n        }).then(function (date) { return console.log('Got date: ', date); }, function (err) { return console.log('Error occurred while getting date: ', err); });\r\n    };\r\n    HomePage.prototype.loginEntry = function (username, password) {\r\n        var _this = this;\r\n        console.log(\"H\");\r\n        var device_token = localStorage.getItem(\"deviceTokenForPushNotification\");\r\n        var res;\r\n        var body = \"username=\" + username +\r\n            \"&password=\" + password +\r\n            \"&device_token=\" + device_token +\r\n            \"&isapp=1\", type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/checklogin\";\r\n        console.log(url + '?' + body);\r\n        this.http.post(url, body, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            if (res.msg[0]['Error'] > 0) {\r\n                _this.sendNotification(res.msg[0]['result']);\r\n                return false;\r\n            }\r\n            else {\r\n                res = data.json();\r\n                console.log(\"Logged in Response:\" + JSON.stringify(res));\r\n                localStorage.setItem(\"userInfo\", res['staffdetails'][0]);\r\n                localStorage.setItem(\"userInfoId\", res['staffdetails'][0].staff_id);\r\n                localStorage.setItem(\"userInfoName\", res['staffdetails'][0].firstname);\r\n                localStorage.setItem(\"userInfoEmail\", res['staffdetails'][0].email);\r\n                localStorage.setItem(\"userInfoCompanyId\", res['staffdetails'][0].company_id);\r\n                localStorage.setItem(\"userInfoRoleId\", res['staffdetails'][0].role_id);\r\n                console.log(\"Role Permssion Array:\" + JSON.stringify(res['roledata']));\r\n                localStorage.setItem(\"RolePermissionData\", JSON.stringify(res['roledata']));\r\n                var roleData = localStorage.getItem(\"RolePermissionData\");\r\n                var roleparseData = JSON.parse(roleData);\r\n                for (var rle = 0; rle < roleparseData.length; rle++) {\r\n                    // 8 - Child Module Map\r\n                    if (res['staffdetails'][0].staff_id == '1') {\r\n                        // 1 - Parent Module Dashboard\r\n                        if (roleparseData[rle]['page_name'] == '8' && roleparseData[rle]['module_name'] == '1') {\r\n                            localStorage.setItem(\"DASHBOARD_MAP_VIEW\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_MAP_CREATE\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_MAP_EDIT\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_MAP_DELETE\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_MAP_HIDE\", '1');\r\n                        }\r\n                        // 12 - Child Module Unit\r\n                        // 1 - Parent Module Dashboard\r\n                        if (roleparseData[rle]['page_name'] == '12' && roleparseData[rle]['module_name'] == '1') {\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_VIEW\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_CREATE\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_EDIT\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_DELETE\", '1');\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_HIDE\", '1');\r\n                        }\r\n                        // 1 - Child Module My Account\r\n                        // 6 - Parent Module Settings\r\n                        if (roleparseData[rle]['page_name'] == '1' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_VIEW\", '1');\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_CREATE\", '1');\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_EDIT\", '1');\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_DELETE\", '1');\r\n                        }\r\n                        // 2 - Child Module User List\r\n                        // 6 - Parent Module Settings\r\n                        if (roleparseData[rle]['page_name'] == '2' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_VIEW\", '1');\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_CREATE\", '1');\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_EDIT\", '1');\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '3' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_VIEW\", '1');\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_CREATE\", '1');\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_EDIT\", '1');\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '4' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_VIEW\", '1');\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_CREATE\", '1');\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_EDIT\", '1');\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '5' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_VIEW\", '1');\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_CREATE\", '1');\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_EDIT\", '1');\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '6' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_VIEW\", '1');\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_CREATE\", '1');\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_EDIT\", '1');\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '7' && roleparseData[rle]['module_name'] == '2') {\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_VIEW\", '1');\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_CREATE\", '1');\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_EDIT\", '1');\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '9' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_LISTING_VIEW\", '1');\r\n                            localStorage.setItem(\"UNITS_LISTING_CREATE\", '1');\r\n                            localStorage.setItem(\"UNITS_LISTING_EDIT\", '1');\r\n                            localStorage.setItem(\"UNITS_LISTING_DELETE\", '1'); // Implementation Done by Kannan.N\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '13' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_ALARM_VIEW\", '1');\r\n                            localStorage.setItem(\"UNITS_ALARM_CREATE\", '1');\r\n                            localStorage.setItem(\"UNITS_ALARM_EDIT\", '1');\r\n                            localStorage.setItem(\"UNITS_ALARM_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '14' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_VIEW\", '1');\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_CREATE\", '1');\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_EDIT\", '1');\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '15' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_COMMENTS_VIEW\", '1');\r\n                            localStorage.setItem(\"UNITS_COMMENTS_CREATE\", '1');\r\n                            localStorage.setItem(\"UNITS_COMMENTS_EDIT\", '1');\r\n                            localStorage.setItem(\"UNITS_COMMENTS_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '16' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_VIEW\", '1');\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_CREATE\", '1');\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_EDIT\", '1');\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '10' && roleparseData[rle]['module_name'] == '4') {\r\n                            localStorage.setItem(\"REPORTS_VIEW\", '1');\r\n                            localStorage.setItem(\"REPORTS_CREATE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '11' && roleparseData[rle]['module_name'] == '5') {\r\n                            localStorage.setItem(\"MESSAGE_INBOX_VIEW\", '1');\r\n                            localStorage.setItem(\"MESSAGE_INBOX_CREATE\", '1');\r\n                            localStorage.setItem(\"MESSAGE_INBOX_EDIT\", '1');\r\n                            localStorage.setItem(\"MESSAGE_INBOX_DELETE\", '1');\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '17' && roleparseData[rle]['module_name'] == '5') {\r\n                            localStorage.setItem(\"MESSAGE_SENT_VIEW\", '1');\r\n                            localStorage.setItem(\"MESSAGE_SENT_CREATE\", '1');\r\n                            localStorage.setItem(\"MESSAGE_SENT_EDIT\", '1');\r\n                            localStorage.setItem(\"MESSAGE_SENT_DELETE\", '1');\r\n                        }\r\n                    }\r\n                    else {\r\n                        // 1 - Parent Module Dashboard\r\n                        if (roleparseData[rle]['page_name'] == '8' && roleparseData[rle]['module_name'] == '1') {\r\n                            localStorage.setItem(\"DASHBOARD_MAP_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"DASHBOARD_MAP_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"DASHBOARD_MAP_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"DASHBOARD_MAP_DELETE\", roleparseData[rle]['delete_action']);\r\n                            localStorage.setItem(\"DASHBOARD_MAP_HIDE\", roleparseData[rle]['hide_action']);\r\n                        }\r\n                        // 12 - Child Module Unit\r\n                        // 1 - Parent Module Dashboard\r\n                        if (roleparseData[rle]['page_name'] == '12' && roleparseData[rle]['module_name'] == '1') {\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_DELETE\", roleparseData[rle]['delete_action']);\r\n                            localStorage.setItem(\"DASHBOARD_UNITS_HIDE\", roleparseData[rle]['hide_action']);\r\n                        }\r\n                        // 1 - Child Module My Account\r\n                        // 6 - Parent Module Settings\r\n                        if (roleparseData[rle]['page_name'] == '1' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"SETTINGS_MYACCOUNT_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        // 2 - Child Module User List\r\n                        // 6 - Parent Module Settings\r\n                        if (roleparseData[rle]['page_name'] == '2' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"SETTINGS_USERLIST_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '3' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"SETTINGS_COMPANYGROUP_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '4' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"SETTINGS_USERROLE_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '5' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"SETTINGS_REPORTTEMPLATE_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '6' && roleparseData[rle]['module_name'] == '6') {\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"SETTINGS_ORGCHART_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '7' && roleparseData[rle]['module_name'] == '2') {\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"CALENDAR_EVENTS_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '9' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_LISTING_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"UNITS_LISTING_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"UNITS_LISTING_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"UNITS_LISTING_DELETE\", roleparseData[rle]['delete_action']); // Implementation Done by Kannan.N\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '13' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_ALARM_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"UNITS_ALARM_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"UNITS_ALARM_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"UNITS_ALARM_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '14' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"UNITS_SERVICINGINFO_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '15' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_COMMENTS_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"UNITS_COMMENTS_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"UNITS_COMMENTS_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"UNITS_COMMENTS_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '16' && roleparseData[rle]['module_name'] == '3') {\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"UNITS_UNITGROUP_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '10' && roleparseData[rle]['module_name'] == '4') {\r\n                            localStorage.setItem(\"REPORTS_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"REPORTS_CREATE\", roleparseData[rle]['create_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '11' && roleparseData[rle]['module_name'] == '5') {\r\n                            localStorage.setItem(\"MESSAGE_INBOX_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"MESSAGE_INBOX_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"MESSAGE_INBOX_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"MESSAGE_INBOX_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                        if (roleparseData[rle]['page_name'] == '17' && roleparseData[rle]['module_name'] == '5') {\r\n                            localStorage.setItem(\"MESSAGE_SENT_VIEW\", roleparseData[rle]['view_action']);\r\n                            localStorage.setItem(\"MESSAGE_SENT_CREATE\", roleparseData[rle]['create_action']);\r\n                            localStorage.setItem(\"MESSAGE_SENT_EDIT\", roleparseData[rle]['edit_action']);\r\n                            localStorage.setItem(\"MESSAGE_SENT_DELETE\", roleparseData[rle]['delete_action']);\r\n                        }\r\n                    }\r\n                }\r\n                // Get Role Permission Data API Calling\r\n                /* let type: string = \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n                   headers: any = new Headers({ 'Content-Type': type }),\r\n                   options: any = new RequestOptions({ headers: headers }),\r\n                   url: any = this.apiServiceURL + \"/editrole?is_mobile=1&role_id=\" + res['staffdetails'][0].role_id;\r\n                 console.log(url);\r\n                 let roleres;\r\n                 this.http.get(url, options)\r\n                   .subscribe((data) => {\r\n                     roleres = data.json();\r\n                     console.log(\"Role Permssion Array:\"+JSON.stringify(roleres.roldata));\r\n                      localStorage.setItem(\"RolePermissionData\", JSON.stringify(roleres.roldata));\r\n       \r\n                   });*/\r\n                // Get Role Permission Data API Calling\r\n                _this.navCtrl.setRoot(DashboardPage);\r\n            }\r\n        });\r\n        console.log(\"I\");\r\n    };\r\n    HomePage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    HomePage.prototype.doMove = function () {\r\n        this.navCtrl.setRoot(ForgotpasswordPage);\r\n    };\r\n    return HomePage;\r\n}());\r\nHomePage = __decorate([\r\n    Component({\r\n        selector: 'page-home',\r\n        templateUrl: 'home.html',\r\n        providers: [Device, DatePicker]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Platform !== \"undefined\" && Platform) === \"function\" && _a || Object, typeof (_b = typeof GoogleMaps !== \"undefined\" && GoogleMaps) === \"function\" && _b || Object, typeof (_c = typeof NavController !== \"undefined\" && NavController) === \"function\" && _c || Object, typeof (_d = typeof DatePicker !== \"undefined\" && DatePicker) === \"function\" && _d || Object, typeof (_e = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _e || Object, typeof (_f = typeof Device !== \"undefined\" && Device) === \"function\" && _f || Object, typeof (_g = typeof Http !== \"undefined\" && Http) === \"function\" && _g || Object, typeof (_h = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _h || Object])\r\n], HomePage);\r\nexport { HomePage };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\n//# sourceMappingURL=home.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { EnginedetailPage } from '../enginedetail/enginedetail';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\nvar EngineviewPage = (function () {\r\n    function EngineviewPage(http, sanitizer, NP, navCtrl, navParams, nav) {\r\n        this.http = http;\r\n        this.sanitizer = sanitizer;\r\n        this.NP = NP;\r\n        this.navCtrl = navCtrl;\r\n        this.navParams = navParams;\r\n        this.nav = nav;\r\n        this.item = [];\r\n        this.colorListArr = [];\r\n        //private _inputpdf: string = '<iframe src=\"http://denyoappv2.stridecdev.com/2/1/unitdetails\" height=\"350\" frameborder=\"0\"></iframe>';\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.unitDetailData = {\r\n            model_id: '',\r\n            iframeURL: ''\r\n        };\r\n        this.unitDetailData.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.unitDetailData.userId = localStorage.getItem(\"userInfoId\");\r\n    }\r\n    EngineviewPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad EngineviewPage');\r\n    };\r\n    EngineviewPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + localStorage.getItem(\"userInfoId\");\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        console.log(JSON.stringify(this.NP.get(\"record\")));\r\n        var editItem = this.NP.get(\"record\");\r\n        this.iframeContent = \"<iframe id='filecontainer' src=\" + this.apiServiceURL + \"/webview_enginedetails/\" + editItem.model_id + \" height=500px width=100% frameborder=0></iframe>\";\r\n    };\r\n    EngineviewPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    EngineviewPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    EngineviewPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    EngineviewPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    EngineviewPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    EngineviewPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    EngineviewPage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(EnginedetailPage);\r\n    };\r\n    return EngineviewPage;\r\n}());\r\nEngineviewPage = __decorate([\r\n    Component({\r\n        selector: 'page-engineview',\r\n        templateUrl: 'engineview.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof DomSanitizer !== \"undefined\" && DomSanitizer) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof NavController !== \"undefined\" && NavController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof NavController !== \"undefined\" && NavController) === \"function\" && _f || Object])\r\n], EngineviewPage);\r\nexport { EngineviewPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=engineview.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/engineview/engineview.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, AlertController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { LoadingController } from 'ionic-angular';\r\nimport { HomePage } from '../home/home';\r\nimport { AddenginedetailPage } from '../addenginedetail/addenginedetail';\r\nimport { EngineviewPage } from '../engineview/engineview';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the EnginedetailPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar EnginedetailPage = (function () {\r\n    function EnginedetailPage(http, nav, toastCtrl, alertCtrl, NP, loadingCtrl) {\r\n        this.http = http;\r\n        this.nav = nav;\r\n        this.toastCtrl = toastCtrl;\r\n        this.alertCtrl = alertCtrl;\r\n        this.NP = NP;\r\n        this.loadingCtrl = loadingCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.pet = \"ALL\";\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unitgroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    EnginedetailPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad EnginedetailPage');\r\n    };\r\n    EnginedetailPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        this.reportData.startindex = 0;\r\n        this.doengine();\r\n    };\r\n    EnginedetailPage.prototype.doengine = function () {\r\n        var _this = this;\r\n        this.presentLoading(1);\r\n        if (this.reportData.status == '') {\r\n            this.reportData.status = \"DRAFT\";\r\n        }\r\n        if (this.reportData.sort == '') {\r\n            this.reportData.sort = \"unitgroup_id\";\r\n        }\r\n        var type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/enginemodel?is_mobile=1\";\r\n        var res;\r\n        console.log(url);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            res = data.json();\r\n            console.log(JSON.stringify(res));\r\n            console.log(\"1\" + res.modeldata.length);\r\n            console.log(\"2\" + res.modeldata);\r\n            if (res.modeldata.length > 0) {\r\n                for (var modeldatas in res.modeldata) {\r\n                    _this.reportAllLists.push({\r\n                        model: res.modeldata[modeldatas].model,\r\n                        rawhtml: res.modeldata[modeldatas].rawhtml,\r\n                        model_id: res.modeldata[modeldatas].model_id\r\n                    });\r\n                }\r\n                //\"unitgroup_id\":1,\"unitgroup_name\":\"demo unit\",\"colorcode\":\"FBD75C\",\"remark\":\"nice\",\"favorite\":1,\"totalunits\":5\r\n                /*this.reportAllLists = res.unitgroups;\r\n               \r\n                console.log(\"Total Record:`\" + this.totalCount);\r\n                console.log(JSON.stringify(this.reportAllLists));*/\r\n                _this.totalCount = res.totalCount;\r\n                _this.reportData.startindex += _this.reportData.results;\r\n            }\r\n            else {\r\n                _this.totalCount = 0;\r\n            }\r\n            console.log(\"Total Record:2\" + _this.totalCount);\r\n        });\r\n        this.presentLoading(0);\r\n    };\r\n    EnginedetailPage.prototype.previous = function () {\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    EnginedetailPage.prototype.doAdd = function () {\r\n        this.nav.setRoot(AddenginedetailPage);\r\n    };\r\n    EnginedetailPage.prototype.doInfinite = function (infiniteScroll) {\r\n        console.log('InfinitScroll function calling...');\r\n        console.log('A');\r\n        console.log(\"Total Count:\" + this.totalCount);\r\n        if (this.reportData.startindex < this.totalCount && this.reportData.startindex > 0) {\r\n            console.log('B');\r\n            this.doengine();\r\n        }\r\n        console.log('C');\r\n        setTimeout(function () {\r\n            console.log('D');\r\n            infiniteScroll.complete();\r\n        }, 500);\r\n        console.log('E');\r\n    };\r\n    EnginedetailPage.prototype.presentLoading = function (parm) {\r\n        var loader;\r\n        loader = this.loadingCtrl.create({\r\n            content: \"Please wait...\",\r\n            duration: 3000\r\n        });\r\n        if (parm > 0) {\r\n            loader.present();\r\n        }\r\n        else {\r\n            loader.dismiss();\r\n        }\r\n    };\r\n    EnginedetailPage.prototype.doConfirm = function (id, item) {\r\n        var _this = this;\r\n        console.log(\"Deleted Id\" + id);\r\n        var confirm = this.alertCtrl.create({\r\n            message: 'Are you sure you want to delete this generator model?',\r\n            buttons: [{\r\n                    text: 'Yes',\r\n                    handler: function () {\r\n                        _this.deleteEntry(id);\r\n                        for (var q = 0; q < _this.reportAllLists.length; q++) {\r\n                            if (_this.reportAllLists[q] == item) {\r\n                                _this.reportAllLists.splice(q, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    text: 'No',\r\n                    handler: function () { }\r\n                }]\r\n        });\r\n        confirm.present();\r\n    };\r\n    EnginedetailPage.prototype.deleteEntry = function (recordID) {\r\n        var _this = this;\r\n        var \r\n        //body: string = \"key=delete&recordID=\" + recordID,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/enginemodel/\" + recordID + \"/1/delete\";\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            // If the request was successful notify the user\r\n            if (data.status === 200) {\r\n                _this.sendNotification(\"Generator model was successfully deleted\");\r\n            }\r\n            else {\r\n                _this.sendNotification('Something went wrong!');\r\n            }\r\n        });\r\n    };\r\n    EnginedetailPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    EnginedetailPage.prototype.doEdit = function (item, act) {\r\n        if (act == 'edit') {\r\n            this.nav.setRoot(AddenginedetailPage, {\r\n                record: item,\r\n                act: act\r\n            });\r\n        }\r\n    };\r\n    EnginedetailPage.prototype.doView = function (item, act) {\r\n        if (act == 'detail') {\r\n            this.nav.setRoot(EngineviewPage, {\r\n                record: item\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    EnginedetailPage.prototype.notification = function () {\r\n        this.nav.setRoot(NotificationPage);\r\n    };\r\n    EnginedetailPage.prototype.redirectToUser = function () {\r\n        this.nav.setRoot(UnitsPage);\r\n    };\r\n    EnginedetailPage.prototype.redirectToMessage = function () {\r\n        this.nav.setRoot(EmailPage);\r\n    };\r\n    EnginedetailPage.prototype.redirectCalendar = function () {\r\n        this.nav.setRoot(CalendarPage);\r\n    };\r\n    EnginedetailPage.prototype.redirectToMaps = function () {\r\n        this.nav.setRoot(MapsPage);\r\n    };\r\n    EnginedetailPage.prototype.redirectToSettings = function () {\r\n        this.nav.setRoot(OrgchartPage);\r\n    };\r\n    return EnginedetailPage;\r\n}());\r\nEnginedetailPage = __decorate([\r\n    Component({\r\n        selector: 'page-enginedetail',\r\n        templateUrl: 'enginedetail.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object, typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object, typeof (_c = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _e || Object, typeof (_f = typeof LoadingController !== \"undefined\" && LoadingController) === \"function\" && _f || Object])\r\n], EnginedetailPage);\r\nexport { EnginedetailPage };\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=enginedetail.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/enginedetail/enginedetail.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component } from '@angular/core';\r\nimport { NavController, ToastController, NavParams } from 'ionic-angular';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { EnginedetailPage } from '../enginedetail/enginedetail';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { UnitsPage } from '../units/units';\r\nimport { NotificationPage } from '../notification/notification';\r\nimport { MapsPage } from '../maps/maps';\r\nimport { CalendarPage } from '../calendar/calendar';\r\nimport { EmailPage } from '../email/email';\r\nimport { OrgchartPage } from '../orgchart/orgchart';\r\n/**\r\n * Generated class for the AddenginedetailPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\nvar AddenginedetailPage = (function () {\r\n    function AddenginedetailPage(navCtrl, http, NP, fb, toastCtrl) {\r\n        this.navCtrl = navCtrl;\r\n        this.http = http;\r\n        this.NP = NP;\r\n        this.fb = fb;\r\n        this.toastCtrl = toastCtrl;\r\n        this.apiServiceURL = \"http://denyoappv2.stridecdev.com\";\r\n        this.recordID = null;\r\n        this.pet = \"ALL\";\r\n        this.isEdited = false;\r\n        this.readOnly = false;\r\n        // Flag to hide the form upon successful completion of remote operation\r\n        this.hideForm = false;\r\n        this.hideActionButton = true;\r\n        this.reportData = {\r\n            status: '',\r\n            sort: 'unitgroup_id',\r\n            sortascdesc: 'asc',\r\n            startindex: 0,\r\n            results: 8\r\n        };\r\n        this.reportAllLists = [];\r\n        this.form = fb.group({\r\n            \"enginemodel\": [\"\", Validators.required],\r\n            \"rawhtml\": [\"\", Validators.required]\r\n        });\r\n        this.loginas = localStorage.getItem(\"userInfoName\");\r\n        this.userId = localStorage.getItem(\"userInfoId\");\r\n        this.companyId = localStorage.getItem(\"userInfoCompanyId\");\r\n    }\r\n    AddenginedetailPage.prototype.ionViewDidLoad = function () {\r\n        console.log('ionViewDidLoad AddenginedetailPage');\r\n    };\r\n    AddenginedetailPage.prototype.ionViewWillEnter = function () {\r\n        var _this = this;\r\n        var //body: string = \"loginid=\" + this.userId,\r\n        type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/msgnotifycount?loginid=\" + this.userId;\r\n        console.log(url);\r\n        // console.log(body);\r\n        this.http.get(url, options)\r\n            .subscribe(function (data) {\r\n            console.log(\"Count Response Success:\" + JSON.stringify(data.json()));\r\n            _this.msgcount = data.json().msgcount;\r\n            _this.notcount = data.json().notifycount;\r\n        });\r\n        if (this.NP.get(\"record\")) {\r\n            console.log(this.NP.get(\"act\"));\r\n            this.isEdited = true;\r\n            this.selectEntry(this.NP.get(\"record\"));\r\n            // this.pageTitle = 'Edit Company Group';\r\n            this.readOnly = false;\r\n            this.hideActionButton = true;\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    AddenginedetailPage.prototype.selectEntry = function (item) {\r\n        this.enginemodel = item.model;\r\n        this.rawhtml = item.rawhtml;\r\n        this.recordID = item.model_id;\r\n        console.log(\"ID\" + this.recordID);\r\n    };\r\n    AddenginedetailPage.prototype.saveEntry = function () {\r\n        var _this = this;\r\n        if (this.isEdited) {\r\n            var body = \"is_mobile=1&model=\" + this.enginemodel +\r\n                \"&rawhtml=\" + this.rawhtml + \"&model_id=\" + this.recordID, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/enginemodel/update\";\r\n            console.log(url);\r\n            console.log(body);\r\n            this.http.post(url, body, options)\r\n                .subscribe(function (data) {\r\n                //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    _this.hideForm = true;\r\n                    _this.sendNotification(\"successfully Updated\");\r\n                    localStorage.setItem(\"userPhotoFile\", \"\");\r\n                    _this.navCtrl.setRoot(EnginedetailPage);\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            var body = \"is_mobile=1&model=\" + this.enginemodel +\r\n                \"&rawhtml=\" + this.rawhtml, type = \"application/x-www-form-urlencoded; charset=UTF-8\", headers = new Headers({ 'Content-Type': type }), options = new RequestOptions({ headers: headers }), url = this.apiServiceURL + \"/enginemodel\";\r\n            console.log(url);\r\n            console.log(body);\r\n            this.http.post(url, body, options)\r\n                .subscribe(function (data) {\r\n                //console.log(\"Response Success:\" + JSON.stringify(data.json()));\r\n                // If the request was successful notify the user\r\n                if (data.status === 200) {\r\n                    _this.hideForm = true;\r\n                    _this.sendNotification(\"successfully Added\");\r\n                    localStorage.setItem(\"userPhotoFile\", \"\");\r\n                    _this.navCtrl.setRoot(EnginedetailPage);\r\n                }\r\n                else {\r\n                    _this.sendNotification('Something went wrong!');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    AddenginedetailPage.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 3000\r\n        });\r\n        notification.present();\r\n    };\r\n    AddenginedetailPage.prototype.previous = function () {\r\n        this.navCtrl.setRoot(EnginedetailPage);\r\n    };\r\n    AddenginedetailPage.prototype.notification = function () {\r\n        this.navCtrl.setRoot(NotificationPage);\r\n    };\r\n    AddenginedetailPage.prototype.redirectToUser = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    AddenginedetailPage.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    AddenginedetailPage.prototype.redirectCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    AddenginedetailPage.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    AddenginedetailPage.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(OrgchartPage);\r\n    };\r\n    return AddenginedetailPage;\r\n}());\r\nAddenginedetailPage = __decorate([\r\n    Component({\r\n        selector: 'page-addenginedetail',\r\n        templateUrl: 'addenginedetail.html',\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object, typeof (_b = typeof Http !== \"undefined\" && Http) === \"function\" && _b || Object, typeof (_c = typeof NavParams !== \"undefined\" && NavParams) === \"function\" && _c || Object, typeof (_d = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" && _d || Object, typeof (_e = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _e || Object])\r\n], AddenginedetailPage);\r\nexport { AddenginedetailPage };\r\nvar _a, _b, _c, _d, _e;\r\n//# sourceMappingURL=addenginedetail.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/addenginedetail/addenginedetail.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { Http } from \"@angular/http\";\r\n/*\r\n  Generated class for the DataServiceProvider provider.\r\n\r\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\r\n  for more info on providers and Angular DI.\r\n*/\r\nvar DataServiceProvider = (function () {\r\n    function DataServiceProvider(http) {\r\n        this.http = http;\r\n        console.log('Hello DataServiceProvider Provider');\r\n    }\r\n    DataServiceProvider.prototype.getMenus = function () {\r\n        return this.http.get('assets/data/menus.json')\r\n            .map(function (response) { return response.json(); });\r\n    };\r\n    return DataServiceProvider;\r\n}());\r\nDataServiceProvider = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof Http !== \"undefined\" && Http) === \"function\" && _a || Object])\r\n], DataServiceProvider);\r\nexport { DataServiceProvider };\r\nvar _a;\r\n//# sourceMappingURL=data-service.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data-service/data-service.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { Nav, Platform, MenuController, ToastController, AlertController, NavController } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { HomePage } from '../pages/home/home';\r\n//import { DashboardPage } from '../pages/dashboard/dashboard';\r\nimport { UnitdetailsPage } from '../pages/unitdetails/unitdetails';\r\nimport { Unitgrouplist } from '../pages/unitgrouplist/unitgrouplist';\r\nimport { CompanygroupPage } from '../pages/companygroup/companygroup';\r\nimport { CompanydetailPage } from '../pages/companydetail/companydetail';\r\nimport { UserPage } from '../pages/user/user';\r\nimport { MyaccountPage } from '../pages/myaccount/myaccount';\r\nimport { UnitgroupPage } from '../pages/unitgroup/unitgroup';\r\nimport { RolePage } from '../pages/role/role';\r\nimport { ReporttemplatePage } from '../pages/reporttemplate/reporttemplate';\r\nimport { CalendardetailPage } from '../pages/calendardetail/calendardetail';\r\nimport { UnitsPage } from '../pages/units/units';\r\nimport { OrgchartPage } from '../pages/orgchart/orgchart';\r\n//import { AlarmPage } from '../pages/alarm/alarm';\r\nimport { AlarmlogPage } from '../pages/alarmlog/alarmlog';\r\nimport { AddalarmPage } from '../pages/addalarm/addalarm';\r\n//import { MessagesPage } from '../pages/messages/messages';\r\nimport { CalendarPage } from '../pages/calendar/calendar';\r\nimport { MapsPage } from '../pages/maps/maps';\r\nimport { ReportsPage } from '../pages/reports/reports';\r\nimport { AddenginedetailPage } from '../pages/addenginedetail/addenginedetail';\r\nimport { ServicedetailsPage } from '../pages/servicedetails/servicedetails';\r\nimport { AlarmdetailsPage } from '../pages/alarmdetails/alarmdetails';\r\nimport { CommentdetailsPage } from '../pages/commentdetails/commentdetails';\r\nimport { EnginedetailPage } from '../pages/enginedetail/enginedetail';\r\nimport { EmailPage } from '../pages/email/email';\r\nimport { EngineviewPage } from '../pages/engineview/engineview';\r\nimport { ForgotpasswordPage } from '../pages/forgotpassword/forgotpassword';\r\n//import { TrendlinePage } from '../pages/trendline/trendline';\r\nimport { DataServiceProvider } from '../providers/data-service/data-service';\r\nimport { Push } from '@ionic-native/push';\r\nimport { Network } from '@ionic-native/network';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications';\r\nvar MyApp = (function () {\r\n    ///private push: Push,\r\n    function MyApp(localNotifications, alertCtrl, network, push, platform, statusBar, splashScreen, dataService, menuCtrl, toastCtrl) {\r\n        var _this = this;\r\n        this.localNotifications = localNotifications;\r\n        this.alertCtrl = alertCtrl;\r\n        this.network = network;\r\n        this.push = push;\r\n        this.platform = platform;\r\n        this.statusBar = statusBar;\r\n        this.splashScreen = splashScreen;\r\n        this.dataService = dataService;\r\n        this.menuCtrl = menuCtrl;\r\n        this.toastCtrl = toastCtrl;\r\n        this.rootPage = HomePage;\r\n        this.showLevel1 = null;\r\n        this.showLevel2 = null;\r\n        this.initializeApp();\r\n        this.dataService.getMenus()\r\n            .subscribe(function (response) {\r\n            _this.pages = response;\r\n        });\r\n        this.pages = [\r\n            { title: 'Dashboard', component: HomePage },\r\n            { title: 'Company Group', component: CompanygroupPage },\r\n            { title: 'Users', component: UserPage },\r\n            { title: 'Unit Group', component: UnitgroupPage },\r\n            { title: 'Units', component: UnitsPage },\r\n            { title: 'Role', component: RolePage },\r\n            { title: 'My Account', component: MyaccountPage },\r\n            { title: 'Report Template', component: ReporttemplatePage },\r\n            { title: 'Org Chart', component: OrgchartPage },\r\n            { title: 'Maps', component: MapsPage },\r\n            { title: 'Calendar', component: CalendarPage },\r\n            { title: 'Reports', component: ReportsPage },\r\n            // { title: 'Alarm List', component: AlarmPage },\r\n            { title: 'Alarm', component: AddalarmPage },\r\n            { title: 'Alarm Log', component: AlarmlogPage },\r\n            { title: 'Service Details', component: ServicedetailsPage },\r\n            { title: 'Comment Details', component: CommentdetailsPage },\r\n            { title: 'Alarm Details', component: AlarmdetailsPage },\r\n            { title: 'Engine Details', Component: EnginedetailPage },\r\n            { title: 'Add Engine Details', Component: AddenginedetailPage },\r\n            { title: 'Engine Details', Component: EngineviewPage },\r\n            { title: 'ForgotPassword', Component: ForgotpasswordPage },\r\n            { title: 'Company Group Detail', Component: CompanydetailPage },\r\n            { title: 'Unit Group List', Component: Unitgrouplist },\r\n        ];\r\n    }\r\n    MyApp.prototype.initializeApp = function () {\r\n        var _this = this;\r\n        this.platform.ready().then(function () {\r\n            _this.platform.registerBackButtonAction(function () {\r\n                if (_this.nav.canGoBack()) {\r\n                    _this.nav.pop();\r\n                }\r\n                else {\r\n                    if (_this.alert) {\r\n                        _this.alert.dismiss();\r\n                        _this.alert = null;\r\n                    }\r\n                    else {\r\n                        _this.showAlertExist();\r\n                    }\r\n                }\r\n            });\r\n            _this.initPushNotification();\r\n            // Okay, so the platform is ready and our plugins are available.\r\n            // Here you can do any higher level native things you might need.\r\n            _this.statusBar.styleDefault();\r\n            setTimeout(function () {\r\n                _this.splashScreen.hide();\r\n            }, 100);\r\n            /// Set timer for click to edit unit details page\r\n            /*\r\n             var timer = 0;\r\n           setInterval(() => {\r\n               timer++;\r\n               console.log(\"Timer value of \" + timer);\r\n               let isclickedtounitdetails = 1;\r\n               let clicked = localStorage.getItem(\"unitdetailsclicked\");\r\n                console.log(\"Unit  \" + JSON.stringify(clicked));\r\n               if (clicked == undefined) {\r\n                 isclickedtounitdetails = 0;\r\n               }\r\n               if (clicked == 'undefined') {\r\n                 isclickedtounitdetails = 0;\r\n               }\r\n               if (clicked == '') {\r\n                 isclickedtounitdetails = 0;\r\n               }\r\n               if (isclickedtounitdetails > 0) {\r\n                 timer = 1;\r\n                 console.log(JSON.stringify(clicked))\r\n       \r\n                 //this.nav.setRoot(HomePage);\r\n                 this.callUnitDetails(clicked);\r\n                 //this.openPage(UnitsPage);\r\n               }\r\n       \r\n       \r\n             }, 1000);\r\n             setTimeout(function () {\r\n       \r\n             }, 3000);\r\n       */\r\n            /// Set timer for click to edit unit details page\r\n        });\r\n        // watch network for a disconnect\r\n        var disconnectSubscription = this.network.onDisconnect().subscribe(function () {\r\n            console.log('network was disconnected :-(');\r\n            _this.sendNotification('network was disconnected :-(');\r\n        });\r\n        // stop disconnect watch\r\n        disconnectSubscription.unsubscribe();\r\n        // watch network for a connection\r\n        var connectSubscription = this.network.onConnect().subscribe(function () {\r\n            console.log('network connected!');\r\n            _this.sendNotification('network connected!');\r\n            // We just got a connection but we need to wait briefly\r\n            // before we determine the connection type. Might need to wait.\r\n            // prior to doing any api requests as well.\r\n            setTimeout(function () {\r\n                if (_this.network.type === 'wifi') {\r\n                    console.log('we got a wifi connection, woohoo!');\r\n                    _this.sendNotification('we got a wifi connection, woohoo!');\r\n                }\r\n            }, 3000);\r\n        });\r\n        // stop connect watch\r\n        connectSubscription.unsubscribe();\r\n    };\r\n    MyApp.prototype.callUnitDetails = function (clicked) {\r\n        this.nav.setRoot(UnitdetailsPage, {\r\n            record: clicked\r\n        });\r\n    };\r\n    // Manage notifying the user of the outcome\r\n    // of remote operations\r\n    MyApp.prototype.sendNotification = function (message) {\r\n        var notification = this.toastCtrl.create({\r\n            message: message,\r\n            duration: 1000\r\n        });\r\n        notification.present();\r\n    };\r\n    MyApp.prototype.openPage = function (page) {\r\n        if (page.component == 'UnitsPage') {\r\n            this.nav.setRoot(UnitsPage);\r\n        }\r\n        else if (page.component == 'UnitgroupPage') {\r\n            this.nav.setRoot(UnitgroupPage);\r\n        }\r\n        else if (page.component == 'MyaccountPage') {\r\n            this.nav.setRoot(MyaccountPage);\r\n        }\r\n        else if (page.component == 'UserPage') {\r\n            this.nav.setRoot(UserPage);\r\n        }\r\n        else if (page.component == 'CompanygroupPage') {\r\n            this.nav.setRoot(CompanygroupPage);\r\n        }\r\n        else if (page.component == 'RolePage') {\r\n            this.nav.setRoot(RolePage);\r\n        }\r\n        else if (page.component == 'ReporttemplatePage') {\r\n            this.nav.setRoot(ReporttemplatePage);\r\n        }\r\n        else if (page.component == 'OrgchartPage') {\r\n            this.nav.setRoot(OrgchartPage);\r\n        }\r\n        else if (page.title == 'Message') {\r\n            this.menuCtrl.close();\r\n            this.nav.setRoot(EmailPage);\r\n        }\r\n        else if (page.title == 'Logout') {\r\n            this.logout();\r\n            this.menuCtrl.close();\r\n            //this.nav.setRoot(LogoutPage);\r\n        }\r\n        else if (page.title == 'Dashboard') {\r\n            this.menuCtrl.close();\r\n            this.nav.setRoot(HomePage);\r\n        }\r\n        else if (page.title == 'Calendar') {\r\n            this.menuCtrl.close();\r\n            this.nav.setRoot(CalendarPage);\r\n        }\r\n        else if (page.title == 'Maps') {\r\n            this.menuCtrl.close();\r\n            this.nav.setRoot(MapsPage);\r\n        }\r\n        else if (page.title == 'Reports') {\r\n            this.menuCtrl.close();\r\n            this.nav.setRoot(ReportsPage);\r\n        }\r\n        else if (page.title == 'Alarm') {\r\n            this.menuCtrl.close();\r\n            //this.nav.setRoot(AlarmPage);\r\n        }\r\n        else if (page.component == 'AddalarmPage') {\r\n            this.nav.setRoot(AddalarmPage);\r\n        }\r\n        else if (page.component == 'MapdemoPage') {\r\n            //this.nav.setRoot(MapdemoPage);\r\n        }\r\n        else if (page.component == 'EnginedetailPage') {\r\n            this.nav.setRoot(EnginedetailPage);\r\n        }\r\n    };\r\n    MyApp.prototype.toggleLevel1 = function (idx) {\r\n        if (this.isLevel1Shown(idx)) {\r\n            this.showLevel1 = null;\r\n        }\r\n        else {\r\n            this.showLevel1 = idx;\r\n        }\r\n    };\r\n    ;\r\n    MyApp.prototype.toggleLevel2 = function (idx) {\r\n        if (this.isLevel2Shown(idx)) {\r\n            this.showLevel1 = null;\r\n            this.showLevel2 = null;\r\n        }\r\n        else {\r\n            this.showLevel1 = idx;\r\n            this.showLevel2 = idx;\r\n        }\r\n    };\r\n    ;\r\n    MyApp.prototype.isLevel1Shown = function (idx) {\r\n        return this.showLevel1 === idx;\r\n    };\r\n    ;\r\n    MyApp.prototype.isLevel2Shown = function (idx) {\r\n        return this.showLevel2 === idx;\r\n    };\r\n    ;\r\n    MyApp.prototype.logout = function () {\r\n        localStorage.setItem(\"userInfo\", \"\");\r\n        localStorage.setItem(\"userInfoId\", \"\");\r\n        localStorage.setItem(\"userInfoName\", \"\");\r\n        localStorage.setItem(\"userInfoEmail\", \"\");\r\n        localStorage.setItem(\"userInfoCompanyId\", \"\");\r\n        localStorage.setItem(\"atMentionedStorage\", \"\");\r\n        localStorage.setItem(\"userPhotoFile\", \"\");\r\n        localStorage.setItem(\"DASHBOARD_MAP_VIEW\", '');\r\n        localStorage.setItem(\"DASHBOARD_MAP_CREATE\", '');\r\n        localStorage.setItem(\"DASHBOARD_MAP_EDIT\", '');\r\n        localStorage.setItem(\"DASHBOARD_MAP_DELETE\", '');\r\n        localStorage.setItem(\"DASHBOARD_MAP_HIDE\", '');\r\n        localStorage.setItem(\"DASHBOARD_UNITS_VIEW\", '');\r\n        localStorage.setItem(\"DASHBOARD_UNITS_CREATE\", '');\r\n        localStorage.setItem(\"DASHBOARD_UNITS_EDIT\", '');\r\n        localStorage.setItem(\"DASHBOARD_UNITS_DELETE\", '');\r\n        localStorage.setItem(\"DASHBOARD_UNITS_HIDE\", '');\r\n        this.nav.setRoot(HomePage);\r\n    };\r\n    MyApp.prototype.initPushNotification = function () {\r\n        var _this = this;\r\n        // to check if we have permission\r\n        this.push.hasPermission()\r\n            .then(function (res) {\r\n            if (res.isEnabled) {\r\n                console.log('We have permission to send push notifications');\r\n            }\r\n            else {\r\n                console.log('We do not have permission to send push notifications');\r\n            }\r\n        });\r\n        // to initialize push notifications\r\n        var options = {\r\n            android: {\r\n                senderID: '218019355699',\r\n                forceShow: false,\r\n                vibrate: true,\r\n                sound: 'true'\r\n            },\r\n            ios: {\r\n                alert: 'true',\r\n                badge: true,\r\n                sound: 'true'\r\n            },\r\n            windows: {}\r\n        };\r\n        var pushObject = this.push.init(options);\r\n        pushObject.on('notification').subscribe(function (notification) {\r\n            console.log('Received a new notification', notification);\r\n            //this.sendNotification('Received a new notification' + JSON.stringify(notification));\r\n            //this.showAlert(notification.title, notification.message);\r\n            _this.schedule(notification);\r\n        });\r\n        pushObject.on('registration').subscribe(function (registration) {\r\n            console.log('Device registered', registration);\r\n            console.log('Device Json registered', JSON.stringify(registration));\r\n            localStorage.setItem(\"deviceTokenForPushNotification\", registration.registrationId);\r\n        });\r\n        pushObject.on('error').subscribe(function (error) { return console.error('Error with Push plugin', error); });\r\n    };\r\n    MyApp.prototype.showAlert = function (title, message) {\r\n        var alert = this.alertCtrl.create({\r\n            title: title,\r\n            subTitle: message,\r\n            buttons: ['OK']\r\n        });\r\n        alert.present();\r\n    };\r\n    MyApp.prototype.showAlertExist = function () {\r\n        var _this = this;\r\n        this.alert = this.alertCtrl.create({\r\n            title: 'Exit?',\r\n            message: 'Do you want to exit the app?',\r\n            buttons: [\r\n                {\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    handler: function () {\r\n                        _this.alert = null;\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Exit',\r\n                    handler: function () {\r\n                        _this.platform.exitApp();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        this.alert.present();\r\n    };\r\n    MyApp.prototype.schedule = function (notification) {\r\n        var _this = this;\r\n        this.localNotifications.schedule({\r\n            title: notification.title,\r\n            text: notification.message,\r\n            at: new Date(new Date()),\r\n            sound: null\r\n        });\r\n        localStorage.setItem(\"navtype\", notification.additionalData.arrayval.type);\r\n        localStorage.setItem(\"navtid\", notification.additionalData.arrayval.id);\r\n        this.localNotifications.on(\"click\", function (notification, state) {\r\n            console.log(\"Local notification clicked...\");\r\n            console.log(\"1\" + notification);\r\n            console.log(\"2\" + state);\r\n            console.log(\"3\" + JSON.stringify(notification));\r\n            console.log(\"4\" + JSON.stringify(state));\r\n            /*console.log(\"5\" + notification.additionalData);\r\n            console.log(\"6\" + notification.additionalData.arrayval.id);\r\n            console.log(\"7\" + notification.additionalData.arrayval.type);\r\n            */\r\n            var navids = localStorage.getItem(\"navtid\");\r\n            var navtypes = localStorage.getItem(\"navtype\");\r\n            console.log(navids);\r\n            console.log(navtypes);\r\n            if (navtypes == 'M') {\r\n                // this.nav.setRoot(EmailPage);\r\n                _this.nav.setRoot(EmailPage, {\r\n                    record: navids,\r\n                    act: 'Push'\r\n                });\r\n            }\r\n            else if (navtypes == 'OA') {\r\n                _this.nav.setRoot(AlarmdetailsPage, {\r\n                    record: navids,\r\n                    act: 'Push'\r\n                });\r\n            }\r\n            else if (navtypes == 'A') {\r\n                //this.nav.setRoot(AlarmdetailsPage);\r\n                _this.nav.setRoot(AlarmdetailsPage, {\r\n                    record: navids,\r\n                    act: 'Push'\r\n                });\r\n            }\r\n            else if (navtypes == 'C') {\r\n                //this.nav.setRoot(CommentdetailsPage);\r\n                _this.nav.setRoot(CommentdetailsPage, {\r\n                    record: navids,\r\n                    act: 'Push'\r\n                });\r\n            }\r\n            else if (navtypes == 'E') {\r\n                _this.nav.setRoot(CalendardetailPage, {\r\n                    event_id: navids,\r\n                    act: 'Push'\r\n                });\r\n            }\r\n            else if (navtypes == 'S') {\r\n                // this.nav.setRoot(ServicedetailsPage);\r\n                _this.nav.setRoot(ServicedetailsPage, {\r\n                    record: navids,\r\n                    act: 'Push'\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return MyApp;\r\n}());\r\n__decorate([\r\n    ViewChild(Nav),\r\n    __metadata(\"design:type\", typeof (_a = typeof Nav !== \"undefined\" && Nav) === \"function\" && _a || Object)\r\n], MyApp.prototype, \"nav\", void 0);\r\n__decorate([\r\n    ViewChild('content'),\r\n    __metadata(\"design:type\", typeof (_b = typeof NavController !== \"undefined\" && NavController) === \"function\" && _b || Object)\r\n], MyApp.prototype, \"navCtrl\", void 0);\r\nMyApp = __decorate([\r\n    Component({\r\n        templateUrl: 'app.html',\r\n        providers: [Push, Network, LocalNotifications]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_c = typeof LocalNotifications !== \"undefined\" && LocalNotifications) === \"function\" && _c || Object, typeof (_d = typeof AlertController !== \"undefined\" && AlertController) === \"function\" && _d || Object, typeof (_e = typeof Network !== \"undefined\" && Network) === \"function\" && _e || Object, typeof (_f = typeof Push !== \"undefined\" && Push) === \"function\" && _f || Object, typeof (_g = typeof Platform !== \"undefined\" && Platform) === \"function\" && _g || Object, typeof (_h = typeof StatusBar !== \"undefined\" && StatusBar) === \"function\" && _h || Object, typeof (_j = typeof SplashScreen !== \"undefined\" && SplashScreen) === \"function\" && _j || Object, typeof (_k = typeof DataServiceProvider !== \"undefined\" && DataServiceProvider) === \"function\" && _k || Object, typeof (_l = typeof MenuController !== \"undefined\" && MenuController) === \"function\" && _l || Object, typeof (_m = typeof ToastController !== \"undefined\" && ToastController) === \"function\" && _m || Object])\r\n], MyApp);\r\nexport { MyApp };\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n//# sourceMappingURL=app.component.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, Input } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { HomePage } from '../pages/home/home';\r\nvar CustomHeaderComponent = (function () {\r\n    function CustomHeaderComponent(navCtrl) {\r\n        this.navCtrl = navCtrl;\r\n    }\r\n    Object.defineProperty(CustomHeaderComponent.prototype, \"header\", {\r\n        get: function () {\r\n            return this.header_data;\r\n        },\r\n        set: function (header_data) {\r\n            this.header_data = header_data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CustomHeaderComponent.prototype.homeClick = function () {\r\n        this.navCtrl.setRoot(HomePage);\r\n    };\r\n    return CustomHeaderComponent;\r\n}());\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], CustomHeaderComponent.prototype, \"header\", null);\r\nCustomHeaderComponent = __decorate([\r\n    Component({\r\n        selector: 'custom-header',\r\n        templateUrl: 'custom-header.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object])\r\n], CustomHeaderComponent);\r\nexport { CustomHeaderComponent };\r\nvar _a;\r\n//# sourceMappingURL=custom-header-component.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/custom-header-component.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Component, Input } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { MyaccountPage } from '../pages/myaccount/myaccount';\r\nimport { UnitsPage } from '../pages/units/units';\r\nimport { MapsPage } from '../pages/maps/maps';\r\nimport { CalendarPage } from '../pages/calendar/calendar';\r\nimport { EmailPage } from '../pages/email/email';\r\nvar CustomFooterComponent = (function () {\r\n    function CustomFooterComponent(navCtrl) {\r\n        this.navCtrl = navCtrl;\r\n    }\r\n    Object.defineProperty(CustomFooterComponent.prototype, \"footer\", {\r\n        get: function () {\r\n            return this.footer_data;\r\n        },\r\n        set: function (footer_data) {\r\n            this.footer_data = footer_data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CustomFooterComponent.prototype.redirectToUnits = function () {\r\n        this.navCtrl.setRoot(UnitsPage);\r\n    };\r\n    CustomFooterComponent.prototype.redirectToMessage = function () {\r\n        this.navCtrl.setRoot(EmailPage);\r\n    };\r\n    CustomFooterComponent.prototype.redirectToCalendar = function () {\r\n        this.navCtrl.setRoot(CalendarPage);\r\n    };\r\n    CustomFooterComponent.prototype.redirectToMaps = function () {\r\n        this.navCtrl.setRoot(MapsPage);\r\n    };\r\n    CustomFooterComponent.prototype.redirectToSettings = function () {\r\n        this.navCtrl.setRoot(MyaccountPage);\r\n    };\r\n    return CustomFooterComponent;\r\n}());\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Object),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], CustomFooterComponent.prototype, \"footer\", null);\r\nCustomFooterComponent = __decorate([\r\n    Component({\r\n        selector: 'custom-footer',\r\n        templateUrl: 'custom-footer.html'\r\n    }),\r\n    __metadata(\"design:paramtypes\", [typeof (_a = typeof NavController !== \"undefined\" && NavController) === \"function\" && _a || Object])\r\n], CustomFooterComponent);\r\nexport { CustomFooterComponent };\r\nvar _a;\r\n//# sourceMappingURL=custom-footer-component.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/custom-footer-component.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgCalendarModule } from 'ionic2-calendar';\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { DashboardPage } from '../pages/dashboard/dashboard';\r\nimport { CalendarPage } from '../pages/calendar/calendar';\r\nimport { CompanygroupPage } from '../pages/companygroup/companygroup';\r\nimport { AddcompanygroupPage } from '../pages/addcompanygroup/addcompanygroup';\r\nimport { ViewcompanygroupPage } from '../pages/viewcompanygroup/viewcompanygroup';\r\nimport { UserPage } from '../pages/user/user';\r\nimport { AdduserPage } from '../pages/adduser/adduser';\r\nimport { UseraccountPage } from '../pages/useraccount/useraccount';\r\nimport { UserorgchartPage } from '../pages/userorgchart/userorgchart';\r\nimport { MyaccountPage } from '../pages/myaccount/myaccount';\r\nimport { EditprofilesteponePage } from '../pages/editprofilestepone/editprofilestepone';\r\nimport { EditprofilesteptwoPage } from '../pages/editprofilesteptwo/editprofilesteptwo';\r\nimport { RolePage } from '../pages/role/role';\r\nimport { AddrolePage } from '../pages/addrole/addrole';\r\nimport { AddunitgroupPage } from '../pages/addunitgroup/addunitgroup';\r\nimport { UnitgroupPage } from '../pages/unitgroup/unitgroup';\r\nimport { UnitsPage } from '../pages/units/units';\r\nimport { AddunitsonePage } from '../pages/addunitsone/addunitsone';\r\nimport { AddunitstwoPage } from '../pages/addunitstwo/addunitstwo';\r\nimport { AddunitsthreePage } from '../pages/addunitsthree/addunitsthree';\r\nimport { AddunitsfourPage } from '../pages/addunitsfour/addunitsfour';\r\nimport { ReporttemplatePage } from '../pages/reporttemplate/reporttemplate';\r\nimport { AddorgchartonePage } from '../pages/addorgchartone/addorgchartone';\r\nimport { AddorgcharttwoPage } from '../pages/addorgcharttwo/addorgcharttwo';\r\nimport { OrgchartPage } from '../pages/orgchart/orgchart';\r\nimport { UnitdetailsPage } from '../pages/unitdetails/unitdetails';\r\nimport { ServicinginfoPage } from '../pages/servicinginfo/servicinginfo';\r\nimport { AddserviceinfoPage } from '../pages/addserviceinfo/addserviceinfo';\r\nimport { AddreporttemplatePage } from '../pages/addreporttemplate/addreporttemplate';\r\nimport { AddrequestsupportPage } from '../pages/addrequestsupport/addrequestsupport';\r\nimport { CommentsinfoPage } from '../pages/commentsinfo/commentsinfo';\r\nimport { AddcommentsinfoPage } from '../pages/addcommentsinfo/addcommentsinfo';\r\nimport { AddcalendarPage } from '../pages/addcalendar/addcalendar';\r\nimport { AlarmPage } from '../pages/alarm/alarm';\r\nimport { ReportviewtablePage } from '../pages/reportviewtable/reportviewtable';\r\nimport { AlarmlogPage } from '../pages/alarmlog/alarmlog';\r\nimport { AddalarmPage } from '../pages/addalarm/addalarm';\r\nimport { MapsPage } from '../pages/maps/maps';\r\nimport { ServicedetailsPage } from '../pages/servicedetails/servicedetails';\r\nimport { CommentdetailsPage } from '../pages/commentdetails/commentdetails';\r\nimport { AlarmdetailsPage } from '../pages/alarmdetails/alarmdetails';\r\nimport { NotificationPage } from '../pages/notification/notification';\r\nimport { ReportsPage } from '../pages/reports/reports';\r\nimport { AddenginedetailPage } from '../pages/addenginedetail/addenginedetail';\r\nimport { EnginedetailPage } from '../pages/enginedetail/enginedetail';\r\nimport { CalendardetailPage } from '../pages/calendardetail/calendardetail';\r\nimport { EnginedetailviewPage } from '../pages/enginedetailview/enginedetailview';\r\nimport { EngineviewPage } from '../pages/engineview/engineview';\r\nimport { ForgotpasswordPage } from '../pages/forgotpassword/forgotpassword';\r\nimport { EmailPage } from '../pages/email/email';\r\nimport { PopoverPage } from '../pages/popover/popover';\r\nimport { TrendlinePage } from '../pages/trendline/trendline';\r\nimport { DataServiceProvider } from '../providers/data-service/data-service';\r\nimport { ViewunitsPage } from '../pages/viewunits/viewunits';\r\nimport { AddalarmlistPage } from '../pages/addalarmlist/addalarmlist';\r\nimport { AlarmlistdetailPage } from '../pages/alarmlistdetail/alarmlistdetail';\r\nimport { NavbarComponent } from '../components/navbar/navbar';\r\nimport { CustomHeaderComponent } from '../pages/custom-header-component';\r\nimport { CustomFooterComponent } from '../pages/custom-footer-component';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { Deeplinks } from '@ionic-native/deeplinks';\r\nimport { CompanydetailPage } from '../pages/companydetail/companydetail';\r\nimport { Unitgrouplist } from '../pages/unitgrouplist/unitgrouplist';\r\nimport { CalendarComponent } from '../components/calendar/calendar.component';\r\n//import { CalendarNewEventModal } from '../pages/calendar/calendar-new-event-modal.component';\r\nimport { DragulaModule } from \"ng2-dragula/ng2-dragula\";\r\n//import { ITimer } from '../pages/maps/itimer';\r\nimport { GoogleMaps } from '@ionic-native/google-maps';\r\nvar AppModule = (function () {\r\n    function AppModule() {\r\n    }\r\n    return AppModule;\r\n}());\r\nAppModule = __decorate([\r\n    NgModule({\r\n        declarations: [\r\n            //ITimer,\r\n            MyApp,\r\n            HomePage,\r\n            AddalarmlistPage,\r\n            AlarmlistdetailPage,\r\n            DashboardPage,\r\n            CalendarPage,\r\n            CompanygroupPage,\r\n            AddcompanygroupPage,\r\n            ViewcompanygroupPage,\r\n            ReportviewtablePage,\r\n            UserPage,\r\n            AdduserPage,\r\n            UseraccountPage,\r\n            UserorgchartPage,\r\n            MyaccountPage,\r\n            UnitsPage,\r\n            AddunitsonePage,\r\n            AddunitstwoPage,\r\n            AddunitsthreePage,\r\n            AddunitsfourPage,\r\n            TrendlinePage,\r\n            EditprofilesteponePage,\r\n            EditprofilesteptwoPage,\r\n            RolePage,\r\n            AddrolePage,\r\n            AddunitgroupPage,\r\n            UnitgroupPage,\r\n            ReporttemplatePage,\r\n            AddorgchartonePage,\r\n            AddorgcharttwoPage,\r\n            OrgchartPage,\r\n            UnitdetailsPage,\r\n            ServicinginfoPage,\r\n            CommentsinfoPage,\r\n            AddcommentsinfoPage,\r\n            AddserviceinfoPage,\r\n            AddreporttemplatePage,\r\n            AddrequestsupportPage,\r\n            AddenginedetailPage,\r\n            EnginedetailPage,\r\n            CalendarPage,\r\n            CalendardetailPage,\r\n            AddcalendarPage,\r\n            AlarmPage,\r\n            AddalarmPage,\r\n            AlarmlogPage,\r\n            MapsPage,\r\n            ServicedetailsPage,\r\n            NotificationPage,\r\n            CommentdetailsPage,\r\n            AlarmdetailsPage,\r\n            ReportsPage,\r\n            EngineviewPage,\r\n            ForgotpasswordPage,\r\n            EmailPage,\r\n            PopoverPage,\r\n            ViewunitsPage,\r\n            TrendlinePage,\r\n            NavbarComponent,\r\n            CustomHeaderComponent,\r\n            EnginedetailviewPage,\r\n            CustomFooterComponent,\r\n            CompanydetailPage,\r\n            Unitgrouplist,\r\n            CalendarComponent\r\n            // CalendarNewEventModal\r\n        ],\r\n        imports: [\r\n            BrowserModule,\r\n            NgCalendarModule,\r\n            HttpModule,\r\n            DragulaModule,\r\n            IonicModule.forRoot(MyApp)\r\n        ],\r\n        bootstrap: [IonicApp],\r\n        entryComponents: [\r\n            MyApp,\r\n            HomePage,\r\n            AddalarmlistPage,\r\n            AlarmlistdetailPage,\r\n            DashboardPage,\r\n            CalendarPage,\r\n            CalendardetailPage,\r\n            CompanygroupPage,\r\n            AddcompanygroupPage,\r\n            ReportviewtablePage,\r\n            ViewcompanygroupPage,\r\n            AddenginedetailPage,\r\n            EnginedetailPage,\r\n            UserPage,\r\n            AdduserPage,\r\n            UseraccountPage,\r\n            UserorgchartPage,\r\n            MyaccountPage,\r\n            UnitsPage,\r\n            AddunitsonePage,\r\n            AddunitstwoPage,\r\n            AddunitsthreePage,\r\n            AddunitsfourPage,\r\n            EditprofilesteponePage,\r\n            EditprofilesteptwoPage,\r\n            RolePage,\r\n            TrendlinePage,\r\n            AddrolePage,\r\n            AddunitgroupPage,\r\n            UnitgroupPage,\r\n            ReporttemplatePage,\r\n            EnginedetailviewPage,\r\n            AddorgchartonePage,\r\n            AddorgcharttwoPage,\r\n            OrgchartPage,\r\n            UnitdetailsPage,\r\n            ServicinginfoPage,\r\n            CommentsinfoPage,\r\n            AddcommentsinfoPage,\r\n            AddserviceinfoPage,\r\n            AddreporttemplatePage,\r\n            AddrequestsupportPage,\r\n            CalendarPage,\r\n            AddcalendarPage,\r\n            AlarmPage,\r\n            AddalarmPage,\r\n            AlarmlogPage,\r\n            MapsPage,\r\n            ServicedetailsPage,\r\n            NotificationPage,\r\n            CommentdetailsPage,\r\n            AlarmdetailsPage,\r\n            ReportsPage,\r\n            EngineviewPage,\r\n            ForgotpasswordPage,\r\n            EmailPage,\r\n            PopoverPage,\r\n            ViewunitsPage,\r\n            TrendlinePage,\r\n            CustomHeaderComponent,\r\n            CustomFooterComponent,\r\n            CompanydetailPage,\r\n            Unitgrouplist,\r\n            CalendarComponent\r\n            // CalendarNewEventModal\r\n        ],\r\n        providers: [\r\n            StatusBar,\r\n            Deeplinks,\r\n            SplashScreen,\r\n            GoogleMaps,\r\n            Geolocation,\r\n            { provide: ErrorHandler, useClass: IonicErrorHandler },\r\n            DataServiceProvider\r\n        ]\r\n    })\r\n], AppModule);\r\nexport { AppModule };\r\n//# sourceMappingURL=app.module.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\r\n * @fileoverview This file is generated by the Angular template compiler.\r\n * Do not edit.\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\r\n */\r\n/* tslint:disable */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport * as import0 from '@angular/core';\r\nimport * as import1 from './app.module';\r\nimport * as import2 from '@angular/common';\r\nimport * as import3 from 'ionic-angular/util/ionic-error-handler';\r\nimport * as import4 from 'ionic-angular/platform/dom-controller';\r\nimport * as import5 from 'ionic-angular/components/app/menu-controller';\r\nimport * as import6 from 'ionic-angular/components/app/app';\r\nimport * as import7 from 'ionic-angular/gestures/gesture-controller';\r\nimport * as import8 from 'ionic-angular/util/ng-module-loader';\r\nimport * as import9 from '@angular/platform-browser';\r\nimport * as import10 from '@angular/forms';\r\nimport * as import11 from 'ionic-angular/module';\r\nimport * as import12 from 'ionic2-calendar/calendar.module';\r\nimport * as import13 from '@angular/http';\r\nimport * as import14 from 'ng2-dragula/components/dragular.module';\r\nimport * as import15 from 'ionic-angular/gestures/gesture-config';\r\nimport * as import16 from 'ng2-dragula/components/dragula.provider';\r\nimport * as import17 from 'ionic-angular/components/action-sheet/action-sheet-controller';\r\nimport * as import18 from 'ionic-angular/components/alert/alert-controller';\r\nimport * as import19 from 'ionic-angular/util/events';\r\nimport * as import20 from 'ionic-angular/util/form';\r\nimport * as import21 from 'ionic-angular/tap-click/haptic';\r\nimport * as import22 from 'ionic-angular/platform/keyboard';\r\nimport * as import23 from 'ionic-angular/components/loading/loading-controller';\r\nimport * as import24 from 'ionic-angular/components/modal/modal-controller';\r\nimport * as import25 from 'ionic-angular/components/picker/picker-controller';\r\nimport * as import26 from 'ionic-angular/components/popover/popover-controller';\r\nimport * as import27 from 'ionic-angular/tap-click/tap-click';\r\nimport * as import28 from 'ionic-angular/components/toast/toast-controller';\r\nimport * as import29 from 'ionic-angular/transitions/transition-controller';\r\nimport * as import30 from '@ionic-native/status-bar/index';\r\nimport * as import31 from '@ionic-native/deeplinks/index';\r\nimport * as import32 from '@ionic-native/splash-screen/index';\r\nimport * as import33 from '@ionic-native/google-maps/index';\r\nimport * as import34 from '@ionic-native/geolocation/index';\r\nimport * as import35 from '../providers/data-service/data-service';\r\nimport * as import36 from '../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory';\r\nimport * as import37 from '../../node_modules/ionic-angular/components/alert/alert-component.ngfactory';\r\nimport * as import38 from '../../node_modules/ionic-angular/components/app/app-root.ngfactory';\r\nimport * as import39 from '../../node_modules/ionic-angular/components/loading/loading-component.ngfactory';\r\nimport * as import40 from '../../node_modules/ionic-angular/components/modal/modal-component.ngfactory';\r\nimport * as import41 from '../../node_modules/ionic-angular/components/picker/picker-component.ngfactory';\r\nimport * as import42 from '../../node_modules/ionic-angular/components/popover/popover-component.ngfactory';\r\nimport * as import43 from '../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory';\r\nimport * as import44 from '../../node_modules/ionic-angular/components/toast/toast-component.ngfactory';\r\nimport * as import45 from '../../node_modules/ionic2-calendar/calendar.ngfactory';\r\nimport * as import46 from './app.component.ngfactory';\r\nimport * as import47 from '../pages/home/home.ngfactory';\r\nimport * as import48 from '../pages/addalarmlist/addalarmlist.ngfactory';\r\nimport * as import49 from '../pages/alarmlistdetail/alarmlistdetail.ngfactory';\r\nimport * as import50 from '../pages/dashboard/dashboard.ngfactory';\r\nimport * as import51 from '../pages/calendar/calendar.ngfactory';\r\nimport * as import52 from '../pages/calendardetail/calendardetail.ngfactory';\r\nimport * as import53 from '../pages/companygroup/companygroup.ngfactory';\r\nimport * as import54 from '../pages/addcompanygroup/addcompanygroup.ngfactory';\r\nimport * as import55 from '../pages/reportviewtable/reportviewtable.ngfactory';\r\nimport * as import56 from '../pages/viewcompanygroup/viewcompanygroup.ngfactory';\r\nimport * as import57 from '../pages/addenginedetail/addenginedetail.ngfactory';\r\nimport * as import58 from '../pages/enginedetail/enginedetail.ngfactory';\r\nimport * as import59 from '../pages/user/user.ngfactory';\r\nimport * as import60 from '../pages/adduser/adduser.ngfactory';\r\nimport * as import61 from '../pages/useraccount/useraccount.ngfactory';\r\nimport * as import62 from '../pages/userorgchart/userorgchart.ngfactory';\r\nimport * as import63 from '../pages/myaccount/myaccount.ngfactory';\r\nimport * as import64 from '../pages/units/units.ngfactory';\r\nimport * as import65 from '../pages/addunitsone/addunitsone.ngfactory';\r\nimport * as import66 from '../pages/addunitstwo/addunitstwo.ngfactory';\r\nimport * as import67 from '../pages/addunitsthree/addunitsthree.ngfactory';\r\nimport * as import68 from '../pages/addunitsfour/addunitsfour.ngfactory';\r\nimport * as import69 from '../pages/editprofilestepone/editprofilestepone.ngfactory';\r\nimport * as import70 from '../pages/editprofilesteptwo/editprofilesteptwo.ngfactory';\r\nimport * as import71 from '../pages/role/role.ngfactory';\r\nimport * as import72 from '../pages/trendline/trendline.ngfactory';\r\nimport * as import73 from '../pages/addrole/addrole.ngfactory';\r\nimport * as import74 from '../pages/addunitgroup/addunitgroup.ngfactory';\r\nimport * as import75 from '../pages/unitgroup/unitgroup.ngfactory';\r\nimport * as import76 from '../pages/reporttemplate/reporttemplate.ngfactory';\r\nimport * as import77 from '../pages/enginedetailview/enginedetailview.ngfactory';\r\nimport * as import78 from '../pages/addorgchartone/addorgchartone.ngfactory';\r\nimport * as import79 from '../pages/addorgcharttwo/addorgcharttwo.ngfactory';\r\nimport * as import80 from '../pages/orgchart/orgchart.ngfactory';\r\nimport * as import81 from '../pages/unitdetails/unitdetails.ngfactory';\r\nimport * as import82 from '../pages/servicinginfo/servicinginfo.ngfactory';\r\nimport * as import83 from '../pages/commentsinfo/commentsinfo.ngfactory';\r\nimport * as import84 from '../pages/addcommentsinfo/addcommentsinfo.ngfactory';\r\nimport * as import85 from '../pages/addserviceinfo/addserviceinfo.ngfactory';\r\nimport * as import86 from '../pages/addreporttemplate/addreporttemplate.ngfactory';\r\nimport * as import87 from '../pages/addrequestsupport/addrequestsupport.ngfactory';\r\nimport * as import88 from '../pages/addcalendar/addcalendar.ngfactory';\r\nimport * as import89 from '../pages/alarm/alarm.ngfactory';\r\nimport * as import90 from '../pages/addalarm/addalarm.ngfactory';\r\nimport * as import91 from '../pages/alarmlog/alarmlog.ngfactory';\r\nimport * as import92 from '../pages/maps/maps.ngfactory';\r\nimport * as import93 from '../pages/servicedetails/servicedetails.ngfactory';\r\nimport * as import94 from '../pages/notification/notification.ngfactory';\r\nimport * as import95 from '../pages/commentdetails/commentdetails.ngfactory';\r\nimport * as import96 from '../pages/alarmdetails/alarmdetails.ngfactory';\r\nimport * as import97 from '../pages/reports/reports.ngfactory';\r\nimport * as import98 from '../pages/engineview/engineview.ngfactory';\r\nimport * as import99 from '../pages/forgotpassword/forgotpassword.ngfactory';\r\nimport * as import100 from '../pages/email/email.ngfactory';\r\nimport * as import101 from '../pages/popover/popover.ngfactory';\r\nimport * as import102 from '../pages/viewunits/viewunits.ngfactory';\r\nimport * as import103 from '../pages/custom-header-component.ngfactory';\r\nimport * as import104 from '../pages/custom-footer-component.ngfactory';\r\nimport * as import105 from '../pages/companydetail/companydetail.ngfactory';\r\nimport * as import106 from '../pages/unitgrouplist/unitgrouplist.ngfactory';\r\nimport * as import107 from '../components/calendar/calendar.component.ngfactory';\r\nimport * as import108 from 'ionic-angular/navigation/url-serializer';\r\nimport * as import109 from 'ionic-angular/navigation/deep-linker';\r\nimport * as import110 from 'ionic-angular/platform/platform-registry';\r\nimport * as import111 from 'ionic-angular/platform/platform';\r\nimport * as import112 from 'ionic-angular/config/config';\r\nimport * as import113 from 'ionic-angular/util/module-loader';\r\nimport * as import114 from 'ionic-angular/config/mode-registry';\r\nimport * as import115 from './app.component';\r\nimport * as import116 from 'ionic-angular/components/app/app-root';\r\nvar AppModuleInjector = (function (_super) {\r\n    __extends(AppModuleInjector, _super);\r\n    function AppModuleInjector(parent) {\r\n        return _super.call(this, parent, [\r\n            import36.ActionSheetCmpNgFactory,\r\n            import37.AlertCmpNgFactory,\r\n            import38.IonicAppNgFactory,\r\n            import39.LoadingCmpNgFactory,\r\n            import40.ModalCmpNgFactory,\r\n            import41.PickerCmpNgFactory,\r\n            import42.PopoverCmpNgFactory,\r\n            import43.SelectPopoverNgFactory,\r\n            import44.ToastCmpNgFactory,\r\n            import45.CalendarComponentNgFactory,\r\n            import46.MyAppNgFactory,\r\n            import47.HomePageNgFactory,\r\n            import48.AddalarmlistPageNgFactory,\r\n            import49.AlarmlistdetailPageNgFactory,\r\n            import50.DashboardPageNgFactory,\r\n            import51.CalendarPageNgFactory,\r\n            import52.CalendardetailPageNgFactory,\r\n            import53.CompanygroupPageNgFactory,\r\n            import54.AddcompanygroupPageNgFactory,\r\n            import55.ReportviewtablePageNgFactory,\r\n            import56.ViewcompanygroupPageNgFactory,\r\n            import57.AddenginedetailPageNgFactory,\r\n            import58.EnginedetailPageNgFactory,\r\n            import59.UserPageNgFactory,\r\n            import60.AdduserPageNgFactory,\r\n            import61.UseraccountPageNgFactory,\r\n            import62.UserorgchartPageNgFactory,\r\n            import63.MyaccountPageNgFactory,\r\n            import64.UnitsPageNgFactory,\r\n            import65.AddunitsonePageNgFactory,\r\n            import66.AddunitstwoPageNgFactory,\r\n            import67.AddunitsthreePageNgFactory,\r\n            import68.AddunitsfourPageNgFactory,\r\n            import69.EditprofilesteponePageNgFactory,\r\n            import70.EditprofilesteptwoPageNgFactory,\r\n            import71.RolePageNgFactory,\r\n            import72.TrendlinePageNgFactory,\r\n            import73.AddrolePageNgFactory,\r\n            import74.AddunitgroupPageNgFactory,\r\n            import75.UnitgroupPageNgFactory,\r\n            import76.ReporttemplatePageNgFactory,\r\n            import77.EnginedetailviewPageNgFactory,\r\n            import78.AddorgchartonePageNgFactory,\r\n            import79.AddorgcharttwoPageNgFactory,\r\n            import80.OrgchartPageNgFactory,\r\n            import81.UnitdetailsPageNgFactory,\r\n            import82.ServicinginfoPageNgFactory,\r\n            import83.CommentsinfoPageNgFactory,\r\n            import84.AddcommentsinfoPageNgFactory,\r\n            import85.AddserviceinfoPageNgFactory,\r\n            import86.AddreporttemplatePageNgFactory,\r\n            import87.AddrequestsupportPageNgFactory,\r\n            import88.AddcalendarPageNgFactory,\r\n            import89.AlarmPageNgFactory,\r\n            import90.AddalarmPageNgFactory,\r\n            import91.AlarmlogPageNgFactory,\r\n            import92.MapsPageNgFactory,\r\n            import93.ServicedetailsPageNgFactory,\r\n            import94.NotificationPageNgFactory,\r\n            import95.CommentdetailsPageNgFactory,\r\n            import96.AlarmdetailsPageNgFactory,\r\n            import97.ReportsPageNgFactory,\r\n            import98.EngineviewPageNgFactory,\r\n            import99.ForgotpasswordPageNgFactory,\r\n            import100.EmailPageNgFactory,\r\n            import101.PopoverPageNgFactory,\r\n            import102.ViewunitsPageNgFactory,\r\n            import103.CustomHeaderComponentNgFactory,\r\n            import104.CustomFooterComponentNgFactory,\r\n            import105.CompanydetailPageNgFactory,\r\n            import106.UnitgrouplistNgFactory,\r\n            import107.CalendarComponentNgFactory\r\n        ], [import38.IonicAppNgFactory]) || this;\r\n    }\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_LOCALE_ID_28\", {\r\n        get: function () {\r\n            if ((this.__LOCALE_ID_28 == null)) {\r\n                (this.__LOCALE_ID_28 = import0.ɵn(this.parent.get(import0.LOCALE_ID, null)));\r\n            }\r\n            return this.__LOCALE_ID_28;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_NgLocalization_29\", {\r\n        get: function () {\r\n            if ((this.__NgLocalization_29 == null)) {\r\n                (this.__NgLocalization_29 = new import2.NgLocaleLocalization(this._LOCALE_ID_28));\r\n            }\r\n            return this.__NgLocalization_29;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_APP_ID_30\", {\r\n        get: function () {\r\n            if ((this.__APP_ID_30 == null)) {\r\n                (this.__APP_ID_30 = import0.ɵg());\r\n            }\r\n            return this.__APP_ID_30;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_IterableDiffers_31\", {\r\n        get: function () {\r\n            if ((this.__IterableDiffers_31 == null)) {\r\n                (this.__IterableDiffers_31 = import0.ɵl());\r\n            }\r\n            return this.__IterableDiffers_31;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_KeyValueDiffers_32\", {\r\n        get: function () {\r\n            if ((this.__KeyValueDiffers_32 == null)) {\r\n                (this.__KeyValueDiffers_32 = import0.ɵm());\r\n            }\r\n            return this.__KeyValueDiffers_32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_DomSanitizer_33\", {\r\n        get: function () {\r\n            if ((this.__DomSanitizer_33 == null)) {\r\n                (this.__DomSanitizer_33 = new import9.ɵe(this.parent.get(import9.DOCUMENT)));\r\n            }\r\n            return this.__DomSanitizer_33;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Sanitizer_34\", {\r\n        get: function () {\r\n            if ((this.__Sanitizer_34 == null)) {\r\n                (this.__Sanitizer_34 = this._DomSanitizer_33);\r\n            }\r\n            return this.__Sanitizer_34;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_HAMMER_GESTURE_CONFIG_35\", {\r\n        get: function () {\r\n            if ((this.__HAMMER_GESTURE_CONFIG_35 == null)) {\r\n                (this.__HAMMER_GESTURE_CONFIG_35 = new import15.IonicGestureConfig());\r\n            }\r\n            return this.__HAMMER_GESTURE_CONFIG_35;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_EVENT_MANAGER_PLUGINS_36\", {\r\n        get: function () {\r\n            if ((this.__EVENT_MANAGER_PLUGINS_36 == null)) {\r\n                (this.__EVENT_MANAGER_PLUGINS_36 = [\r\n                    new import9.ɵDomEventsPlugin(this.parent.get(import9.DOCUMENT)),\r\n                    new import9.ɵKeyEventsPlugin(this.parent.get(import9.DOCUMENT)),\r\n                    new import9.ɵHammerGesturesPlugin(this.parent.get(import9.DOCUMENT), this._HAMMER_GESTURE_CONFIG_35)\r\n                ]);\r\n            }\r\n            return this.__EVENT_MANAGER_PLUGINS_36;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_EventManager_37\", {\r\n        get: function () {\r\n            if ((this.__EventManager_37 == null)) {\r\n                (this.__EventManager_37 = new import9.EventManager(this._EVENT_MANAGER_PLUGINS_36, this.parent.get(import0.NgZone)));\r\n            }\r\n            return this.__EventManager_37;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275DomSharedStylesHost_38\", {\r\n        get: function () {\r\n            if ((this.__ɵDomSharedStylesHost_38 == null)) {\r\n                (this.__ɵDomSharedStylesHost_38 = new import9.ɵDomSharedStylesHost(this.parent.get(import9.DOCUMENT)));\r\n            }\r\n            return this.__ɵDomSharedStylesHost_38;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275DomRendererFactory2_39\", {\r\n        get: function () {\r\n            if ((this.__ɵDomRendererFactory2_39 == null)) {\r\n                (this.__ɵDomRendererFactory2_39 = new import9.ɵDomRendererFactory2(this._EventManager_37, this._ɵDomSharedStylesHost_38));\r\n            }\r\n            return this.__ɵDomRendererFactory2_39;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_RendererFactory2_40\", {\r\n        get: function () {\r\n            if ((this.__RendererFactory2_40 == null)) {\r\n                (this.__RendererFactory2_40 = this._ɵDomRendererFactory2_39);\r\n            }\r\n            return this.__RendererFactory2_40;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275SharedStylesHost_41\", {\r\n        get: function () {\r\n            if ((this.__ɵSharedStylesHost_41 == null)) {\r\n                (this.__ɵSharedStylesHost_41 = this._ɵDomSharedStylesHost_38);\r\n            }\r\n            return this.__ɵSharedStylesHost_41;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Testability_42\", {\r\n        get: function () {\r\n            if ((this.__Testability_42 == null)) {\r\n                (this.__Testability_42 = new import0.Testability(this.parent.get(import0.NgZone)));\r\n            }\r\n            return this.__Testability_42;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Meta_43\", {\r\n        get: function () {\r\n            if ((this.__Meta_43 == null)) {\r\n                (this.__Meta_43 = new import9.Meta(this.parent.get(import9.DOCUMENT)));\r\n            }\r\n            return this.__Meta_43;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Title_44\", {\r\n        get: function () {\r\n            if ((this.__Title_44 == null)) {\r\n                (this.__Title_44 = new import9.Title(this.parent.get(import9.DOCUMENT)));\r\n            }\r\n            return this.__Title_44;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_\\u0275i_45\", {\r\n        get: function () {\r\n            if ((this.__ɵi_45 == null)) {\r\n                (this.__ɵi_45 = new import10.ɵi());\r\n            }\r\n            return this.__ɵi_45;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_FormBuilder_46\", {\r\n        get: function () {\r\n            if ((this.__FormBuilder_46 == null)) {\r\n                (this.__FormBuilder_46 = new import10.FormBuilder());\r\n            }\r\n            return this.__FormBuilder_46;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_BrowserXhr_47\", {\r\n        get: function () {\r\n            if ((this.__BrowserXhr_47 == null)) {\r\n                (this.__BrowserXhr_47 = new import13.BrowserXhr());\r\n            }\r\n            return this.__BrowserXhr_47;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_ResponseOptions_48\", {\r\n        get: function () {\r\n            if ((this.__ResponseOptions_48 == null)) {\r\n                (this.__ResponseOptions_48 = new import13.BaseResponseOptions());\r\n            }\r\n            return this.__ResponseOptions_48;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_XSRFStrategy_49\", {\r\n        get: function () {\r\n            if ((this.__XSRFStrategy_49 == null)) {\r\n                (this.__XSRFStrategy_49 = import13.ɵb());\r\n            }\r\n            return this.__XSRFStrategy_49;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_XHRBackend_50\", {\r\n        get: function () {\r\n            if ((this.__XHRBackend_50 == null)) {\r\n                (this.__XHRBackend_50 = new import13.XHRBackend(this._BrowserXhr_47, this._ResponseOptions_48, this._XSRFStrategy_49));\r\n            }\r\n            return this.__XHRBackend_50;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_RequestOptions_51\", {\r\n        get: function () {\r\n            if ((this.__RequestOptions_51 == null)) {\r\n                (this.__RequestOptions_51 = new import13.BaseRequestOptions());\r\n            }\r\n            return this.__RequestOptions_51;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Http_52\", {\r\n        get: function () {\r\n            if ((this.__Http_52 == null)) {\r\n                (this.__Http_52 = import13.ɵc(this._XHRBackend_50, this._RequestOptions_51));\r\n            }\r\n            return this.__Http_52;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_DragulaService_53\", {\r\n        get: function () {\r\n            if ((this.__DragulaService_53 == null)) {\r\n                (this.__DragulaService_53 = new import16.DragulaService());\r\n            }\r\n            return this.__DragulaService_53;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_ActionSheetController_56\", {\r\n        get: function () {\r\n            if ((this.__ActionSheetController_56 == null)) {\r\n                (this.__ActionSheetController_56 = new import17.ActionSheetController(this._App_8, this._Config_5));\r\n            }\r\n            return this.__ActionSheetController_56;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_AlertController_57\", {\r\n        get: function () {\r\n            if ((this.__AlertController_57 == null)) {\r\n                (this.__AlertController_57 = new import18.AlertController(this._App_8, this._Config_5));\r\n            }\r\n            return this.__AlertController_57;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Events_58\", {\r\n        get: function () {\r\n            if ((this.__Events_58 == null)) {\r\n                (this.__Events_58 = new import19.Events());\r\n            }\r\n            return this.__Events_58;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Form_59\", {\r\n        get: function () {\r\n            if ((this.__Form_59 == null)) {\r\n                (this.__Form_59 = new import20.Form());\r\n            }\r\n            return this.__Form_59;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Haptic_60\", {\r\n        get: function () {\r\n            if ((this.__Haptic_60 == null)) {\r\n                (this.__Haptic_60 = new import21.Haptic(this._Platform_4));\r\n            }\r\n            return this.__Haptic_60;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Keyboard_61\", {\r\n        get: function () {\r\n            if ((this.__Keyboard_61 == null)) {\r\n                (this.__Keyboard_61 = new import22.Keyboard(this._Config_5, this._Platform_4, this.parent.get(import0.NgZone), this._DomController_6));\r\n            }\r\n            return this.__Keyboard_61;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_LoadingController_62\", {\r\n        get: function () {\r\n            if ((this.__LoadingController_62 == null)) {\r\n                (this.__LoadingController_62 = new import23.LoadingController(this._App_8, this._Config_5));\r\n            }\r\n            return this.__LoadingController_62;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_LocationStrategy_63\", {\r\n        get: function () {\r\n            if ((this.__LocationStrategy_63 == null)) {\r\n                (this.__LocationStrategy_63 = import11.provideLocationStrategy(this.parent.get(import2.PlatformLocation), this._APP_BASE_HREF_55, this._Config_5));\r\n            }\r\n            return this.__LocationStrategy_63;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Location_64\", {\r\n        get: function () {\r\n            if ((this.__Location_64 == null)) {\r\n                (this.__Location_64 = new import2.Location(this._LocationStrategy_63));\r\n            }\r\n            return this.__Location_64;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_UrlSerializer_65\", {\r\n        get: function () {\r\n            if ((this.__UrlSerializer_65 == null)) {\r\n                (this.__UrlSerializer_65 = import108.setupUrlSerializer(this._DeepLinkConfigToken_10));\r\n            }\r\n            return this.__UrlSerializer_65;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_DeepLinker_66\", {\r\n        get: function () {\r\n            if ((this.__DeepLinker_66 == null)) {\r\n                (this.__DeepLinker_66 = import109.setupDeepLinker(this._App_8, this._UrlSerializer_65, this._Location_64, this._ModuleLoader_13, this.componentFactoryResolver));\r\n            }\r\n            return this.__DeepLinker_66;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_ModalController_67\", {\r\n        get: function () {\r\n            if ((this.__ModalController_67 == null)) {\r\n                (this.__ModalController_67 = new import24.ModalController(this._App_8, this._Config_5, this._DeepLinker_66));\r\n            }\r\n            return this.__ModalController_67;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_PickerController_68\", {\r\n        get: function () {\r\n            if ((this.__PickerController_68 == null)) {\r\n                (this.__PickerController_68 = new import25.PickerController(this._App_8, this._Config_5));\r\n            }\r\n            return this.__PickerController_68;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_PopoverController_69\", {\r\n        get: function () {\r\n            if ((this.__PopoverController_69 == null)) {\r\n                (this.__PopoverController_69 = new import26.PopoverController(this._App_8, this._Config_5, this._DeepLinker_66));\r\n            }\r\n            return this.__PopoverController_69;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_TapClick_70\", {\r\n        get: function () {\r\n            if ((this.__TapClick_70 == null)) {\r\n                (this.__TapClick_70 = new import27.TapClick(this._Config_5, this._Platform_4, this._DomController_6, this._App_8, this._GestureController_9));\r\n            }\r\n            return this.__TapClick_70;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_ToastController_71\", {\r\n        get: function () {\r\n            if ((this.__ToastController_71 == null)) {\r\n                (this.__ToastController_71 = new import28.ToastController(this._App_8, this._Config_5));\r\n            }\r\n            return this.__ToastController_71;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_TransitionController_72\", {\r\n        get: function () {\r\n            if ((this.__TransitionController_72 == null)) {\r\n                (this.__TransitionController_72 = new import29.TransitionController(this._Platform_4, this._Config_5));\r\n            }\r\n            return this.__TransitionController_72;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_StatusBar_73\", {\r\n        get: function () {\r\n            if ((this.__StatusBar_73 == null)) {\r\n                (this.__StatusBar_73 = new import30.StatusBar());\r\n            }\r\n            return this.__StatusBar_73;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Deeplinks_74\", {\r\n        get: function () {\r\n            if ((this.__Deeplinks_74 == null)) {\r\n                (this.__Deeplinks_74 = new import31.Deeplinks());\r\n            }\r\n            return this.__Deeplinks_74;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_SplashScreen_75\", {\r\n        get: function () {\r\n            if ((this.__SplashScreen_75 == null)) {\r\n                (this.__SplashScreen_75 = new import32.SplashScreen());\r\n            }\r\n            return this.__SplashScreen_75;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_GoogleMaps_76\", {\r\n        get: function () {\r\n            if ((this.__GoogleMaps_76 == null)) {\r\n                (this.__GoogleMaps_76 = new import33.GoogleMaps());\r\n            }\r\n            return this.__GoogleMaps_76;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_Geolocation_77\", {\r\n        get: function () {\r\n            if ((this.__Geolocation_77 == null)) {\r\n                (this.__Geolocation_77 = new import34.Geolocation());\r\n            }\r\n            return this.__Geolocation_77;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AppModuleInjector.prototype, \"_DataServiceProvider_78\", {\r\n        get: function () {\r\n            if ((this.__DataServiceProvider_78 == null)) {\r\n                (this.__DataServiceProvider_78 = new import35.DataServiceProvider(this._Http_52));\r\n            }\r\n            return this.__DataServiceProvider_78;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AppModuleInjector.prototype.createInternal = function () {\r\n        this._CommonModule_0 = new import2.CommonModule();\r\n        this._ErrorHandler_1 = new import3.IonicErrorHandler();\r\n        this._ConfigToken_2 = null;\r\n        this._PlatformConfigToken_3 = import110.providePlatformConfigs();\r\n        this._Platform_4 = import111.setupPlatform(this.parent.get(import9.DOCUMENT), this._PlatformConfigToken_3, this.parent.get(import0.NgZone));\r\n        this._Config_5 = import112.setupConfig(this._ConfigToken_2, this._Platform_4);\r\n        this._DomController_6 = new import4.DomController(this._Platform_4);\r\n        this._MenuController_7 = new import5.MenuController();\r\n        this._App_8 = new import6.App(this._Config_5, this._Platform_4, this._MenuController_7);\r\n        this._GestureController_9 = new import7.GestureController(this._App_8);\r\n        this._DeepLinkConfigToken_10 = null;\r\n        this._Compiler_11 = new import0.Compiler();\r\n        this._NgModuleLoader_12 = new import8.NgModuleLoader(this._Compiler_11);\r\n        this._ModuleLoader_13 = import113.provideModuleLoader(this._NgModuleLoader_12, this);\r\n        this._APP_INITIALIZER_14 = [\r\n            import0.ɵo,\r\n            import9.ɵc(this.parent.get(import9.NgProbeToken, null), this.parent.get(import0.NgProbeToken, null)),\r\n            import114.registerModeConfigs(this._Config_5),\r\n            import19.setupProvideEvents(this._Platform_4, this._DomController_6),\r\n            import27.setupTapClick(this._Config_5, this._Platform_4, this._DomController_6, this._App_8, this._GestureController_9),\r\n            import113.setupPreloading(this._Config_5, this._DeepLinkConfigToken_10, this._ModuleLoader_13, this.parent.get(import0.NgZone))\r\n        ];\r\n        this._ApplicationInitStatus_15 = new import0.ApplicationInitStatus(this._APP_INITIALIZER_14);\r\n        this._ɵf_16 = new import0.ɵf(this.parent.get(import0.NgZone), this.parent.get(import0.ɵConsole), this, this._ErrorHandler_1, this.componentFactoryResolver, this._ApplicationInitStatus_15);\r\n        this._ApplicationRef_17 = this._ɵf_16;\r\n        this._ApplicationModule_18 = new import0.ApplicationModule(this._ApplicationRef_17);\r\n        this._BrowserModule_19 = new import9.BrowserModule(this.parent.get(import9.BrowserModule, null));\r\n        this._ɵba_20 = new import10.ɵba();\r\n        this._FormsModule_21 = new import10.FormsModule();\r\n        this._ReactiveFormsModule_22 = new import10.ReactiveFormsModule();\r\n        this._IonicModule_23 = new import11.IonicModule();\r\n        this._NgCalendarModule_24 = new import12.NgCalendarModule();\r\n        this._HttpModule_25 = new import13.HttpModule();\r\n        this._DragulaModule_26 = new import14.DragulaModule();\r\n        this._AppModule_27 = new import1.AppModule();\r\n        this._AppRootToken_54 = import115.MyApp;\r\n        this._APP_BASE_HREF_55 = '/';\r\n        return this._AppModule_27;\r\n    };\r\n    AppModuleInjector.prototype.getInternal = function (token, notFoundResult) {\r\n        if ((token === import2.CommonModule)) {\r\n            return this._CommonModule_0;\r\n        }\r\n        if ((token === import0.ErrorHandler)) {\r\n            return this._ErrorHandler_1;\r\n        }\r\n        if ((token === import112.ConfigToken)) {\r\n            return this._ConfigToken_2;\r\n        }\r\n        if ((token === import110.PlatformConfigToken)) {\r\n            return this._PlatformConfigToken_3;\r\n        }\r\n        if ((token === import111.Platform)) {\r\n            return this._Platform_4;\r\n        }\r\n        if ((token === import112.Config)) {\r\n            return this._Config_5;\r\n        }\r\n        if ((token === import4.DomController)) {\r\n            return this._DomController_6;\r\n        }\r\n        if ((token === import5.MenuController)) {\r\n            return this._MenuController_7;\r\n        }\r\n        if ((token === import6.App)) {\r\n            return this._App_8;\r\n        }\r\n        if ((token === import7.GestureController)) {\r\n            return this._GestureController_9;\r\n        }\r\n        if ((token === import108.DeepLinkConfigToken)) {\r\n            return this._DeepLinkConfigToken_10;\r\n        }\r\n        if ((token === import0.Compiler)) {\r\n            return this._Compiler_11;\r\n        }\r\n        if ((token === import8.NgModuleLoader)) {\r\n            return this._NgModuleLoader_12;\r\n        }\r\n        if ((token === import113.ModuleLoader)) {\r\n            return this._ModuleLoader_13;\r\n        }\r\n        if ((token === import0.APP_INITIALIZER)) {\r\n            return this._APP_INITIALIZER_14;\r\n        }\r\n        if ((token === import0.ApplicationInitStatus)) {\r\n            return this._ApplicationInitStatus_15;\r\n        }\r\n        if ((token === import0.ɵf)) {\r\n            return this._ɵf_16;\r\n        }\r\n        if ((token === import0.ApplicationRef)) {\r\n            return this._ApplicationRef_17;\r\n        }\r\n        if ((token === import0.ApplicationModule)) {\r\n            return this._ApplicationModule_18;\r\n        }\r\n        if ((token === import9.BrowserModule)) {\r\n            return this._BrowserModule_19;\r\n        }\r\n        if ((token === import10.ɵba)) {\r\n            return this._ɵba_20;\r\n        }\r\n        if ((token === import10.FormsModule)) {\r\n            return this._FormsModule_21;\r\n        }\r\n        if ((token === import10.ReactiveFormsModule)) {\r\n            return this._ReactiveFormsModule_22;\r\n        }\r\n        if ((token === import11.IonicModule)) {\r\n            return this._IonicModule_23;\r\n        }\r\n        if ((token === import12.NgCalendarModule)) {\r\n            return this._NgCalendarModule_24;\r\n        }\r\n        if ((token === import13.HttpModule)) {\r\n            return this._HttpModule_25;\r\n        }\r\n        if ((token === import14.DragulaModule)) {\r\n            return this._DragulaModule_26;\r\n        }\r\n        if ((token === import1.AppModule)) {\r\n            return this._AppModule_27;\r\n        }\r\n        if ((token === import0.LOCALE_ID)) {\r\n            return this._LOCALE_ID_28;\r\n        }\r\n        if ((token === import2.NgLocalization)) {\r\n            return this._NgLocalization_29;\r\n        }\r\n        if ((token === import0.APP_ID)) {\r\n            return this._APP_ID_30;\r\n        }\r\n        if ((token === import0.IterableDiffers)) {\r\n            return this._IterableDiffers_31;\r\n        }\r\n        if ((token === import0.KeyValueDiffers)) {\r\n            return this._KeyValueDiffers_32;\r\n        }\r\n        if ((token === import9.DomSanitizer)) {\r\n            return this._DomSanitizer_33;\r\n        }\r\n        if ((token === import0.Sanitizer)) {\r\n            return this._Sanitizer_34;\r\n        }\r\n        if ((token === import9.HAMMER_GESTURE_CONFIG)) {\r\n            return this._HAMMER_GESTURE_CONFIG_35;\r\n        }\r\n        if ((token === import9.EVENT_MANAGER_PLUGINS)) {\r\n            return this._EVENT_MANAGER_PLUGINS_36;\r\n        }\r\n        if ((token === import9.EventManager)) {\r\n            return this._EventManager_37;\r\n        }\r\n        if ((token === import9.ɵDomSharedStylesHost)) {\r\n            return this._ɵDomSharedStylesHost_38;\r\n        }\r\n        if ((token === import9.ɵDomRendererFactory2)) {\r\n            return this._ɵDomRendererFactory2_39;\r\n        }\r\n        if ((token === import0.RendererFactory2)) {\r\n            return this._RendererFactory2_40;\r\n        }\r\n        if ((token === import9.ɵSharedStylesHost)) {\r\n            return this._ɵSharedStylesHost_41;\r\n        }\r\n        if ((token === import0.Testability)) {\r\n            return this._Testability_42;\r\n        }\r\n        if ((token === import9.Meta)) {\r\n            return this._Meta_43;\r\n        }\r\n        if ((token === import9.Title)) {\r\n            return this._Title_44;\r\n        }\r\n        if ((token === import10.ɵi)) {\r\n            return this._ɵi_45;\r\n        }\r\n        if ((token === import10.FormBuilder)) {\r\n            return this._FormBuilder_46;\r\n        }\r\n        if ((token === import13.BrowserXhr)) {\r\n            return this._BrowserXhr_47;\r\n        }\r\n        if ((token === import13.ResponseOptions)) {\r\n            return this._ResponseOptions_48;\r\n        }\r\n        if ((token === import13.XSRFStrategy)) {\r\n            return this._XSRFStrategy_49;\r\n        }\r\n        if ((token === import13.XHRBackend)) {\r\n            return this._XHRBackend_50;\r\n        }\r\n        if ((token === import13.RequestOptions)) {\r\n            return this._RequestOptions_51;\r\n        }\r\n        if ((token === import13.Http)) {\r\n            return this._Http_52;\r\n        }\r\n        if ((token === import16.DragulaService)) {\r\n            return this._DragulaService_53;\r\n        }\r\n        if ((token === import116.AppRootToken)) {\r\n            return this._AppRootToken_54;\r\n        }\r\n        if ((token === import2.APP_BASE_HREF)) {\r\n            return this._APP_BASE_HREF_55;\r\n        }\r\n        if ((token === import17.ActionSheetController)) {\r\n            return this._ActionSheetController_56;\r\n        }\r\n        if ((token === import18.AlertController)) {\r\n            return this._AlertController_57;\r\n        }\r\n        if ((token === import19.Events)) {\r\n            return this._Events_58;\r\n        }\r\n        if ((token === import20.Form)) {\r\n            return this._Form_59;\r\n        }\r\n        if ((token === import21.Haptic)) {\r\n            return this._Haptic_60;\r\n        }\r\n        if ((token === import22.Keyboard)) {\r\n            return this._Keyboard_61;\r\n        }\r\n        if ((token === import23.LoadingController)) {\r\n            return this._LoadingController_62;\r\n        }\r\n        if ((token === import2.LocationStrategy)) {\r\n            return this._LocationStrategy_63;\r\n        }\r\n        if ((token === import2.Location)) {\r\n            return this._Location_64;\r\n        }\r\n        if ((token === import108.UrlSerializer)) {\r\n            return this._UrlSerializer_65;\r\n        }\r\n        if ((token === import109.DeepLinker)) {\r\n            return this._DeepLinker_66;\r\n        }\r\n        if ((token === import24.ModalController)) {\r\n            return this._ModalController_67;\r\n        }\r\n        if ((token === import25.PickerController)) {\r\n            return this._PickerController_68;\r\n        }\r\n        if ((token === import26.PopoverController)) {\r\n            return this._PopoverController_69;\r\n        }\r\n        if ((token === import27.TapClick)) {\r\n            return this._TapClick_70;\r\n        }\r\n        if ((token === import28.ToastController)) {\r\n            return this._ToastController_71;\r\n        }\r\n        if ((token === import29.TransitionController)) {\r\n            return this._TransitionController_72;\r\n        }\r\n        if ((token === import30.StatusBar)) {\r\n            return this._StatusBar_73;\r\n        }\r\n        if ((token === import31.Deeplinks)) {\r\n            return this._Deeplinks_74;\r\n        }\r\n        if ((token === import32.SplashScreen)) {\r\n            return this._SplashScreen_75;\r\n        }\r\n        if ((token === import33.GoogleMaps)) {\r\n            return this._GoogleMaps_76;\r\n        }\r\n        if ((token === import34.Geolocation)) {\r\n            return this._Geolocation_77;\r\n        }\r\n        if ((token === import35.DataServiceProvider)) {\r\n            return this._DataServiceProvider_78;\r\n        }\r\n        return notFoundResult;\r\n    };\r\n    AppModuleInjector.prototype.destroyInternal = function () {\r\n        this._ɵf_16.ngOnDestroy();\r\n        (this.__ɵDomSharedStylesHost_38 && this._ɵDomSharedStylesHost_38.ngOnDestroy());\r\n    };\r\n    return AppModuleInjector;\r\n}(import0.ɵNgModuleInjector));\r\nexport var AppModuleNgFactory = new import0.NgModuleFactory(AppModuleInjector, import1.AppModule);\r\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiQzovaW9uaWMvZGVueW9yZWFsL3NyYy9hcHAvYXBwLm1vZHVsZS5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9DOi9pb25pYy9kZW55b3JlYWwvc3JjL2FwcC9hcHAubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIiAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==\r\n//# sourceMappingURL=app.module.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ngfactory.ts","var map = {\n\t\"./af\": 178,\n\t\"./af.js\": 178,\n\t\"./ar\": 179,\n\t\"./ar-dz\": 180,\n\t\"./ar-dz.js\": 180,\n\t\"./ar-kw\": 181,\n\t\"./ar-kw.js\": 181,\n\t\"./ar-ly\": 182,\n\t\"./ar-ly.js\": 182,\n\t\"./ar-ma\": 183,\n\t\"./ar-ma.js\": 183,\n\t\"./ar-sa\": 184,\n\t\"./ar-sa.js\": 184,\n\t\"./ar-tn\": 185,\n\t\"./ar-tn.js\": 185,\n\t\"./ar.js\": 179,\n\t\"./az\": 186,\n\t\"./az.js\": 186,\n\t\"./be\": 187,\n\t\"./be.js\": 187,\n\t\"./bg\": 188,\n\t\"./bg.js\": 188,\n\t\"./bn\": 189,\n\t\"./bn.js\": 189,\n\t\"./bo\": 190,\n\t\"./bo.js\": 190,\n\t\"./br\": 191,\n\t\"./br.js\": 191,\n\t\"./bs\": 192,\n\t\"./bs.js\": 192,\n\t\"./ca\": 193,\n\t\"./ca.js\": 193,\n\t\"./cs\": 194,\n\t\"./cs.js\": 194,\n\t\"./cv\": 195,\n\t\"./cv.js\": 195,\n\t\"./cy\": 196,\n\t\"./cy.js\": 196,\n\t\"./da\": 197,\n\t\"./da.js\": 197,\n\t\"./de\": 198,\n\t\"./de-at\": 199,\n\t\"./de-at.js\": 199,\n\t\"./de-ch\": 200,\n\t\"./de-ch.js\": 200,\n\t\"./de.js\": 198,\n\t\"./dv\": 201,\n\t\"./dv.js\": 201,\n\t\"./el\": 202,\n\t\"./el.js\": 202,\n\t\"./en-au\": 203,\n\t\"./en-au.js\": 203,\n\t\"./en-ca\": 204,\n\t\"./en-ca.js\": 204,\n\t\"./en-gb\": 205,\n\t\"./en-gb.js\": 205,\n\t\"./en-ie\": 206,\n\t\"./en-ie.js\": 206,\n\t\"./en-nz\": 207,\n\t\"./en-nz.js\": 207,\n\t\"./eo\": 208,\n\t\"./eo.js\": 208,\n\t\"./es\": 209,\n\t\"./es-do\": 210,\n\t\"./es-do.js\": 210,\n\t\"./es.js\": 209,\n\t\"./et\": 211,\n\t\"./et.js\": 211,\n\t\"./eu\": 212,\n\t\"./eu.js\": 212,\n\t\"./fa\": 213,\n\t\"./fa.js\": 213,\n\t\"./fi\": 214,\n\t\"./fi.js\": 214,\n\t\"./fo\": 215,\n\t\"./fo.js\": 215,\n\t\"./fr\": 216,\n\t\"./fr-ca\": 217,\n\t\"./fr-ca.js\": 217,\n\t\"./fr-ch\": 218,\n\t\"./fr-ch.js\": 218,\n\t\"./fr.js\": 216,\n\t\"./fy\": 219,\n\t\"./fy.js\": 219,\n\t\"./gd\": 220,\n\t\"./gd.js\": 220,\n\t\"./gl\": 221,\n\t\"./gl.js\": 221,\n\t\"./gom-latn\": 222,\n\t\"./gom-latn.js\": 222,\n\t\"./he\": 223,\n\t\"./he.js\": 223,\n\t\"./hi\": 224,\n\t\"./hi.js\": 224,\n\t\"./hr\": 225,\n\t\"./hr.js\": 225,\n\t\"./hu\": 226,\n\t\"./hu.js\": 226,\n\t\"./hy-am\": 227,\n\t\"./hy-am.js\": 227,\n\t\"./id\": 228,\n\t\"./id.js\": 228,\n\t\"./is\": 229,\n\t\"./is.js\": 229,\n\t\"./it\": 230,\n\t\"./it.js\": 230,\n\t\"./ja\": 231,\n\t\"./ja.js\": 231,\n\t\"./jv\": 232,\n\t\"./jv.js\": 232,\n\t\"./ka\": 233,\n\t\"./ka.js\": 233,\n\t\"./kk\": 234,\n\t\"./kk.js\": 234,\n\t\"./km\": 235,\n\t\"./km.js\": 235,\n\t\"./kn\": 236,\n\t\"./kn.js\": 236,\n\t\"./ko\": 237,\n\t\"./ko.js\": 237,\n\t\"./ky\": 238,\n\t\"./ky.js\": 238,\n\t\"./lb\": 239,\n\t\"./lb.js\": 239,\n\t\"./lo\": 240,\n\t\"./lo.js\": 240,\n\t\"./lt\": 241,\n\t\"./lt.js\": 241,\n\t\"./lv\": 242,\n\t\"./lv.js\": 242,\n\t\"./me\": 243,\n\t\"./me.js\": 243,\n\t\"./mi\": 244,\n\t\"./mi.js\": 244,\n\t\"./mk\": 245,\n\t\"./mk.js\": 245,\n\t\"./ml\": 246,\n\t\"./ml.js\": 246,\n\t\"./mr\": 247,\n\t\"./mr.js\": 247,\n\t\"./ms\": 248,\n\t\"./ms-my\": 249,\n\t\"./ms-my.js\": 249,\n\t\"./ms.js\": 248,\n\t\"./my\": 250,\n\t\"./my.js\": 250,\n\t\"./nb\": 251,\n\t\"./nb.js\": 251,\n\t\"./ne\": 252,\n\t\"./ne.js\": 252,\n\t\"./nl\": 253,\n\t\"./nl-be\": 254,\n\t\"./nl-be.js\": 254,\n\t\"./nl.js\": 253,\n\t\"./nn\": 255,\n\t\"./nn.js\": 255,\n\t\"./pa-in\": 256,\n\t\"./pa-in.js\": 256,\n\t\"./pl\": 257,\n\t\"./pl.js\": 257,\n\t\"./pt\": 258,\n\t\"./pt-br\": 259,\n\t\"./pt-br.js\": 259,\n\t\"./pt.js\": 258,\n\t\"./ro\": 260,\n\t\"./ro.js\": 260,\n\t\"./ru\": 261,\n\t\"./ru.js\": 261,\n\t\"./sd\": 262,\n\t\"./sd.js\": 262,\n\t\"./se\": 263,\n\t\"./se.js\": 263,\n\t\"./si\": 264,\n\t\"./si.js\": 264,\n\t\"./sk\": 265,\n\t\"./sk.js\": 265,\n\t\"./sl\": 266,\n\t\"./sl.js\": 266,\n\t\"./sq\": 267,\n\t\"./sq.js\": 267,\n\t\"./sr\": 268,\n\t\"./sr-cyrl\": 269,\n\t\"./sr-cyrl.js\": 269,\n\t\"./sr.js\": 268,\n\t\"./ss\": 270,\n\t\"./ss.js\": 270,\n\t\"./sv\": 271,\n\t\"./sv.js\": 271,\n\t\"./sw\": 272,\n\t\"./sw.js\": 272,\n\t\"./ta\": 273,\n\t\"./ta.js\": 273,\n\t\"./te\": 274,\n\t\"./te.js\": 274,\n\t\"./tet\": 275,\n\t\"./tet.js\": 275,\n\t\"./th\": 276,\n\t\"./th.js\": 276,\n\t\"./tl-ph\": 277,\n\t\"./tl-ph.js\": 277,\n\t\"./tlh\": 278,\n\t\"./tlh.js\": 278,\n\t\"./tr\": 279,\n\t\"./tr.js\": 279,\n\t\"./tzl\": 280,\n\t\"./tzl.js\": 280,\n\t\"./tzm\": 281,\n\t\"./tzm-latn\": 282,\n\t\"./tzm-latn.js\": 282,\n\t\"./tzm.js\": 281,\n\t\"./uk\": 283,\n\t\"./uk.js\": 283,\n\t\"./ur\": 284,\n\t\"./ur.js\": 284,\n\t\"./uz\": 285,\n\t\"./uz-latn\": 286,\n\t\"./uz-latn.js\": 286,\n\t\"./uz.js\": 285,\n\t\"./vi\": 287,\n\t\"./vi.js\": 287,\n\t\"./x-pseudo\": 288,\n\t\"./x-pseudo.js\": 288,\n\t\"./yo\": 289,\n\t\"./yo.js\": 289,\n\t\"./zh-cn\": 290,\n\t\"./zh-cn.js\": 290,\n\t\"./zh-hk\": 291,\n\t\"./zh-hk.js\": 291,\n\t\"./zh-tw\": 292,\n\t\"./zh-tw.js\": 292\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 339;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 339\n// module chunks = 0"]}